%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Campione and Evans Fig 4.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Nicolas Campione
%%CreationDate: 5/29/12
%%BoundingBox: 0 0 482 230
%%HiResBoundingBox: 0 0 481.4839 229.5723
%%CropBox: 0 0 481.4839 229.5723
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Figure 4</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2012-05-29T15:49:44-04:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-29T15:49:45-04:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-29T15:49:45-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>124</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6toP5VeYU88+bNZ1+8t7&#xA;nRvNDxzPa2ktzFcQyafOP0fSQcOlt9soV4sABy+1iqL81aOE85+VdFg1PVbWxvLHURcGDUb0yt9S&#xA;S19J6mV+b05AlgS3Ik1Y1xVMn/Ly1Ctx8weY2ZQaL+kbkVIFaVpTvirA7TUo5YLV5tN/MiOW44K4&#xA;Vroojn0A9S7ROEVrg/E6LURuabCqrr3V9NsfqiXVv+Yomu0Ro44muZSXe1humiUB+TOizsjALUNH&#xA;J/LXFUXZsl1dtbrY/mLGql1FxNM0cbMk4goC04NG5B1Yjjw+KuxoqlNj5o0y+l1K3t9P/Mhr/SUh&#xA;kvrD1gLhBcsFiHD6z1YfHT+UE9jiqJXVQ5UppH5lsJHtYok5ypJzuY/UJf1JUjSOKqrI5eitUGgF&#xA;Sqr3M1xa6hPBJp35gXFqsQmtrq0uZpA4MAmKOkjQlJOR9MKC3xdSuKs78seVrC80dJ7m61hpvVuE&#xA;Jn1XUElCx3EkaiRY7gIGCqAePfFU1/wVo/8Ay0ap/wBxfU/+ynFXf4K0f/lo1T/uL6n/ANlOKu/w&#xA;Vo//AC0ap/3F9T/7KcVd/grR/wDlo1T/ALi+p/8AZTiqGuPKmjLzVLvU09MVmmbVtT4Rild/9Jpy&#xA;p2+k+8wABZSASaCUrocMmrW8ccetHSGjlrfDWb4EzxlQkbRNc+o3qAswKCi8fiO9FhEGRbckBAV/&#xA;F+Px+zcxHUPy38z+bbv8s/NVtew8dGsLGa8kvJZGnMnqWty8grFK0pkSF0b97GxLbsV5Ky0s01fy&#xA;D5hvdWuLy1813tlbTS+rHZqZmWIExEqhE6ClY2IDKQCQKcPUSRVLPMfmbzVotxbC2t9a163uL25g&#xA;uG06K0d7aKFFZCV+qsrFy3FeTqPfFWp/O+qx/EumebnjSaGGdhp1lyUTxhw6IsTNIsZbjIRstG3+&#xA;yGVQcnn7zUdPsdQt9A81GCaaaO/t5rWyju4UijR1kjgW2l9USvLwTkybhiaAE4qr2/5jSXcF3cWV&#xA;p5svIbSWaB3t7DT5A0kAlLhOKfF8UHH/AFmUd9lXQ+f9XkvILc6N5yC3KxyJN+jbEJGkiqT65eNO&#xA;DozEMo5dK/JVmWlW9/qGmWl/+k9TtPrcMc/1W6hs4riL1FDenNH9XPF1rRhXY4qiv0RqH/V7vf8A&#xA;gLL/ALJsVd+iNQ/6vd7/AMBZf9k2KsL82+YfNfl+zv7qwj1fzJJBqC2cdjYRWhlRHsFnWRuNpIeH&#xA;rsEY0+ENy348Sql2p/mVq2n6gIpNJ82PYERKL1bC0BM0j+l6KxvbqGYSMoHxUbcrWg5Kog+d/NH6&#xA;HtNRXRvM5eSWOO9sza2gmjR7RrlnhT6qTJwcLD8YjHM9dsVQ1r+ac15Y3d3Z6Z5xuvqFz9Su4IdP&#xA;0x5o5whd1KAV+ACjU6EjxGKoy28+atNqE9mdI84oImbhcNp1ksTIjFWbk0SivwsyqtSy0pVm44qn&#xA;5uNVufJ8uuQahqthM1lJcx2l/b2cVxEyxswWaI254sCNxXFWXYqwfzUQPzQ8lkv6Y+p61WTb4f3d&#xA;rvvUbe+INJAtkV5LF9RuyupTSEQSnjAYWlFEO8YRQS46r75I5AeQH2/rZHFIbkF88aB5o9TSbO4/&#xA;xf5pm/3I6dD9euIuLfvYrM/V5IPr+6y9WfgaMCPi9TjcRYJhrPnWO0sBotr+Z+p6NfFJ+VtLpg1W&#xA;4nA4wvL6yyXEtqxnSUqkk8bR8lHBFUVVUpPzOWYIkf5qX+nSm2tZLUyeXZLkoZLZXKyLH63qOFlD&#xA;OX+GrCjMV+FVNNZ83yWUJ1yL8zNSvX0S1+pastnpCn1Xu7+S2huBDJ6dnzimKowSNnZENPtVxVnf&#xA;kHztp9xr15oV55sl8waxePPe2Fk+lS6cbSyhlaFo3/dLUpKjKXkYE/DQb1ZV6HiqWeXf+OfL/wAx&#xA;t/8A9Rs2KpnirsVdiqXavrFnYWF3fXVwtrp9jG819evXjGkYq/HrVgB2r9+2TAERZSASaCUXFkdb&#xA;hspfrE9pp0c8dzZ29tIFe7CVJE5PPlDJyBbv3r4xAMzZ5OQSMew+r8fj7+4SKC34H1HoZacRT7KL&#xA;/Kg7Dbfx+6kpS6Dk4zy2684S6H5Q8k2ME9/Hd6ho8T2Vtplot3NcS28FuWjKtFcURY3Z2ooJA2YZ&#xA;BWV+ZtO/Me6vdPm8v6ra2VosHHULeeIVaYyRsJEJjuDxCBwUqKjbkCQ6qpt5cE6xXwndZJfrs3J0&#xA;Uop3FKKWcjb3xVN8VdirsVdiqGS+R9SlsBG/OGGOd5fh4UlZ0VRvy5fum/Zp74qicVdiqVaN/wAd&#xA;HXv+Y5P+oG2xVNcVdirsVdiqWeaP+UZ1f/mCuP8Ak02Kt+ZbnXrbQ7ufQLOO/wBXRQbS0mk9JHPI&#xA;BqsaCoWpAJFTtyWtQqxSez1rUvPHld9WC6dfW+jajOJLKRZCLhn09J14TROgVTIyru9RvtirKv0R&#xA;qH/V7vf+Asv+ybFXfojUP+r3e/8AAWX/AGTYq79Eah/1e73/AICy/wCybFXfojUP+r3e/wDAWX/Z&#xA;Nirv0RqH/V7vf+Asv+ybFXfojUP+r3e/8BZf9k2Ku/RGof8AV7vf+Asv+ybFUTpmnrYWgtllkn/e&#xA;SytLLw5s00jSsTwVF+05pRcVRWKuxVLNW1COKwuJmuFtLWNG53jVIBAOyiq1HiQflvuJ7R3PP8fi&#xA;vmyhAyNBhnkrSdYuXsdQ1fUBr8SafH+jNQjnCQXnryvM88llCv1eIIvpqjryJQ8anvERMt5cm+Ux&#xA;jFR59S9Bhg4Euzc5n+3J0+hRvRR2H6zvhlK/c4yrkVeK655f8wX2ifllqWk2R1EWWnrDNZRaq+jz&#xA;SGeyi4lZ4iJDwEbOQhrQHYgnFWdeadT/ADNtdXsIvLmj2d7pkkFdQnmlAeKf1EAVOUsJZCnKrcdv&#xA;tfER6bqpz5cM7RXxnRY5frs3JEYuo3FKMVQnb2xVN8VdirsVdiqWW/8Ayk1//wAwVn/ydusVTPFX&#xA;YqlWjf8AHR17/mOT/qBtsVTXFXYq7FXYqlnmj/lGdX/5grj/AJNNiqZ4qxy//wDJi6H/ANsjV/8A&#xA;qK03FWR4q7FXYq7FXYq7FXYq7FXEgCp6Yqwfzr+aflby/bXnq3K313ZIJJtGsZYnv3Rl5CQwc1dY&#xA;QvxF6fZ3+z9qwkQ/rfd+37vfynCBmaDGPynm/wAazt58n1ebUZZWaKy0T/SLe00xl5JIjxGQxTNw&#xA;KKD6Yqy8huSVhGN+qXJsnMRHDH4nvesWdlb2cCQwKERFCqFAUBVFFUKoAVVGwA2GGUraFfIq7FXi&#xA;H5i2enXv5NeTIL/T7zU7ZYrCWaDT7c3c6ILB09b0VkgNEeRaEuFDFeQcfAyr0XzX5r1/RbzT4dL8&#xA;vTa1a3KM1zPC8imCjoqLxSCVWL8zT4lApVuK1YKpn5ckeSK+d4mhY3s1YnKlhQgb8GdfuOKpvirs&#xA;VdirsVSW2kuv8ZajEYALUafZMtxzqS/rXQKcKbbb1riqdYq7FUq0b/jo69/zHJ/1A22KprirsVdi&#xA;rsVSzzR/yjOr/wDMFcf8mmxV5d+U/mzyS/mfz/qVtrqz2cdxFLd385jis0SSe7aMxXDXdzzX7Qqw&#xA;jFACqhTQKs3Oq6Zf/mHojWN5BdqNF1KWsEiSD05p9MeJ/hJ+GRPiU9xuMVZbirsVdirsVdirsVdi&#xA;rTMqKWYhVUVZjsAB1JOEC1YD+a/mzVdI8sTTaG4fXBNZ/UNLELXMtystyqFZIU+NYpFV15fd8VBk&#xA;jIQ5fUzx4zL3BiX5V+StXvtatfPuq6Ouh+ZLmS+fVo55LmWdhcLEsLcZJF9FRSThBKH4JwpTrgjD&#xA;+KTOeQVwx5fe9ogt4oE4RilSWc92ZjVmNO5OCUraVTArsVdirxDz8LG3/KryTfz2U12/1W1tZBb/&#xA;AFuRlt2sDcyMbe1vdM9RVa1RmLy0RQWpir0LzT+ZPl/ytqNhpV9DdS3N7CZYfq0QeNY1kSL4nZlU&#xA;HlIOKgksfhFWZFZVNvLkyTxX0qBgrXs1A6NG2xA3VwrD6Riqb4q7FXYq7FUst/8AlJr/AP5grP8A&#xA;5O3WKpnirsVSrRv+Ojr3/Mcn/UDbYqmuKuxV2KuxVLPNH/KM6v8A8wVx/wAmmxV5v+V3lvyPpure&#xA;ZNFhi1i8kvb3ldJrtpC9hNPZSM3rWk1tAloTyIbjz5jiPhVlbFWazwQW/n7QILeNYYItG1VIoo1C&#xA;oqrc6aAqqKAADFWTYq7FXYq7FXYq7FVskiRoXdgqjqThAJ2CvJv+cg/NfmnQ/JxudHc2fKrS3KUe&#xA;eOjpHCFiDxuWkmlUcgSEA3UsVpKUhHYc2zHiMt+UR1Xflf5BsHvU89i5v01nVk9a5glE9pDavMrG&#xA;6txazEswa5lkkUSVVdivQFhGIG5/H7E5Ml7R2j+Nz5vV440jQIgoo+k1O5JJ3JJ6nASSbLUuwK7F&#xA;XYq7FXhP5itoy/ld5GOq6nDZQ/U7crbzSXCmWRbENCyJb3ljukyoodgwQsGbioaqr1jWfPPlXQ76&#xA;LT9Uvvq15LCLiKNo5XLRB+DPyRGWiHd9/hX4mou+Kony/JHIt+8bB0N7NRlNQencYqmuKuxV2Kux&#xA;VBR2U6a1cXvJTBPbQQhN+YeGSZifChE34YqgtVv7aHzLodnJcmKe7F2Ybb1GUS+lEC1UBCvwBruN&#xA;sVTrFUq0b/jo69/zHJ/1A22KprirsVdirsVYr5zvIkkks2uODzaNqsiW3qcfUMYgHL06/FwDnem1&#xA;cVebf844ah5RvvMXnqbyy1n+jjcwm1is7X6mI7dp7t4VpRWlXi9eUiqykmMD00jJVeoX/wD5MXQ/&#xA;+2Rq/wD1FabirI8VdirsVdirsVWyypEhdzt023JJ6ADuThAtXi3/ACtPzDqP5gat5b0fUbKPUzdr&#xA;b6HpOsWjgo8EFx9cUm2mV+P7mOdZZQKq5VA+xxlKth+P2NuPHYuW0R+KCeeTfyx09fNWoeZ72K+T&#xA;U01C4kgeaZEtuckYinuLW3t5GSlwxc85hzUUWlRyEoxEdzz/AB+K/BGTJxbDaI6PQtN0iy05rtrX&#xA;1B9dnNzMskskoDlFjpGJGb004xj4FovtkSSdy1o3ArsVdirsVdirwn8xdH0/Vvyz/L2y/wBHOsSw&#xA;262ay2T6hK1udNb60qQww3VxwA4MzRR1DBPiQ0dVXrWtQ+SkubaXXk00XbqsdpJfCASMqSxlVjM3&#xA;xUWZoyAOjle9MVV/L8cca36RqEQXs1FUUA6dhiqa4q7FXYq7FXYql17bzvq+mzJEXih9f1ZQVATk&#xA;gC1BIY8j/KDirtd1lNJt7aZ09QXN5a2QFWFDdTLCG+FJOnOu9B7jFVPRv+Ojr3/Mcn/UDbYqmuKu&#xA;xV2KuxVjfnC1laK5uxDyhi0jU4nn+H4GlELKu55fEIm6Dtv2xV555a1Pz/5p85+a9Ig833mlpot4&#xA;VSIW+ky0tpZrxImSM2skqFWt40CTtyaMGStJE4qs2g0+8svPmgRXWoz6jIuhajG0s6wqS8c+mK8l&#xA;Io4/ilPxNWor9mg2xVmOKuxV2KuxVI/N/m238safBfT6ffajHPOLf09Og+sSJWN5PUkXknGMCOhf&#xA;oCRXbfCAr59tfzl8/eafM2gS6drVppMWrXZtLaxgtVuBbpNcPGFvXumiHqmKOOSFo6GQM449BgM9&#xA;qDdDGK4pfT9/ueq+UfIum6V5rvLm/R9Y1bUrm91S01+Syp6EEvpQ/VEu/j48l6DkOY58VVPtTA4P&#xA;634+37mGTIZHyekKqqoVQAoFABsABkCWDeKuxV2KuxV2KuxV4j5zu7bS/wAvfy/1dtOjvblbS3tI&#xA;J31mXQ2gM1h6nJZ0lto2r6G4eQH9lftEhV6hrnkfyv5gvLW/1ay+s3VpE0NvJ6sycY5WVpEpG6qw&#xA;fgA1a1Wqn4SQVUR5cgigivool4xrezUFSepB74qm2KuxVKPKeqfpXQLa+MrzGUygySxmFjwldN0K&#xA;x0pxoPh364qm+KuxV2KqN1Z292iJOpZI5I5lAZl+OJw6E8SK0ZQaHbFUBo3/AB0de/5jk/6gbbFU&#xA;1xV2KuxV2KpZ5o/5RnV/+YK4/wCTTYqs0Lyj5U8vmZtB0Ww0k3PEXBsbaG2MgSvHn6Spy48jSvji&#xA;qCv/APyYuh/9sjV/+orTcVZHirsVdiqDv9X06xs5Ly5uIo7eIMZJXdUjX0zRy7seKhTsxJ2yUY2r&#xA;xf8APvWNUu7zTfKwg1KHQrtkfzD5j0xJ5oYraRZYpLGSKCGZmDKyuw5An4fmolO/THk3wxiI4p8u&#xA;g7/2fgeUl8p/lXqMPlzSdA1e6tB5ZtrFbfU9AtbYrHd3Suz/AFo3TslwgJ4HhQdPA0w8PDt1a5zM&#xA;jZen5Fg7FXYq7FXYq7FXYq7FXh/5lX1pZ/kr5MkvNNj1O2dLCN4ZJPSZC2myBZkPOPl6bUZ05AMn&#xA;JWIUk4q9E80eT9d1rVLS9sPMdzo9tBB6Ulnbh+EjmVJPUbjMi1VUKr8Pf4uaVQqt/pG50bSbudDJ&#xA;dyHV4rd2MXquVubqKFm4Q+n9lZK1A2p3xVPtb1NdK0a/1N09RbC2muWjFRyEMZcj4Q5349lPyxVE&#xA;2s63FtDOoosyLIAQw2YV6OFYfSAfbFVLTrFLCzjtUkeVY+VHk48jyYtvxCjavhiqB0K8vLi/12K4&#xA;UiO1vxDa1dX/AHZtLeTbj9n45GNDviqb4q7FXYqxubV4tGtPNurTcPSsJjcuJH9NSItPtmoXo1K0&#xA;8MVZHG4eNXBBDAEFTUGvge4xVK/KeoXmpeWdL1C9jeK7u7aKaaOQIrBnUE7Rs6j23xVdoetx6r+k&#xA;OCcPqF7NYtQuatDSp+NI/wCbtUe5xVda6zDPrt/pC8fWsILa4chiWpdGUKCpUUp6B6E/Riq3zR/y&#xA;jOr/APMFcf8AJpsVVdb1STS9NkvY7C61N42jUWViqPO/qOqVUSPElF5cmJYUUE4qxy21OXUfPfl+&#xA;5fT7rT1l0LUZljvBGkgMs2mO0bIkkjK8RPFwe/Qkb4qzHFXYqkfnPzH/AIf8vXmpq1qstsgcG/nN&#xA;tbAFwpMswSUoN/h+E8moo65IRsWr5P13TfzhvZNVt9GbT76y18ySW8+iXrJYPA1xNJcW9pC728Vx&#xA;xkaspjhdwN3b4iTGzLYN4gIDilz6D9J8vv8Ac+sPK9nqQ0OxTVrWCzuY0Hq2VtI80XqAk+oZJEjZ&#xA;i32qMuxO9TuJ2Iihz/H4/G9U5mRsp5kGLCPPPnyx8rX4k1fUm03SiluouEtjc8ZZjcmsgXk/Ei3C&#xA;jip3O+24VYdrf/OQ3k/S4Y7oatfX1hNAs8N7a6chRub3USR8ZXilDNNYPH8SBeTLvxJIVZTd/mBp&#xA;sFwLeLXGuZhqEmlTItvBCY7mFHkkB+svByVFjPJo+QHXpvirHoPz00RtUi066utTsZGsm1G6mm0+&#xA;Fora3WwOo8pjBLMam2FQEDb/AA9QaKpg/wCcfk6GeeG580vbtDFBcgvp8hElvdLEYZk4I+zG4VeL&#xA;UYGtVpviqron5r+WtW0jUNTXzL9Vj0mAXWp281vE00ETRNMpZYGmDMYo2bghLihBAIIxVM9b83nS&#xA;EeSa/uZYksrrUBIlnFGrpaJA/poZ3h5yS/W0WOnw8uSsysKYqklp+bNlqGraroljqM41jTI9Qdob&#xA;i2t1jY6dwDEFZWZlkZzxoK0VuQX4eSqT+bWjs/If5e6rc3kC2lvbW0I0y9ht5rKeeSxEkck63d/p&#xA;dv8AuRCxQvISGI479VXoHmmx/MS61S0k8t6ja2OmrB/paz8Wd5jKhUqht5aKsYbl+9+OvEcD+8Cq&#xA;P0WzFxbXsV+I7hl1CSQlUKJzjdXjYKWcgqVB+11xVOLq2huraW2nXnBOjRypUiqOOLCoodwcVXoo&#xA;VQorRQAKkk7eJO5xVvFWlRFLFVCljyYgUqaUqfuxVvFXYq7FUitbKC/fzNZXFfQuroQyhTxJR7C2&#xA;VqEdNjiqegUAHWnc4qp29vb20KQW8SQwRjjHFGoVFHgFFAMVW2tlb2vreipX15WmlqzNV3+0RyJo&#xA;Nug2xVqOyt47ya8VT9YuEjjlYsxBSIsUAUnitDI3Qb98VQfmj/lGdX/5grj/AJNNiqZ4qxy//wDJ&#xA;i6H/ANsjV/8AqK03FWR4qkfnHUZLPy7qL213JZXaQM0V1BHFLJG52j4RzD05JHeixxn7bEDbqJCO&#xA;1nkr5W82eZvzF83aJa+WUtLfzLPoeo/W7+VbpJNQvnLepBz0+J7dxbxrcrC3GNlBFQRQ5GzLYcnI&#xA;4Rj3l9Xd3e/9XzfRnkL8tdM0OWXVrhPVv55ZJbC3kjjij022kZ3jtLaGNnii4LKRIYz8bVJJ2yVg&#xA;Cg0SJJss5yKHYqllv/yk1/8A8wVn/wAnbrFUXp+m6dptollp1rDZWcXIx21vGsUSl2LtxRAFHJmJ&#xA;O3XFURirsVUL3T7C/hEF9bRXcKukixTosih42DI3FgRyVhUHscVYN5+8k3HmDWNP0+DRtOOkXj/W&#xA;9a1ma3jkuYrmzeJrTh+9hdi8frR8qPSu441VlVTWPMH5uF0/RHle2jUNqETrc3UU3L04FOnzcllg&#xA;4JLOxEiUZgoP2ag4qkGga5+el9b69B598vabpOjLpV20F1YyiSR7kKAiEfWJyFKFz9nsMVY7+a2s&#xA;NZ/k75JsY7b15r+3s41YxwSrxNmInjpLIjBnE3wlVPQ/EhowVer+aL3z5a3NqPLmn2t7aun+k+uQ&#xA;jRuJEG1ZowVZC1aD4acvjNEZVH+XDO0V8Z0WOX67NyRGLqNxSjFUJ29sVTfFXYq7FXYq7FXYq7FU&#xA;q0b/AI6Ovf8AMcn/AFA22KprirsVdirsVSzzR/yjOr/8wVx/yabFUTqmq6XpNjLqGq3kGn2EFPWu&#xA;7qRIYU5MFXlJIVVaswAqeuKpFLdW11598v3NrKk9tNouqvDNEwdHVrnTSGVlqCD4jFVXzxr0Gm+V&#xA;dduhePaHT7Kaa4vLcRvNb0iLKY0k+BpT+wjbE0rkxEVZUC3yb5cR/ON8llceY7Gwnt7OKzvb/U+F&#xA;3cXTX1yXsrOKJpZknEcqRyhnYvGzUZiqqq1/UfJyNsX9f7v2/d730R+Tv5JaF5B0e1e6ig1DzKOU&#xA;k+qGONmheWNUljtpCiyLGePfc1PiRkydqDjkvTMirsVdiqWW/wDyk1//AMwVn/ydusVTPFXYq7FW&#xA;pEDoyEkBgQSOu+22KvBYdP8AyAs/Mltpthrt3p3mTT7h9LV7WB4bn6wLaPSVjeUWn+6gA0TVoGZn&#xA;B4nFU/1rTfyvtNa0vVNR81XlzqemRym0uImivJA2kW0z3Bnkgt5XaVYrlmKyNUmiqu5VlUs0Lyl+&#xA;VeiXepWXl/Wb278w6TpeqW1xa3BJZleOKSR7lhBFyYLNEsblvjUAfF6Q4KvQPLPlry7rfkTyuNZ0&#xA;qz1MQ6XaeiLy3iuOHO3jDcfUVqcqb0xVOPM+tX2jadHc2OlzarK80cJtoK8lVzu/wrIaClBtSpHI&#xA;qtWVVBWmp6jp63bXGiXpWe8JjKNaNUTOqIaC4qNzv4YqjbnXry3t5biTRL704UaR+LWbHioqaAXF&#xA;SdsVVP0vqH/Vkvf+Dsv+ynFVO3168uIVmj0S+4NWnJrNTsadDcVxV0WvXkrzIuiX3KBxHJVrMDkU&#xA;V9ibjcUcdMVcuvXjXD240S+9SNEkb4rOnGQsBQ/WKE/AcVc+vXiTRQtol9zl5cKNZkfCKmp+sUGK&#xA;un168gQPJol9xLpGOLWbHlI4RdhcdKtv4YqgLfUtS099ZvbjRL30JZ/rScGs2b047SGNvhFxWvKJ&#xA;thiqZ/pfUP8AqyXv/B2X/ZTiqnba9eXFvFcR6JfenMiyJyazU8WFRUG4qDvirodevJufDRL7925j&#xA;arWY+JetK3G4xVy69eNcPbjRL71I0SRvis6cZCwFD9YoT8BxVBa7qepXWm3mmRaJem6vLO4WEFrM&#xA;LXiE3b6xQbyDFWRSwwzKElRZFDK4VgGAZGDo1D3VlBHgcVYnNo+n2HnTSU0u1ttPB0jUI2khiSML&#xA;HFNYLGtEC7IuyjoBkokdVeUSfl/+aPmS/Ww1KOHQ9PupVTzH5i0+RbPU9ajt/rCWsiRxm5VFSIx+&#xA;oJabt37AAzNnl+PwHI4hjHp+rv7vc9E/Kb8n9B8jeW7K1ltba71yJ2uLnUeAdhPIArmF3UOg4KF2&#xA;pX8MSejjvQcCuxV2KuxVIZdX0qx80XqXt7Bas9jZlFmlSMkCa63AYiuKov8AxR5Z/wCrvZf9JEX/&#xA;ADVirv8AFHln/q72X/SRF/zVirv8UeWf+rvZf9JEX/NWKu/xR5Z/6u9l/wBJEX/NWKvJNLu5LjU0&#xA;1LXfKflUXawT3zPAdNklfUOcskEf1yS55xuVEQaX0XHPluFocVVfNGrXhsbSfRPKflia8bndT2V1&#xA;Pp8ypLO9ulwvr+tbcZpI/V5FUdWCKS9fgxVfHdj9LavdXukeW7OB9I1EHWrQ2i38188zJGEKTTSe&#xA;nNacGYHfmKV6DFXpPkH/AJQXy5/2y7L/AKh0xVObmYwW0s4jeYxIz+lEOUj8RXigJFWPQYqwyLzf&#xA;5p1u8sLfQNK9GxliSe/1q4LehG6MjSWsaOkbylvijMgA4kHYHoqgrj8w73zJb3uneVdNu5pZfrEE&#xA;eoAtamD06R+q/rxj02Z+fAHc8a7HkEVZnq9jqV1oc9naXn1e/ki4JeUK/HtU/AQy8txVTVa1XcDF&#xA;UAlh5rtPK91Cl6l5r0hmlglcBUQyyFxEhYMD6asVjZlp0qtPhxVX0NPNLXV1c6xJBHaz8TZ6fEOU&#xA;kAHZ5hxDk/tUBFehpirWi6f5jh1C6udW1BLmFkSC2giXipWMswnYEDhK/Pi6rUfCCD+yqqBlttas&#xA;5F1jXdcW00/SBK0ogASG4twtfVug4ojgVqqVG1VIrxCqVyeZPMvma6j03RLWbSFtrqKXUNSnUlVj&#xA;guCXteJCfvXjReQBIHKhqpDMqj9dfV/MF1cadoF/LpsmmsY7q7ZG9GT6zE8fOCRGHqPbNyqh259a&#xA;MFYKq+tXepXlwmg6VcvHqtqkN5PeFCtq/puvK3kljJMcjclfhT7PUFSQVVur3GvaF5StLOCWbVdc&#xA;k9Gwivli3aZ/h9aUEyCMUH225ANQtUVxVVfVfMWleU7zUtWgE+pxmV4La0jaYqsshFujonEsYw6i&#xA;TiegNCepVVvLn+LWb1NbEMUP1eKNYFZZJvXjqJZneNUj/ek7KuwAHQkgKoXy7feaNTvU1Fmji8vS&#xA;rP6VrcwPBfhzJRRKm6ARemQpB+NWqRUVKrJ8VY75y0q2uLe21D6jc317ayxW8KWl3dWciw3dzAk7&#xA;lrVgzLGqiUhhT4Oq/aCrG/JPly11e0vX1G21+wlsLp7GG4utY1mOS8hhVSt3weaEoJSxPEAqOzHs&#xA;bVkf+AdC/wCWrV/+43q//ZVgV3+AdC/5atX/AO43q/8A2VYqxHXdLfTvMdvaW+m+Yb2yaazt/Vg1&#xA;nW2jMd9LwluHcSMqGz9OrKXoyvyqKUxVl3+AdC/5atX/AO43q/8A2VYq7/AOhf8ALVq//cb1f/sq&#xA;xVKvNXlrTNE8u3+q2kWuapc2cRkh06DWdceWdxssaCGa4kqxNKhCB1NBUhVB+UvL1vqT39pfW/mC&#xA;1XTmjhgv7nWNZjN4CnxTCNp4uNacqLyADAEh+aIqyH/AOhf8tWr/APcb1f8A7KsVd/gHQv8Alq1f&#xA;/uN6v/2VYqw3zRazaTrC22maV5h1KK2a0eSSHV9dKSi7kaCSPkTJF+4U+sSrn7PFuNa4qzj/AAVo&#xA;/wDy0ap/3F9T/wCynFXf4K0f/lo1T/uL6n/2U4q7/BWj/wDLRqn/AHF9T/7KcVTawsbXT7C2sLRP&#xA;StLSJILeOpbjHGoRFqxLGijucVV8VdirsVdirsVdiqjfXcVlZXF5NX0raN5pKUB4xqWP2io6DucV&#xA;ebz6dqv5kalcC4vLjTvJ9m7pZ/UXeM36uqcZHc9Hgnjb4GQGMggqxIZVUzfXdK8z/VvLehXU1ksB&#xA;inuHWEkG0glaMRpKrVgkYw8o2NGWm/xVUKqD6jokdrceSNBuJrfVLqSeFryWAXCNKvptdSzIvEKJ&#xA;DKVNFVQTUALxJVZdoXl2x0WOcW7yzTXT+pc3Vw/qSyMBxQu1ACVQBa0qaVYlqkqpb5e8j2+j6pNq&#xA;TX9zdzsrxQrI3FFikkaU81X+8kLyEs7ddjTlUlVBad+Xdysnqazr13qjLeNfxsqpaMZjRVMjQgF+&#xA;EaKiAUAA8KBVU28x+TtO1942uri7twoVZktZmhWZEYuiSgVqEc8lIofehIxVO40EcaoCSFAUFiWJ&#xA;oKbk7k4quxV2KuxV535k13829P1u/j0bRYb7SRdwy299eS2sVull6EAnSouIZ0ZZfXcu0T/sqFIa&#xA;qKsdj82/ndrvlnSvMflazsb6YLqcdzZepbQWlxJDfpa2rby3jOPQWWT9zeKhIr6jDijKo3/EP/OR&#xA;0QluJPLOlTx871I7GB0EwCxr9Rf1ZL5Y3DyufVBVCERiPiKriqKv9c/P6PTrb6n5f02fUn0iK5uS&#xA;3FIE1R7tBJaKDfcmWO0ZzzrxLKCG34BVDXt3/wA5AT6RfTWthb2+qNqM62lqZLNI0sP0awiZXLXf&#xA;NhfUZefEuftCJCQqrj5h/wCcjHuUZPLOlR20c1rFNFJIpeRGU/W5o5EvSERXT92GQsVdSVqrLiqG&#xA;h8zf85MjRpJ7jynpZ1WVJFt7SF4jHFIjwFZJpH1BeaSxvMAqbqyCpo2KplrNz+d41VJNJtQVkvbJ&#xA;fSl+oNpkWny2qC7d19WK/e4hujI3FZOBQLSpriqy88wf85AC0/0Py3p73Z01JwZjEiDUTeiOS24r&#xA;fvVFtOTq/Lc0J4n92FUFpmpf85Lpqt3He6XpMtnPdPHBcngscFuksEUc0cCXRlYSRGaZkklLV2BW&#xA;gVlUXp/mD/nIR3086h5a02CKW3Daj9XdJnhuPrjrRFe+hV1+qBGPxbMSatT0yqzjyRd+brzyxZ3H&#xA;m+xg03zC/q/XbK1f1IUpK4i4sHlrWIKT8R3+7FU8xV2KuxV2KuxV2KuxV2KvPtV8m+bvMvmW5i8w&#xA;3yReUbd+VlZWbMhuAeLIJ1rxYxuin94GXY0BD/u1Uy81X+q0Ty7Z6dqgFyYlj1ixdSYoVKl5DNIT&#xA;SQMOJR92U1B60VUdX81QiDVLHQNIvbyV55bK5uNPiMDx33EesztIicSsbo6TUZH6cq0qqyjSdPit&#xA;LSGoZ7swwx3N1MF+sTGJOIaZ1+03Xv8ALFUbirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:0C2370F616ABE111A09481F27A918235</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:0D2370F616ABE111A09481F27A918235</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0B2370F616ABE111A09481F27A918235</stRef:instanceID>
            <stRef:documentID>xmp.did:0480117407206811A31EF68FFD947A3F</stRef:documentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>169.999938</stDim:w>
            <stDim:h>80.482259</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Bold.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -229.572 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 229.572 li
481.484 229.572 li
481.484 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
271.391 4.04346 mo
274.495 4.04346 li
274.495 176.204 li
480.984 176.204 li
480.984 4.04346 li
274.495 4.04346 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0.137255 0.121569 0.12549 rgb
@
274.508 21.1548 mo
271.391 21.1548 li
@
274.508 38.3818 mo
271.391 38.3818 li
@
274.508 55.6094 mo
271.391 55.6094 li
@
274.508 72.8364 mo
271.391 72.8364 li
@
274.508 90.064 mo
271.391 90.064 li
@
274.508 107.291 mo
271.391 107.291 li
@
274.508 124.519 mo
271.391 124.519 li
@
274.508 141.746 mo
271.391 141.746 li
@
274.508 158.973 mo
271.391 158.973 li
@
274.508 176.2 mo
271.391 176.2 li
@
0.13725 0.12157 0.12549 rgb
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 66 /B putdup 77 /M putdup 82 /R putdup 97 /a putdup 101 /e putdup 103 /g putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604583 def/StdHW [67] def/StdVW [88] def/StemSnapH [67] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings28 dict dup begin/space <1C60D8A8C9B896187A> |-/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B5E4CF4EC97A525E022C9B4FC88EFB3F3BAD779956899C836BBD2FC8F5F391C07FB0B2C3B92A06F4A639C8E43BB10FDB531B59E83D98A9AB718650C50F38FC91524BAA33EC4FF9905D1A9C> |-/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D598E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACA07CBB1A390893C6F8FDC203687F0DAB4019999EF2C31C2A8E2B5C18284C0FA933EB49F0D3AAC406EC417696890BDF0C7AE9B4C23364F4C649F84537FC> |-/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09FB3F0AFA0642F9B368E55CBEC860ACEDE00F619B43869FF145573EE19FF4FA261BF5938247732EEA9C997694C21F3826519E5860C319187A2BE7C4798BE40539D59DC5F8C368613E2EF361E84E1BE9A2B721FABB539C13C42CCE1FC716B22FBB381EE1131CEA0A76D50B43FAFEFB6984253871A40EF8DA774460484F> |-/four <1C60D8A8C9B7BA8F425ECEAC1E8FFE1F2E4A9E9BFE692DFC86F0914D1950B7E9330CFAE2AE0CE50BC8F9A81B99E65C7EB21064416D8548FA09CC9C6588AD65393A47B2EBDED97474D4C03B3488707365B1350A023199FD7F8930> |-/five <1C60D8A8C9B7BA8F622456C498CD57E93AA5454FC364F93ECEC83D3913500E43A82F14121F71966C4788C2353DA5A8BD5D8CFB5314B38B5B35B8DBF6E6B89948F26F660C16062F6C0ACEFA240305DC4EBB618986C70F22D9BDD5EF2FA4DDB132186E4364560E4CE6F0F405A0BF> |-/six <1C60D8A8C9B7BA8F6239473257AB127E7620F87AA168F1AECB0A4CE93CC295CEFD9192C2967A0DB83DCBD6BBAD18D6960D2101F671B2250912AB87B7A312023FCC73A003C62725D7FC83EAC1691C575B6AFB00517E51D41BA56D827F4B6519D801FB562E8DCF2E48521AD57F7C657FA7114264065AFF4ECE505E9E53891A0834E3BEC3F8A67BA2E6FDAC2B> |-/seven <1C60D8A8C9B7BA8F425ECEA3CCEB01D7DB356DB8BA3E0A3CCCF78FF75F8426D973EF7AFAF46E5376078B0FAF79A0> |-/eight <1C60D8A8C9B7BA8F623D810BCFAA50082B445FDEA9D15914896CD63903178E46F4BF3526EF43F34E1C43C5D4BB259333F75AC77A2693879487E31A38ED5E9191D3298AC0D970ED0241AD045F48A1E74AA2C4BE6A3C25B51C1786D2EF03AE3AE584898B7F8F45ACBB487C3211863FEFD3620CE23C9E829D36E0D56EABE748926E17DB146990D6096B0ACBA84EC3179FD7D7DE1B7A8A7122D5F1201E333EBC5E306860669F4548CE801F630F0B98FE145245E3B61A937D385E9FFEC75A53A58A9A8AA3119FE04926CCC605B3BEA563998B78AB28F03D9E0202CFE1CF72350765F386FE675098260C4913D2BB6EF02533C78A20421F3CD9AE5EB64E891D3358D805> |-/nine <1C60D8A8C9B7BA8F63126F4A1F6F4C8A6D297D6FEEB3E1EA33A18C32A839F51A85CD7DE6BC7BE0FC5E14C273DEF590B88E507C7A736EF2A90ACB7B8F9A190B2C51A24432873D103FAFC9B3793333CCD91BFB26AA2EDD101FDCA101247D729F8EA9F184BC3D2FD9C99ABDCAACABC5E792EC3D0438CFE5E32E78D626F92C945E9BEC772CDF50F38A2D46A5A571E853> |-/B <1C60D8A8C9B79D2DDA73CBA562CD775BD8708DCD8E9BDB9F0E0177DC043FB4F1A8C4CD26C616C718D265A8D6703A6D47E3F8A1B7B12560AD317F60E12155856CA9C25059711A75C068B65463BD75FDE8E1F35A7B7D78F6157390124E47B51535C1251DC03D986F9EA19C38C324328B0D51459F89228313041C819F71E91518EC12B2EB0DAC655C5FB2D629F03ADEC251827A94F19DF929CBEBC2821CF76B9A242BB0987762DC5FABDB70310B695148> |-/M <1C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD7A6A1199FBF0367BA3210A68B70701B9284BFB2267E01EDF19411682FDEA0A61E4E1B02AB19A085A090981D7B2D5305D7BA8D88FBD7AADFDB7642CCF5DD11DBF6878FEF2B11C57265F73526C5EBB1D5352B9863C29DD2C5087C1526E4892F6303AB66F633145B0858E108CA9CCC75D7B9048852C503CE8C743045EB51C68873A60D6BB517AD466CC06BF4> |-/R <1C60D8A8C9B7818197CA8C10BDEF079227EB9AB9E6BB1BEBF94303949A9D57DC48BE0CBABA6B2F38795EB0B14AFB9419172734A7257099DC3131543D95EC80112D2F430DDFF753ABFCE1731E56B5A475FFECBCAD6983FFE444230AF84A1C69A43CAA071BDB68809E38DF7EA042893D9260BCBAB70D4727B474D6> |-/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B839ECBCEEA44E703DC4106323B0FE7E2AB642908C4D63FEEE93FCF9AFDA709EC76B2A6B438866EA54711295464BD953D3EBDCF028F138C8DA98583AEFEA07E0E3D9318DCAA5235C81F8CAE77869F7E7DB4FE2A895A8751E9713E402E5F56B8D9F8A85A4E816A3F5736139BBC6E35318419585355BABA3365F9437068F54844360043E93A0587094DC5B241D2351AD29DD00EC> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6AE0C2DA4B5701EEA600446C4909FC3F4672ADE87F21B90EA46B653B923660515A1F0669DD61FD45BFFE5F30C06F25F4918DC3BDE9DA8749DE48AB2064D02996B1992D92D740E924FC0328428444D7F57E818435DFAAB95E4B5> |-/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F5CDF5AA27A54E9CADF1B0D48AFADD31B7AC744861D428C2E9828C64107AC3C1F370E77D657249E67D01B32CA8DE47286033022B7FE2ADAB5880B8BA15ADAB506E67E787503255249A5C18EAB3949583AC294D57039D73A57012E800A5F1DE0015B558B76663CAEA443CC43AB1C7D0EA581DBA077AAE05CC1ABFBCB18987F40F7D67565C854506C79470414AF94EA3318EB3473654AC76A1F02E1D426F218B7D2A89976E745CD03CE15AD5DAD800440564510FEC150DF1BF6> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D57099036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18B95062C1F81D8B> |-/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D64C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC145C31F687483AFB9425A746B3BD7EE9055225E02124098D25B9CF96FA1051D1E04801504B9A2644D4EDA37278A874E72EE68CB4BF43DAEF5F603031626DA7EA34D8AEBCA2BE067F349B81CB3CF23097AE4AA47ED040466C2627C304F1CEA4C41EB090E70EFAF813E729DF2CD046B5547886AEE74294DF2AF6781AD20571E13346A26CAD62FB20DB9FC6337027CFBBA> |-/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC355A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C630D7D24526AEEFC04035142C31FA6B3B108962236> |-/s <1C60D8A8C9B70FAD6F31E6985339BF1E83F7AE60D35F00D12D254421A910254A631180139D8657646BEFE6F4E230D67403BE5D54183419D174C6F3CC672FE0922A5983FC4713FC0C33086E01CB29AB5EA82B559EB0CB9E6675519A48B6C99CE7F0B78BC22FE4480BA1B895> |-/t <1C60D8A8C9B821B35E7D138AF8799F79BEF170B4854FD4064F6438DB12B96A336B1B646B9C985443CCD47885AEB163F96326A737220357369BBCF971367AB24D31D50A9A11CBCBD128D32F4EE4E3175171904BA0C5> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD6E8467166462C4D4F8F41F04B52D63863D672C5433416D6DF2E3C32BCEEA94FF3BC9046373D2B57D2890F7578E8913662C9F65FD95A5790251E118509816817E1CD6A7C5BE0B48DC194> |-/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78CD729866CE567C88B5C34208EAE301B621840AC4E9FB5564F4B9810C75BCD81668335F45F1BB1571F13F2D708D47> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine 8{/.notdef}rp /B 10{/.notdef}rp /M 4{/.notdef}rp /R 14{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf257.895 6.77393 mo(100)[4.10352 4.10352 0 ]xsh261.886 24.0449 mo(90)[4.10352 0 ]xsh261.886 41.2197 mo(80)[4.10352 0 ]xsh261.886 58.3945 mo(70)[4.10352 0 ]xsh261.886 75.5693 mo(60)[4.10352 0 ]xsh261.886 92.7437 mo(50)[4.10352 0 ]xsh261.886 109.919 mo(40)[4.10352 0 ]xsh261.886 127.094 mo(30)[4.10352 0 ]xsh261.886 144.269 mo(20)[4.10352 0 ]xsh261.886 161.444 mo(10)[4.10352 0 ]xsh265.879 178.619 mo(0)sh278.217 14.0449 mo(Bivariate Regressions )[4.33594 1.87207 3.81543 3.85645 2.64844 1.87207 3.82324 2.60059 4.00781 1.69629 4.33594 4.00781 4.42383 2.53613 4.00781 3.16797 3.16797 1.87207 4.3916 4.43945 3.16797 0 ]xsh400.331 14.0449 mo(Multiple Regressions )[6.45605 4.4082 1.88672 2.64844 1.87305 4.55078 1.88867 4.00781 1.69531 4.33594 4.00781 4.42383 2.53613 4.00781 3.16797 3.16797 1.87207 4.3916 4.44043 3.16797 0 ]xsh283.187 179.358 mo
283.187 176.2 li
0.137255 0.121569 0.12549 rgb
@
284.638 132.022 mo
284.638 132.823 283.989 133.475 283.187 133.475 cv
282.385 133.475 281.735 132.823 281.735 132.022 cv
281.735 131.222 282.385 130.571 283.187 130.571 cv
283.989 130.571 284.638 131.222 284.638 132.022 cv
cp
f
283.186 127.128 mo
283.186 137.065 li
@
282.076 127.128 mo
284.296 127.128 li
@
282.076 137.065 mo
284.296 137.065 li
@
459.11 133.788 mo
459.11 134.589 458.46 135.24 457.659 135.24 cv
456.857 135.24 456.207 134.589 456.207 133.788 cv
456.207 132.987 456.857 132.337 457.659 132.337 cv
458.46 132.337 459.11 132.987 459.11 133.788 cv
cp
f
457.658 129.356 mo
457.658 138.309 li
@
456.547 129.356 mo
458.768 129.356 li
@
456.547 138.309 mo
458.768 138.309 li
@
300.634 179.358 mo
300.634 176.2 li
@
319.534 117.921 mo
319.534 118.723 318.883 119.372 318.083 119.372 cv
317.281 119.372 316.63 118.723 316.63 117.921 cv
316.63 117.119 317.281 116.468 318.083 116.468 cv
318.883 116.468 319.534 117.119 319.534 117.921 cv
cp
f
318.083 110.39 mo
318.083 125.177 li
@
316.972 110.39 mo
319.193 110.39 li
@
316.972 125.177 mo
319.193 125.177 li
@
318.082 179.358 mo
318.082 176.2 li
@
336.98 129.842 mo
336.98 130.643 336.332 131.293 335.529 131.293 cv
334.727 131.293 334.078 130.643 334.078 129.842 cv
334.078 129.041 334.727 128.391 335.529 128.391 cv
336.332 128.391 336.98 129.041 336.98 129.842 cv
cp
f
335.529 124.364 mo
335.529 135.378 li
@
334.418 124.364 mo
336.64 124.364 li
@
334.418 135.378 mo
336.64 135.378 li
@
335.529 179.358 mo
335.529 176.2 li
@
354.426 54.2329 mo
354.426 55.0342 353.777 55.6841 352.976 55.6841 cv
352.173 55.6841 351.524 55.0342 351.524 54.2329 cv
351.524 53.4312 352.173 52.7813 352.976 52.7813 cv
353.777 52.7813 354.426 53.4312 354.426 54.2329 cv
cp
f
352.976 25.5552 mo
352.976 82.8394 li
@
351.866 25.5552 mo
354.086 25.5552 li
@
351.866 82.8394 mo
354.086 82.8394 li
@
352.976 179.358 mo
352.976 176.2 li
@
371.875 88.998 mo
371.875 89.7993 371.224 90.4497 370.423 90.4497 cv
369.621 90.4497 368.972 89.7993 368.972 88.998 cv
368.972 88.1963 369.621 87.5464 370.423 87.5464 cv
371.224 87.5464 371.875 88.1963 371.875 88.998 cv
cp
f
370.423 77.6567 mo
370.423 100.253 li
@
369.312 77.6567 mo
371.534 77.6567 li
@
369.312 100.253 mo
371.534 100.253 li
@
405.317 179.358 mo
405.317 176.2 li
@
406.768 134.054 mo
406.768 134.856 406.119 135.505 405.317 135.505 cv
404.515 135.505 403.867 134.856 403.867 134.054 cv
403.867 133.253 404.515 132.603 405.317 132.603 cv
406.119 132.603 406.768 133.253 406.768 134.054 cv
cp
f
405.317 129.205 mo
405.317 139.018 li
@
404.207 129.205 mo
406.427 129.205 li
@
404.207 139.018 mo
406.427 139.018 li
@
422.764 179.358 mo
422.764 176.2 li
@
441.663 133.388 mo
441.663 134.19 441.013 134.839 440.213 134.839 cv
439.41 134.839 438.759 134.19 438.759 133.388 cv
438.759 132.585 439.41 131.937 440.213 131.937 cv
441.013 131.937 441.663 132.585 441.663 133.388 cv
cp
f
440.213 128.633 mo
440.213 137.97 li
@
439.101 128.633 mo
441.323 128.633 li
@
439.101 137.97 mo
441.323 137.97 li
@
370.423 179.358 mo
370.423 176.2 li
@
302.086 133.206 mo
302.086 133.958 301.436 134.568 300.636 134.568 cv
299.833 134.568 299.183 133.958 299.183 133.206 cv
299.183 132.453 299.833 131.846 300.636 131.846 cv
301.436 131.846 302.086 132.453 302.086 133.206 cv
cp
f
300.636 128.511 mo
300.636 137.754 li
@
299.524 128.511 mo
301.746 128.511 li
@
299.524 137.754 mo
301.746 137.754 li
@
424.216 130.997 mo
424.216 131.799 423.566 132.448 422.766 132.448 cv
421.963 132.448 421.313 131.799 421.313 130.997 cv
421.313 130.195 421.963 129.548 422.766 129.548 cv
423.566 129.548 424.216 130.195 424.216 130.997 cv
cp
f
422.766 125.973 mo
422.766 135.827 li
@
421.654 125.973 mo
423.875 125.973 li
@
421.654 135.827 mo
423.875 135.827 li
@
440.211 179.358 mo
440.211 176.2 li
@
457.659 179.358 mo
457.659 176.2 li
@
475.106 179.358 mo
475.106 176.2 li
@
476.557 89.644 mo
476.557 90.4458 475.909 91.0952 475.106 91.0952 cv
474.305 91.0952 473.655 90.4458 473.655 89.644 cv
473.655 88.8423 474.305 88.1924 475.106 88.1924 cv
475.909 88.1924 476.557 88.8423 476.557 89.644 cv
cp
f
475.106 78.5063 mo
475.106 100.765 li
@
473.997 78.5063 mo
476.217 78.5063 li
@
473.997 100.765 mo
476.217 100.765 li
@
389.321 103.286 mo
389.321 104.088 388.67 104.738 387.871 104.738 cv
387.067 104.738 386.418 104.088 386.418 103.286 cv
386.418 102.485 387.067 101.835 387.871 101.835 cv
388.67 101.835 389.321 102.485 389.321 103.286 cv
cp
f
387.871 98.6719 mo
387.871 107.664 li
@
386.759 98.6719 mo
388.981 98.6719 li
@
386.759 107.664 mo
388.981 107.664 li
@
387.87 179.36 mo
387.87 176.204 li
@
395.992 4.04346 mo
395.992 176.271 li
0 0 0 rgb
@
0.5 lw
1 lc
1 lj
10 ml
23.1274 190.656 mo
228.212 2.56787 li
0 0 1 rgb
@
35.8296 197.982 mo
242.37 8.65186 li
@
103.936 125.038 mo
103.936 124.423 103.437 123.925 102.822 123.925 cv
102.207 123.925 101.708 124.423 101.708 125.038 cv
101.708 125.653 102.207 126.153 102.822 126.153 cv
103.437 126.153 103.936 125.653 103.936 125.038 cv
0 0 0 rgb
f
0.75 lw
103.936 125.038 mo
103.936 124.423 103.437 123.925 102.822 123.925 cv
102.207 123.925 101.708 124.423 101.708 125.038 cv
101.708 125.653 102.207 126.153 102.822 126.153 cv
103.437 126.153 103.936 125.653 103.936 125.038 cv
@
128.692 104.983 mo
128.692 104.368 128.192 103.868 127.578 103.868 cv
126.963 103.868 126.463 104.368 126.463 104.983 cv
126.463 105.598 126.963 106.097 127.578 106.097 cv
128.192 106.097 128.692 105.598 128.692 104.983 cv
f
128.692 104.983 mo
128.692 104.368 128.192 103.868 127.578 103.868 cv
126.963 103.868 126.463 104.368 126.463 104.983 cv
126.463 105.598 126.963 106.097 127.578 106.097 cv
128.192 106.097 128.692 105.598 128.692 104.983 cv
@
140.342 91.8105 mo
140.342 91.1953 139.842 90.6968 139.227 90.6968 cv
138.612 90.6968 138.113 91.1953 138.113 91.8105 cv
138.113 92.4258 138.612 92.9243 139.227 92.9243 cv
139.842 92.9243 140.342 92.4258 140.342 91.8105 cv
f
140.342 91.8105 mo
140.342 91.1953 139.842 90.6968 139.227 90.6968 cv
138.612 90.6968 138.113 91.1953 138.113 91.8105 cv
138.113 92.4258 138.612 92.9243 139.227 92.9243 cv
139.842 92.9243 140.342 92.4258 140.342 91.8105 cv
@
131.406 103.063 mo
131.406 102.448 130.906 101.949 130.292 101.949 cv
129.677 101.949 129.177 102.448 129.177 103.063 cv
129.177 103.679 129.677 104.177 130.292 104.177 cv
130.906 104.177 131.406 103.679 131.406 103.063 cv
f
131.406 103.063 mo
131.406 102.448 130.906 101.949 130.292 101.949 cv
129.677 101.949 129.177 102.448 129.177 103.063 cv
129.177 103.679 129.677 104.177 130.292 104.177 cv
130.906 104.177 131.406 103.679 131.406 103.063 cv
@
106.981 125.965 mo
106.981 125.35 106.482 124.852 105.867 124.852 cv
105.252 124.852 104.752 125.35 104.752 125.965 cv
104.752 126.58 105.252 127.08 105.867 127.08 cv
106.482 127.08 106.981 126.58 106.981 125.965 cv
f
106.981 125.965 mo
106.981 125.35 106.482 124.852 105.867 124.852 cv
105.252 124.852 104.752 125.35 104.752 125.965 cv
104.752 126.58 105.252 127.08 105.867 127.08 cv
106.482 127.08 106.981 126.58 106.981 125.965 cv
@
107.113 121.068 mo
107.113 120.453 106.614 119.952 105.999 119.952 cv
105.384 119.952 104.885 120.453 104.885 121.068 cv
104.885 121.683 105.384 122.182 105.999 122.182 cv
106.614 122.182 107.113 121.683 107.113 121.068 cv
f
107.113 121.068 mo
107.113 120.453 106.614 119.952 105.999 119.952 cv
105.384 119.952 104.885 120.453 104.885 121.068 cv
104.885 121.683 105.384 122.182 105.999 122.182 cv
106.614 122.182 107.113 121.683 107.113 121.068 cv
@
101.023 132.451 mo
101.023 131.836 100.524 131.338 99.9092 131.338 cv
99.2944 131.338 98.7954 131.836 98.7954 132.451 cv
98.7954 133.066 99.2944 133.567 99.9092 133.567 cv
100.524 133.567 101.023 133.066 101.023 132.451 cv
f
101.023 132.451 mo
101.023 131.836 100.524 131.338 99.9092 131.338 cv
99.2944 131.338 98.7954 131.836 98.7954 132.451 cv
98.7954 133.066 99.2944 133.567 99.9092 133.567 cv
100.524 133.567 101.023 133.066 101.023 132.451 cv
@
108.9 117.625 mo
108.9 117.01 108.401 116.512 107.787 116.512 cv
107.171 116.512 106.672 117.01 106.672 117.625 cv
106.672 118.24 107.171 118.739 107.787 118.739 cv
108.401 118.739 108.9 118.24 108.9 117.625 cv
f
108.9 117.625 mo
108.9 117.01 108.401 116.512 107.787 116.512 cv
107.171 116.512 106.672 117.01 106.672 117.625 cv
106.672 118.24 107.171 118.739 107.787 118.739 cv
108.401 118.739 108.9 118.24 108.9 117.625 cv
@
86.0645 145.294 mo
86.0645 144.679 85.5654 144.18 84.9502 144.18 cv
84.335 144.18 83.8359 144.679 83.8359 145.294 cv
83.8359 145.909 84.335 146.407 84.9502 146.407 cv
85.5654 146.407 86.0645 145.909 86.0645 145.294 cv
f
86.0645 145.294 mo
86.0645 144.679 85.5654 144.18 84.9502 144.18 cv
84.335 144.18 83.8359 144.679 83.8359 145.294 cv
83.8359 145.909 84.335 146.407 84.9502 146.407 cv
85.5654 146.407 86.0645 145.909 86.0645 145.294 cv
@
150.27 81.9482 mo
150.27 81.333 149.771 80.8335 149.156 80.8335 cv
148.542 80.8335 148.042 81.333 148.042 81.9482 cv
148.042 82.5625 148.542 83.0625 149.156 83.0625 cv
149.771 83.0625 150.27 82.5625 150.27 81.9482 cv
f
150.27 81.9482 mo
150.27 81.333 149.771 80.8335 149.156 80.8335 cv
148.542 80.8335 148.042 81.333 148.042 81.9482 cv
148.042 82.5625 148.542 83.0625 149.156 83.0625 cv
149.771 83.0625 150.27 82.5625 150.27 81.9482 cv
@
113.335 112.463 mo
113.335 111.848 112.836 111.348 112.221 111.348 cv
111.606 111.348 111.107 111.848 111.107 112.463 cv
111.107 113.077 111.606 113.577 112.221 113.577 cv
112.836 113.577 113.335 113.077 113.335 112.463 cv
f
113.335 112.463 mo
113.335 111.848 112.836 111.348 112.221 111.348 cv
111.606 111.348 111.107 111.848 111.107 112.463 cv
111.107 113.077 111.606 113.577 112.221 113.577 cv
112.836 113.577 113.335 113.077 113.335 112.463 cv
@
129.221 104.652 mo
129.221 104.037 128.722 103.537 128.107 103.537 cv
127.492 103.537 126.993 104.037 126.993 104.652 cv
126.993 105.266 127.492 105.766 128.107 105.766 cv
128.722 105.766 129.221 105.266 129.221 104.652 cv
f
129.221 104.652 mo
129.221 104.037 128.722 103.537 128.107 103.537 cv
127.492 103.537 126.993 104.037 126.993 104.652 cv
126.993 105.266 127.492 105.766 128.107 105.766 cv
128.722 105.766 129.221 105.266 129.221 104.652 cv
@
127.566 100.945 mo
127.566 100.33 127.067 99.8311 126.453 99.8311 cv
125.837 99.8311 125.338 100.33 125.338 100.945 cv
125.338 101.561 125.837 102.059 126.453 102.059 cv
127.067 102.059 127.566 101.561 127.566 100.945 cv
f
127.566 100.945 mo
127.566 100.33 127.067 99.8311 126.453 99.8311 cv
125.837 99.8311 125.338 100.33 125.338 100.945 cv
125.338 101.561 125.837 102.059 126.453 102.059 cv
127.067 102.059 127.566 101.561 127.566 100.945 cv
@
126.044 110.212 mo
126.044 109.597 125.545 109.097 124.93 109.097 cv
124.315 109.097 123.816 109.597 123.816 110.212 cv
123.816 110.826 124.315 111.326 124.93 111.326 cv
125.545 111.326 126.044 110.826 126.044 110.212 cv
f
126.044 110.212 mo
126.044 109.597 125.545 109.097 124.93 109.097 cv
124.315 109.097 123.816 109.597 123.816 110.212 cv
123.816 110.826 124.315 111.326 124.93 111.326 cv
125.545 111.326 126.044 110.826 126.044 110.212 cv
@
124.654 111.667 mo
124.654 111.053 124.155 110.554 123.54 110.554 cv
122.925 110.554 122.426 111.053 122.426 111.667 cv
122.426 112.282 122.925 112.782 123.54 112.782 cv
124.155 112.782 124.654 112.282 124.654 111.667 cv
f
124.654 111.667 mo
124.654 111.053 124.155 110.554 123.54 110.554 cv
122.925 110.554 122.426 111.053 122.426 111.667 cv
122.426 112.282 122.925 112.782 123.54 112.782 cv
124.155 112.782 124.654 112.282 124.654 111.667 cv
@
131.207 105.181 mo
131.207 104.566 130.708 104.067 130.093 104.067 cv
129.478 104.067 128.979 104.566 128.979 105.181 cv
128.979 105.796 129.478 106.295 130.093 106.295 cv
130.708 106.295 131.207 105.796 131.207 105.181 cv
f
131.207 105.181 mo
131.207 104.566 130.708 104.067 130.093 104.067 cv
129.478 104.067 128.979 104.566 128.979 105.181 cv
128.979 105.796 129.478 106.295 130.093 106.295 cv
130.708 106.295 131.207 105.796 131.207 105.181 cv
@
175.688 63.2153 mo
175.688 62.6006 175.188 62.1016 174.574 62.1016 cv
173.959 62.1016 173.459 62.6006 173.459 63.2153 cv
173.459 63.8306 173.959 64.3296 174.574 64.3296 cv
175.188 64.3296 175.688 63.8306 175.688 63.2153 cv
f
175.688 63.2153 mo
175.688 62.6006 175.188 62.1016 174.574 62.1016 cv
173.959 62.1016 173.459 62.6006 173.459 63.2153 cv
173.459 63.8306 173.959 64.3296 174.574 64.3296 cv
175.188 64.3296 175.688 63.8306 175.688 63.2153 cv
@
156.493 79.4985 mo
156.493 78.8833 155.993 78.3848 155.378 78.3848 cv
154.763 78.3848 154.264 78.8833 154.264 79.4985 cv
154.264 80.1133 154.763 80.6128 155.378 80.6128 cv
155.993 80.6128 156.493 80.1133 156.493 79.4985 cv
f
156.493 79.4985 mo
156.493 78.8833 155.993 78.3848 155.378 78.3848 cv
154.763 78.3848 154.264 78.8833 154.264 79.4985 cv
154.264 80.1133 154.763 80.6128 155.378 80.6128 cv
155.993 80.6128 156.493 80.1133 156.493 79.4985 cv
@
147.754 81.749 mo
147.754 81.1343 147.256 80.6353 146.641 80.6353 cv
146.026 80.6353 145.527 81.1343 145.527 81.749 cv
145.527 82.3643 146.026 82.8633 146.641 82.8633 cv
147.256 82.8633 147.754 82.3643 147.754 81.749 cv
f
147.754 81.749 mo
147.754 81.1343 147.256 80.6353 146.641 80.6353 cv
146.026 80.6353 145.527 81.1343 145.527 81.749 cv
145.527 82.3643 146.026 82.8633 146.641 82.8633 cv
147.256 82.8633 147.754 82.3643 147.754 81.749 cv
@
173.702 61.23 mo
173.702 60.6147 173.203 60.1157 172.588 60.1157 cv
171.973 60.1157 171.473 60.6147 171.473 61.23 cv
171.473 61.8447 171.973 62.3442 172.588 62.3442 cv
173.203 62.3442 173.702 61.8447 173.702 61.23 cv
f
173.702 61.23 mo
173.702 60.6147 173.203 60.1157 172.588 60.1157 cv
171.973 60.1157 171.473 60.6147 171.473 61.23 cv
171.473 61.8447 171.973 62.3442 172.588 62.3442 cv
173.203 62.3442 173.702 61.8447 173.702 61.23 cv
@
166.553 68.3784 mo
166.553 67.7632 166.054 67.2642 165.439 67.2642 cv
164.824 67.2642 164.325 67.7632 164.325 68.3784 cv
164.325 68.9937 164.824 69.4932 165.439 69.4932 cv
166.054 69.4932 166.553 68.9937 166.553 68.3784 cv
f
166.553 68.3784 mo
166.553 67.7632 166.054 67.2642 165.439 67.2642 cv
164.824 67.2642 164.325 67.7632 164.325 68.3784 cv
164.325 68.9937 164.824 69.4932 165.439 69.4932 cv
166.054 69.4932 166.553 68.9937 166.553 68.3784 cv
@
149.079 87.1768 mo
149.079 86.5615 148.579 86.063 147.965 86.063 cv
147.35 86.063 146.85 86.5615 146.85 87.1768 cv
146.85 87.792 147.35 88.291 147.965 88.291 cv
148.579 88.291 149.079 87.792 149.079 87.1768 cv
f
149.079 87.1768 mo
149.079 86.5615 148.579 86.063 147.965 86.063 cv
147.35 86.063 146.85 86.5615 146.85 87.1768 cv
146.85 87.792 147.35 88.291 147.965 88.291 cv
148.579 88.291 149.079 87.792 149.079 87.1768 cv
@
149.608 85.853 mo
149.608 85.2383 149.109 84.7388 148.495 84.7388 cv
147.879 84.7388 147.38 85.2383 147.38 85.853 cv
147.38 86.4678 147.879 86.9678 148.495 86.9678 cv
149.109 86.9678 149.608 86.4678 149.608 85.853 cv
f
149.608 85.853 mo
149.608 85.2383 149.109 84.7388 148.495 84.7388 cv
147.879 84.7388 147.38 85.2383 147.38 85.853 cv
147.38 86.4678 147.879 86.9678 148.495 86.9678 cv
149.109 86.9678 149.608 86.4678 149.608 85.853 cv
@
82.9536 142.646 mo
82.9536 142.03 82.4546 141.532 81.8394 141.532 cv
81.2241 141.532 80.7251 142.03 80.7251 142.646 cv
80.7251 143.261 81.2241 143.759 81.8394 143.759 cv
82.4546 143.759 82.9536 143.261 82.9536 142.646 cv
f
82.9536 142.646 mo
82.9536 142.03 82.4546 141.532 81.8394 141.532 cv
81.2241 141.532 80.7251 142.03 80.7251 142.646 cv
80.7251 143.261 81.2241 143.759 81.8394 143.759 cv
82.4546 143.759 82.9536 143.261 82.9536 142.646 cv
@
79.9751 143.837 mo
79.9751 143.222 79.4756 142.724 78.8608 142.724 cv
78.2456 142.724 77.7461 143.222 77.7461 143.837 cv
77.7461 144.452 78.2456 144.951 78.8608 144.951 cv
79.4756 144.951 79.9751 144.452 79.9751 143.837 cv
f
79.9751 143.837 mo
79.9751 143.222 79.4756 142.724 78.8608 142.724 cv
78.2456 142.724 77.7461 143.222 77.7461 143.837 cv
77.7461 144.452 78.2456 144.951 78.8608 144.951 cv
79.4756 144.951 79.9751 144.452 79.9751 143.837 cv
@
70.0459 157.672 mo
70.0459 157.057 69.5469 156.557 68.9321 156.557 cv
68.3169 156.557 67.8179 157.057 67.8179 157.672 cv
67.8179 158.287 68.3169 158.785 68.9321 158.785 cv
69.5469 158.785 70.0459 158.287 70.0459 157.672 cv
f
70.0459 157.672 mo
70.0459 157.057 69.5469 156.557 68.9321 156.557 cv
68.3169 156.557 67.8179 157.057 67.8179 157.672 cv
67.8179 158.287 68.3169 158.785 68.9321 158.785 cv
69.5469 158.785 70.0459 158.287 70.0459 157.672 cv
@
72.1641 160.12 mo
72.1641 159.505 71.665 159.006 71.0503 159.006 cv
70.4351 159.006 69.936 159.505 69.936 160.12 cv
69.936 160.735 70.4351 161.235 71.0503 161.235 cv
71.665 161.235 72.1641 160.735 72.1641 160.12 cv
f
72.1641 160.12 mo
72.1641 159.505 71.665 159.006 71.0503 159.006 cv
70.4351 159.006 69.936 159.505 69.936 160.12 cv
69.936 160.735 70.4351 161.235 71.0503 161.235 cv
71.665 161.235 72.1641 160.735 72.1641 160.12 cv
@
106.187 121.2 mo
106.187 120.585 105.688 120.085 105.073 120.085 cv
104.458 120.085 103.958 120.585 103.958 121.2 cv
103.958 121.813 104.458 122.314 105.073 122.314 cv
105.688 122.314 106.187 121.813 106.187 121.2 cv
f
106.187 121.2 mo
106.187 120.585 105.688 120.085 105.073 120.085 cv
104.458 120.085 103.958 120.585 103.958 121.2 cv
103.958 121.813 104.458 122.314 105.073 122.314 cv
105.688 122.314 106.187 121.813 106.187 121.2 cv
@
98.7734 131.657 mo
98.7734 131.042 98.2739 130.544 97.6592 130.544 cv
97.0439 130.544 96.5449 131.042 96.5449 131.657 cv
96.5449 132.272 97.0439 132.772 97.6592 132.772 cv
98.2739 132.772 98.7734 132.272 98.7734 131.657 cv
f
98.7734 131.657 mo
98.7734 131.042 98.2739 130.544 97.6592 130.544 cv
97.0439 130.544 96.5449 131.042 96.5449 131.657 cv
96.5449 132.272 97.0439 132.772 97.6592 132.772 cv
98.2739 132.772 98.7734 132.272 98.7734 131.657 cv
@
77.1948 150.456 mo
77.1948 149.841 76.6953 149.343 76.0806 149.343 cv
75.4653 149.343 74.9668 149.841 74.9668 150.456 cv
74.9668 151.071 75.4653 151.57 76.0806 151.57 cv
76.6953 151.57 77.1948 151.071 77.1948 150.456 cv
f
77.1948 150.456 mo
77.1948 149.841 76.6953 149.343 76.0806 149.343 cv
75.4653 149.343 74.9668 149.841 74.9668 150.456 cv
74.9668 151.071 75.4653 151.57 76.0806 151.57 cv
76.6953 151.57 77.1948 151.071 77.1948 150.456 cv
@
115.586 117.891 mo
115.586 117.274 115.087 116.775 114.472 116.775 cv
113.857 116.775 113.357 117.274 113.357 117.891 cv
113.357 118.504 113.857 119.005 114.472 119.005 cv
115.087 119.005 115.586 118.504 115.586 117.891 cv
f
115.586 117.891 mo
115.586 117.274 115.087 116.775 114.472 116.775 cv
113.857 116.775 113.357 117.274 113.357 117.891 cv
113.357 118.504 113.857 119.005 114.472 119.005 cv
115.087 119.005 115.586 118.504 115.586 117.891 cv
@
124.654 102.004 mo
124.654 101.389 124.155 100.89 123.54 100.89 cv
122.925 100.89 122.426 101.389 122.426 102.004 cv
122.426 102.62 122.925 103.118 123.54 103.118 cv
124.155 103.118 124.654 102.62 124.654 102.004 cv
f
124.654 102.004 mo
124.654 101.389 124.155 100.89 123.54 100.89 cv
122.925 100.89 122.426 101.389 122.426 102.004 cv
122.426 102.62 122.925 103.118 123.54 103.118 cv
124.155 103.118 124.654 102.62 124.654 102.004 cv
@
106.452 116.632 mo
106.452 116.017 105.952 115.518 105.337 115.518 cv
104.722 115.518 104.223 116.017 104.223 116.632 cv
104.223 117.247 104.722 117.746 105.337 117.746 cv
105.952 117.746 106.452 117.247 106.452 116.632 cv
f
106.452 116.632 mo
106.452 116.017 105.952 115.518 105.337 115.518 cv
104.722 115.518 104.223 116.017 104.223 116.632 cv
104.223 117.247 104.722 117.746 105.337 117.746 cv
105.952 117.746 106.452 117.247 106.452 116.632 cv
@
102.877 117.228 mo
102.877 116.612 102.377 116.113 101.763 116.113 cv
101.147 116.113 100.649 116.612 100.649 117.228 cv
100.649 117.843 101.147 118.342 101.763 118.342 cv
102.377 118.342 102.877 117.843 102.877 117.228 cv
f
102.877 117.228 mo
102.877 116.612 102.377 116.113 101.763 116.113 cv
101.147 116.113 100.649 116.612 100.649 117.228 cv
100.649 117.843 101.147 118.342 101.763 118.342 cv
102.377 118.342 102.877 117.843 102.877 117.228 cv
@
102.215 116.434 mo
102.215 115.818 101.716 115.32 101.101 115.32 cv
100.486 115.32 99.9868 115.818 99.9868 116.434 cv
99.9868 117.049 100.486 117.548 101.101 117.548 cv
101.716 117.548 102.215 117.049 102.215 116.434 cv
f
102.215 116.434 mo
102.215 115.818 101.716 115.32 101.101 115.32 cv
100.486 115.32 99.9868 115.818 99.9868 116.434 cv
99.9868 117.049 100.486 117.548 101.101 117.548 cv
101.716 117.548 102.215 117.049 102.215 116.434 cv
@
49.2617 175.212 mo
49.2617 174.597 48.7627 174.098 48.1475 174.098 cv
47.5327 174.098 47.0332 174.597 47.0332 175.212 cv
47.0332 175.827 47.5327 176.326 48.1475 176.326 cv
48.7627 176.326 49.2617 175.827 49.2617 175.212 cv
f
49.2617 175.212 mo
49.2617 174.597 48.7627 174.098 48.1475 174.098 cv
47.5327 174.098 47.0332 174.597 47.0332 175.212 cv
47.0332 175.827 47.5327 176.326 48.1475 176.326 cv
48.7627 176.326 49.2617 175.827 49.2617 175.212 cv
@
63.0298 166.143 mo
63.0298 165.528 62.5308 165.029 61.9155 165.029 cv
61.3003 165.029 60.8013 165.528 60.8013 166.143 cv
60.8013 166.758 61.3003 167.259 61.9155 167.259 cv
62.5308 167.259 63.0298 166.758 63.0298 166.143 cv
f
63.0298 166.143 mo
63.0298 165.528 62.5308 165.029 61.9155 165.029 cv
61.3003 165.029 60.8013 165.528 60.8013 166.143 cv
60.8013 166.758 61.3003 167.259 61.9155 167.259 cv
62.5308 167.259 63.0298 166.758 63.0298 166.143 cv
@
74.2822 150.986 mo
74.2822 150.371 73.7832 149.871 73.168 149.871 cv
72.5527 149.871 72.0542 150.371 72.0542 150.986 cv
72.0542 151.602 72.5527 152.1 73.168 152.1 cv
73.7832 152.1 74.2822 151.602 74.2822 150.986 cv
f
74.2822 150.986 mo
74.2822 150.371 73.7832 149.871 73.168 149.871 cv
72.5527 149.871 72.0542 150.371 72.0542 150.986 cv
72.0542 151.602 72.5527 152.1 73.168 152.1 cv
73.7832 152.1 74.2822 151.602 74.2822 150.986 cv
@
74.6792 143.837 mo
74.6792 143.222 74.1802 142.724 73.5649 142.724 cv
72.9497 142.724 72.4512 143.222 72.4512 143.837 cv
72.4512 144.452 72.9497 144.951 73.5649 144.951 cv
74.1802 144.951 74.6792 144.452 74.6792 143.837 cv
f
74.6792 143.837 mo
74.6792 143.222 74.1802 142.724 73.5649 142.724 cv
72.9497 142.724 72.4512 143.222 72.4512 143.837 cv
72.4512 144.452 72.9497 144.951 73.5649 144.951 cv
74.1802 144.951 74.6792 144.452 74.6792 143.837 cv
@
81.2988 143.374 mo
81.2988 142.759 80.7998 142.26 80.1846 142.26 cv
79.5693 142.26 79.0703 142.759 79.0703 143.374 cv
79.0703 143.989 79.5693 144.487 80.1846 144.487 cv
80.7998 144.487 81.2988 143.989 81.2988 143.374 cv
f
81.2988 143.374 mo
81.2988 142.759 80.7998 142.26 80.1846 142.26 cv
79.5693 142.26 79.0703 142.759 79.0703 143.374 cv
79.0703 143.989 79.5693 144.487 80.1846 144.487 cv
80.7998 144.487 81.2988 143.989 81.2988 143.374 cv
@
115.057 109.948 mo
115.057 109.333 114.557 108.833 113.942 108.833 cv
113.327 108.833 112.828 109.333 112.828 109.948 cv
112.828 110.562 113.327 111.061 113.942 111.061 cv
114.557 111.061 115.057 110.562 115.057 109.948 cv
f
115.057 109.948 mo
115.057 109.333 114.557 108.833 113.942 108.833 cv
113.327 108.833 112.828 109.333 112.828 109.948 cv
112.828 110.562 113.327 111.061 113.942 111.061 cv
114.557 111.061 115.057 110.562 115.057 109.948 cv
@
151.197 87.1768 mo
151.197 86.5615 150.698 86.063 150.083 86.063 cv
149.468 86.063 148.968 86.5615 148.968 87.1768 cv
148.968 87.792 149.468 88.291 150.083 88.291 cv
150.698 88.291 151.197 87.792 151.197 87.1768 cv
f
151.197 87.1768 mo
151.197 86.5615 150.698 86.063 150.083 86.063 cv
149.468 86.063 148.968 86.5615 148.968 87.1768 cv
148.968 87.792 149.468 88.291 150.083 88.291 cv
150.698 88.291 151.197 87.792 151.197 87.1768 cv
@
153.315 87.5742 mo
153.315 86.959 152.816 86.46 152.201 86.46 cv
151.586 86.46 151.086 86.959 151.086 87.5742 cv
151.086 88.1895 151.586 88.6885 152.201 88.6885 cv
152.816 88.6885 153.315 88.1895 153.315 87.5742 cv
f
153.315 87.5742 mo
153.315 86.959 152.816 86.46 152.201 86.46 cv
151.586 86.46 151.086 86.959 151.086 87.5742 cv
151.086 88.1895 151.586 88.6885 152.201 88.6885 cv
152.816 88.6885 153.315 88.1895 153.315 87.5742 cv
@
117.704 115.242 mo
117.704 114.626 117.205 114.128 116.59 114.128 cv
115.975 114.128 115.476 114.626 115.476 115.242 cv
115.476 115.857 115.975 116.356 116.59 116.356 cv
117.205 116.356 117.704 115.857 117.704 115.242 cv
f
117.704 115.242 mo
117.704 114.626 117.205 114.128 116.59 114.128 cv
115.975 114.128 115.476 114.626 115.476 115.242 cv
115.476 115.857 115.975 116.356 116.59 116.356 cv
117.205 116.356 117.704 115.857 117.704 115.242 cv
@
169.731 63.1494 mo
169.731 62.5342 169.231 62.0352 168.616 62.0352 cv
168.001 62.0352 167.502 62.5342 167.502 63.1494 cv
167.502 63.7646 168.001 64.2637 168.616 64.2637 cv
169.231 64.2637 169.731 63.7646 169.731 63.1494 cv
f
169.731 63.1494 mo
169.731 62.5342 169.231 62.0352 168.616 62.0352 cv
168.001 62.0352 167.502 62.5342 167.502 63.1494 cv
167.502 63.7646 168.001 64.2637 168.616 64.2637 cv
169.231 64.2637 169.731 63.7646 169.731 63.1494 cv
@
184.558 51.4336 mo
184.558 50.8188 184.058 50.3193 183.443 50.3193 cv
182.829 50.3193 182.329 50.8188 182.329 51.4336 cv
182.329 52.0488 182.829 52.5479 183.443 52.5479 cv
184.058 52.5479 184.558 52.0488 184.558 51.4336 cv
f
184.558 51.4336 mo
184.558 50.8188 184.058 50.3193 183.443 50.3193 cv
182.829 50.3193 182.329 50.8188 182.329 51.4336 cv
182.329 52.0488 182.829 52.5479 183.443 52.5479 cv
184.058 52.5479 184.558 52.0488 184.558 51.4336 cv
@
187.934 51.0366 mo
187.934 50.4214 187.434 49.9224 186.819 49.9224 cv
186.204 49.9224 185.705 50.4214 185.705 51.0366 cv
185.705 51.6514 186.204 52.1509 186.819 52.1509 cv
187.434 52.1509 187.934 51.6514 187.934 51.0366 cv
f
187.934 51.0366 mo
187.934 50.4214 187.434 49.9224 186.819 49.9224 cv
186.204 49.9224 185.705 50.4214 185.705 51.0366 cv
185.705 51.6514 186.204 52.1509 186.819 52.1509 cv
187.434 52.1509 187.934 51.6514 187.934 51.0366 cv
@
101.421 130.599 mo
101.421 129.983 100.922 129.484 100.307 129.484 cv
99.6914 129.484 99.1929 129.983 99.1929 130.599 cv
99.1929 131.214 99.6914 131.713 100.307 131.713 cv
100.922 131.713 101.421 131.214 101.421 130.599 cv
f
101.421 130.599 mo
101.421 129.983 100.922 129.484 100.307 129.484 cv
99.6914 129.484 99.1929 129.983 99.1929 130.599 cv
99.1929 131.214 99.6914 131.713 100.307 131.713 cv
100.922 131.713 101.421 131.214 101.421 130.599 cv
@
72.0981 152.972 mo
72.0981 152.356 71.5991 151.858 70.9839 151.858 cv
70.3691 151.858 69.8696 152.356 69.8696 152.972 cv
69.8696 153.587 70.3691 154.086 70.9839 154.086 cv
71.5991 154.086 72.0981 153.587 72.0981 152.972 cv
f
72.0981 152.972 mo
72.0981 152.356 71.5991 151.858 70.9839 151.858 cv
70.3691 151.858 69.8696 152.356 69.8696 152.972 cv
69.8696 153.587 70.3691 154.086 70.9839 154.086 cv
71.5991 154.086 72.0981 153.587 72.0981 152.972 cv
@
85.6675 150.456 mo
85.6675 149.841 85.1685 149.343 84.5532 149.343 cv
83.9385 149.343 83.439 149.841 83.439 150.456 cv
83.439 151.071 83.9385 151.57 84.5532 151.57 cv
85.1685 151.57 85.6675 151.071 85.6675 150.456 cv
f
85.6675 150.456 mo
85.6675 149.841 85.1685 149.343 84.5532 149.343 cv
83.9385 149.343 83.439 149.841 83.439 150.456 cv
83.439 151.071 83.9385 151.57 84.5532 151.57 cv
85.1685 151.57 85.6675 151.071 85.6675 150.456 cv
@
75.8711 161.113 mo
75.8711 160.498 75.3721 159.999 74.7568 159.999 cv
74.1416 159.999 73.6426 160.498 73.6426 161.113 cv
73.6426 161.729 74.1416 162.228 74.7568 162.228 cv
75.3721 162.228 75.8711 161.729 75.8711 161.113 cv
f
75.8711 161.113 mo
75.8711 160.498 75.3721 159.999 74.7568 159.999 cv
74.1416 159.999 73.6426 160.498 73.6426 161.113 cv
73.6426 161.729 74.1416 162.228 74.7568 162.228 cv
75.3721 162.228 75.8711 161.729 75.8711 161.113 cv
@
67.7954 158.929 mo
67.7954 158.314 67.2964 157.814 66.6812 157.814 cv
66.0659 157.814 65.5674 158.314 65.5674 158.929 cv
65.5674 159.544 66.0659 160.043 66.6812 160.043 cv
67.2964 160.043 67.7954 159.544 67.7954 158.929 cv
f
67.7954 158.929 mo
67.7954 158.314 67.2964 157.814 66.6812 157.814 cv
66.0659 157.814 65.5674 158.314 65.5674 158.929 cv
65.5674 159.544 66.0659 160.043 66.6812 160.043 cv
67.2964 160.043 67.7954 159.544 67.7954 158.929 cv
@
102.149 125.304 mo
102.149 124.689 101.65 124.189 101.035 124.189 cv
100.42 124.189 99.9204 124.689 99.9204 125.304 cv
99.9204 125.919 100.42 126.418 101.035 126.418 cv
101.65 126.418 102.149 125.919 102.149 125.304 cv
f
102.149 125.304 mo
102.149 124.689 101.65 124.189 101.035 124.189 cv
100.42 124.189 99.9204 124.689 99.9204 125.304 cv
99.9204 125.919 100.42 126.418 101.035 126.418 cv
101.65 126.418 102.149 125.919 102.149 125.304 cv
@
88.3149 141.321 mo
88.3149 140.706 87.8159 140.208 87.2007 140.208 cv
86.5854 140.208 86.0864 140.706 86.0864 141.321 cv
86.0864 141.937 86.5854 142.437 87.2007 142.437 cv
87.8159 142.437 88.3149 141.937 88.3149 141.321 cv
f
88.3149 141.321 mo
88.3149 140.706 87.8159 140.208 87.2007 140.208 cv
86.5854 140.208 86.0864 140.706 86.0864 141.321 cv
86.0864 141.937 86.5854 142.437 87.2007 142.437 cv
87.8159 142.437 88.3149 141.937 88.3149 141.321 cv
@
107.841 122.126 mo
107.841 121.512 107.342 121.013 106.728 121.013 cv
106.112 121.013 105.613 121.512 105.613 122.126 cv
105.613 122.741 106.112 123.241 106.728 123.241 cv
107.342 123.241 107.841 122.741 107.841 122.126 cv
f
107.841 122.126 mo
107.841 121.512 107.342 121.013 106.728 121.013 cv
106.112 121.013 105.613 121.512 105.613 122.126 cv
105.613 122.741 106.112 123.241 106.728 123.241 cv
107.342 123.241 107.841 122.741 107.841 122.126 cv
@
82.4902 138.675 mo
82.4902 138.06 81.9907 137.561 81.376 137.561 cv
80.7607 137.561 80.2617 138.06 80.2617 138.675 cv
80.2617 139.29 80.7607 139.788 81.376 139.788 cv
81.9907 139.788 82.4902 139.29 82.4902 138.675 cv
f
82.4902 138.675 mo
82.4902 138.06 81.9907 137.561 81.376 137.561 cv
80.7607 137.561 80.2617 138.06 80.2617 138.675 cv
80.2617 139.29 80.7607 139.788 81.376 139.788 cv
81.9907 139.788 82.4902 139.29 82.4902 138.675 cv
@
113.335 126.362 mo
113.335 125.747 112.836 125.249 112.221 125.249 cv
111.606 125.249 111.107 125.747 111.107 126.362 cv
111.107 126.978 111.606 127.477 112.221 127.477 cv
112.836 127.477 113.335 126.978 113.335 126.362 cv
f
113.335 126.362 mo
113.335 125.747 112.836 125.249 112.221 125.249 cv
111.606 125.249 111.107 125.747 111.107 126.362 cv
111.107 126.978 111.606 127.477 112.221 127.477 cv
112.836 127.477 113.335 126.978 113.335 126.362 cv
@
105.127 122.788 mo
105.127 122.173 104.628 121.674 104.014 121.674 cv
103.398 121.674 102.899 122.173 102.899 122.788 cv
102.899 123.403 103.398 123.902 104.014 123.902 cv
104.628 123.902 105.127 123.403 105.127 122.788 cv
f
105.127 122.788 mo
105.127 122.173 104.628 121.674 104.014 121.674 cv
103.398 121.674 102.899 122.173 102.899 122.788 cv
102.899 123.403 103.398 123.902 104.014 123.902 cv
104.628 123.902 105.127 123.403 105.127 122.788 cv
@
90.1685 135.364 mo
90.1685 134.749 89.6689 134.251 89.0542 134.251 cv
88.439 134.251 87.9399 134.749 87.9399 135.364 cv
87.9399 135.979 88.439 136.479 89.0542 136.479 cv
89.6689 136.479 90.1685 135.979 90.1685 135.364 cv
f
90.1685 135.364 mo
90.1685 134.749 89.6689 134.251 89.0542 134.251 cv
88.439 134.251 87.9399 134.749 87.9399 135.364 cv
87.9399 135.979 88.439 136.479 89.0542 136.479 cv
89.6689 136.479 90.1685 135.979 90.1685 135.364 cv
@
86.9907 144.499 mo
86.9907 143.885 86.4917 143.385 85.877 143.385 cv
85.2617 143.385 84.7627 143.885 84.7627 144.499 cv
84.7627 145.114 85.2617 145.613 85.877 145.613 cv
86.4917 145.613 86.9907 145.114 86.9907 144.499 cv
f
86.9907 144.499 mo
86.9907 143.885 86.4917 143.385 85.877 143.385 cv
85.2617 143.385 84.7627 143.885 84.7627 144.499 cv
84.7627 145.114 85.2617 145.613 85.877 145.613 cv
86.4917 145.613 86.9907 145.114 86.9907 144.499 cv
@
67.9282 165.284 mo
67.9282 164.669 67.4287 164.168 66.814 164.168 cv
66.1987 164.168 65.6992 164.669 65.6992 165.284 cv
65.6992 165.899 66.1987 166.397 66.814 166.397 cv
67.4287 166.397 67.9282 165.899 67.9282 165.284 cv
f
67.9282 165.284 mo
67.9282 164.669 67.4287 164.168 66.814 164.168 cv
66.1987 164.168 65.6992 164.669 65.6992 165.284 cv
65.6992 165.899 66.1987 166.397 66.814 166.397 cv
67.4287 166.397 67.9282 165.899 67.9282 165.284 cv
@
70.5757 157.87 mo
70.5757 157.255 70.0762 156.755 69.4614 156.755 cv
68.8462 156.755 68.3472 157.255 68.3472 157.87 cv
68.3472 158.485 68.8462 158.984 69.4614 158.984 cv
70.0762 158.984 70.5757 158.485 70.5757 157.87 cv
f
70.5757 157.87 mo
70.5757 157.255 70.0762 156.755 69.4614 156.755 cv
68.8462 156.755 68.3472 157.255 68.3472 157.87 cv
68.3472 158.485 68.8462 158.984 69.4614 158.984 cv
70.0762 158.984 70.5757 158.485 70.5757 157.87 cv
@
223.081 19.0659 mo
223.081 18.4507 222.582 17.9517 221.967 17.9517 cv
221.352 17.9517 220.853 18.4507 220.853 19.0659 cv
220.853 19.6807 221.352 20.1802 221.967 20.1802 cv
222.582 20.1802 223.081 19.6807 223.081 19.0659 cv
f
223.081 19.0659 mo
223.081 18.4507 222.582 17.9517 221.967 17.9517 cv
221.352 17.9517 220.853 18.4507 220.853 19.0659 cv
220.853 19.6807 221.352 20.1802 221.967 20.1802 cv
222.582 20.1802 223.081 19.6807 223.081 19.0659 cv
@
235.393 9.79883 mo
235.393 9.18408 234.893 8.68457 234.279 8.68457 cv
233.664 8.68457 233.164 9.18408 233.164 9.79883 cv
233.164 10.4141 233.664 10.9131 234.279 10.9131 cv
234.893 10.9131 235.393 10.4141 235.393 9.79883 cv
f
235.393 9.79883 mo
235.393 9.18408 234.893 8.68457 234.279 8.68457 cv
233.664 8.68457 233.164 9.18408 233.164 9.79883 cv
233.164 10.4141 233.664 10.9131 234.279 10.9131 cv
234.893 10.9131 235.393 10.4141 235.393 9.79883 cv
@
54.2261 172.166 mo
54.2261 171.551 53.7271 171.053 53.1118 171.053 cv
52.4971 171.053 51.998 171.551 51.998 172.166 cv
51.998 172.781 52.4971 173.282 53.1118 173.282 cv
53.7271 173.282 54.2261 172.781 54.2261 172.166 cv
f
54.2261 172.166 mo
54.2261 171.551 53.7271 171.053 53.1118 171.053 cv
52.4971 171.053 51.998 171.551 51.998 172.166 cv
51.998 172.781 52.4971 173.282 53.1118 173.282 cv
53.7271 173.282 54.2261 172.781 54.2261 172.166 cv
@
129.751 117.095 mo
129.751 116.479 129.251 115.981 128.637 115.981 cv
128.022 115.981 127.522 116.479 127.522 117.095 cv
127.522 117.71 128.022 118.211 128.637 118.211 cv
129.251 118.211 129.751 117.71 129.751 117.095 cv
f
129.751 117.095 mo
129.751 116.479 129.251 115.981 128.637 115.981 cv
128.022 115.981 127.522 116.479 127.522 117.095 cv
127.522 117.71 128.022 118.211 128.637 118.211 cv
129.251 118.211 129.751 117.71 129.751 117.095 cv
@
119.756 122.126 mo
119.756 121.512 119.257 121.013 118.642 121.013 cv
118.027 121.013 117.528 121.512 117.528 122.126 cv
117.528 122.741 118.027 123.241 118.642 123.241 cv
119.257 123.241 119.756 122.741 119.756 122.126 cv
f
119.756 122.126 mo
119.756 121.512 119.257 121.013 118.642 121.013 cv
118.027 121.013 117.528 121.512 117.528 122.126 cv
117.528 122.741 118.027 123.241 118.642 123.241 cv
119.257 123.241 119.756 122.741 119.756 122.126 cv
@
117.704 119.082 mo
117.704 118.467 117.205 117.967 116.59 117.967 cv
115.975 117.967 115.476 118.467 115.476 119.082 cv
115.476 119.695 115.975 120.196 116.59 120.196 cv
117.205 120.196 117.704 119.695 117.704 119.082 cv
f
117.704 119.082 mo
117.704 118.467 117.205 117.967 116.59 117.967 cv
115.975 117.967 115.476 118.467 115.476 119.082 cv
115.476 119.695 115.975 120.196 116.59 120.196 cv
117.205 120.196 117.704 119.695 117.704 119.082 cv
@
107.974 127.95 mo
107.974 127.337 107.475 126.837 106.859 126.837 cv
106.245 126.837 105.745 127.337 105.745 127.95 cv
105.745 128.565 106.245 129.066 106.859 129.066 cv
107.475 129.066 107.974 128.565 107.974 127.95 cv
f
107.974 127.95 mo
107.974 127.337 107.475 126.837 106.859 126.837 cv
106.245 126.837 105.745 127.337 105.745 127.95 cv
105.745 128.565 106.245 129.066 106.859 129.066 cv
107.475 129.066 107.974 128.565 107.974 127.95 cv
@
155.896 93.002 mo
155.896 92.3867 155.397 91.8882 154.782 91.8882 cv
154.167 91.8882 153.668 92.3867 153.668 93.002 cv
153.668 93.6172 154.167 94.1162 154.782 94.1162 cv
155.397 94.1162 155.896 93.6172 155.896 93.002 cv
f
155.896 93.002 mo
155.896 92.3867 155.397 91.8882 154.782 91.8882 cv
154.167 91.8882 153.668 92.3867 153.668 93.002 cv
153.668 93.6172 154.167 94.1162 154.782 94.1162 cv
155.397 94.1162 155.896 93.6172 155.896 93.002 cv
@
83.4829 146.088 mo
83.4829 145.473 82.9839 144.974 82.3687 144.974 cv
81.7534 144.974 81.2544 145.473 81.2544 146.088 cv
81.2544 146.703 81.7534 147.201 82.3687 147.201 cv
82.9839 147.201 83.4829 146.703 83.4829 146.088 cv
f
83.4829 146.088 mo
83.4829 145.473 82.9839 144.974 82.3687 144.974 cv
81.7534 144.974 81.2544 145.473 81.2544 146.088 cv
81.2544 146.703 81.7534 147.201 82.3687 147.201 cv
82.9839 147.201 83.4829 146.703 83.4829 146.088 cv
@
130.148 106.24 mo
130.148 105.625 129.649 105.126 129.034 105.126 cv
128.419 105.126 127.919 105.625 127.919 106.24 cv
127.919 106.855 128.419 107.354 129.034 107.354 cv
129.649 107.354 130.148 106.855 130.148 106.24 cv
f
130.148 106.24 mo
130.148 105.625 129.649 105.126 129.034 105.126 cv
128.419 105.126 127.919 105.625 127.919 106.24 cv
127.919 106.855 128.419 107.354 129.034 107.354 cv
129.649 107.354 130.148 106.855 130.148 106.24 cv
@
80.1069 142.513 mo
80.1069 141.897 79.6079 141.399 78.9927 141.399 cv
78.3779 141.399 77.8789 141.897 77.8789 142.513 cv
77.8789 143.128 78.3779 143.628 78.9927 143.628 cv
79.6079 143.628 80.1069 143.128 80.1069 142.513 cv
f
80.1069 142.513 mo
80.1069 141.897 79.6079 141.399 78.9927 141.399 cv
78.3779 141.399 77.8789 141.897 77.8789 142.513 cv
77.8789 143.128 78.3779 143.628 78.9927 143.628 cv
79.6079 143.628 80.1069 143.128 80.1069 142.513 cv
@
117.439 111.402 mo
117.439 110.789 116.94 110.289 116.325 110.289 cv
115.71 110.289 115.211 110.789 115.211 111.402 cv
115.211 112.018 115.71 112.518 116.325 112.518 cv
116.94 112.518 117.439 112.018 117.439 111.402 cv
f
117.439 111.402 mo
117.439 110.789 116.94 110.289 116.325 110.289 cv
115.71 110.289 115.211 110.789 115.211 111.402 cv
115.211 112.018 115.71 112.518 116.325 112.518 cv
116.94 112.518 117.439 112.018 117.439 111.402 cv
@
71.3701 157.208 mo
71.3701 156.593 70.8706 156.094 70.2554 156.094 cv
69.6406 156.094 69.1411 156.593 69.1411 157.208 cv
69.1411 157.823 69.6406 158.322 70.2554 158.322 cv
70.8706 158.322 71.3701 157.823 71.3701 157.208 cv
f
71.3701 157.208 mo
71.3701 156.593 70.8706 156.094 70.2554 156.094 cv
69.6406 156.094 69.1411 156.593 69.1411 157.208 cv
69.1411 157.823 69.6406 158.322 70.2554 158.322 cv
70.8706 158.322 71.3701 157.823 71.3701 157.208 cv
@
47.144 180.44 mo
47.144 179.825 46.6445 179.327 46.0293 179.327 cv
45.4146 179.327 44.915 179.825 44.915 180.44 cv
44.915 181.056 45.4146 181.556 46.0293 181.556 cv
46.6445 181.556 47.144 181.056 47.144 180.44 cv
f
47.144 180.44 mo
47.144 179.825 46.6445 179.327 46.0293 179.327 cv
45.4146 179.327 44.915 179.825 44.915 180.44 cv
44.915 181.056 45.4146 181.556 46.0293 181.556 cv
46.6445 181.556 47.144 181.056 47.144 180.44 cv
@
50.5859 179.581 mo
50.5859 178.966 50.0869 178.466 49.4717 178.466 cv
48.8564 178.466 48.3574 178.966 48.3574 179.581 cv
48.3574 180.196 48.8564 180.695 49.4717 180.695 cv
50.0869 180.695 50.5859 180.196 50.5859 179.581 cv
f
50.5859 179.581 mo
50.5859 178.966 50.0869 178.466 49.4717 178.466 cv
48.8564 178.466 48.3574 178.966 48.3574 179.581 cv
48.3574 180.196 48.8564 180.695 49.4717 180.695 cv
50.0869 180.695 50.5859 180.196 50.5859 179.581 cv
@
37.4795 181.699 mo
37.4795 181.084 36.981 180.585 36.3657 180.585 cv
35.7505 180.585 35.2515 181.084 35.2515 181.699 cv
35.2515 182.314 35.7505 182.813 36.3657 182.813 cv
36.981 182.813 37.4795 182.314 37.4795 181.699 cv
f
37.4795 181.699 mo
37.4795 181.084 36.981 180.585 36.3657 180.585 cv
35.7505 180.585 35.2515 181.084 35.2515 181.699 cv
35.2515 182.314 35.7505 182.813 36.3657 182.813 cv
36.981 182.813 37.4795 182.314 37.4795 181.699 cv
@
47.6738 187.788 mo
47.6738 187.173 47.1743 186.674 46.5591 186.674 cv
45.9443 186.674 45.4448 187.173 45.4448 187.788 cv
45.4448 188.403 45.9443 188.901 46.5591 188.901 cv
47.1743 188.901 47.6738 188.403 47.6738 187.788 cv
f
47.6738 187.788 mo
47.6738 187.173 47.1743 186.674 46.5591 186.674 cv
45.9443 186.674 45.4448 187.173 45.4448 187.788 cv
45.4448 188.403 45.9443 188.901 46.5591 188.901 cv
47.1743 188.901 47.6738 188.403 47.6738 187.788 cv
@
63.1621 170.313 mo
63.1621 169.699 62.6631 169.199 62.0483 169.199 cv
61.4331 169.199 60.9341 169.699 60.9341 170.313 cv
60.9341 170.929 61.4331 171.428 62.0483 171.428 cv
62.6631 171.428 63.1621 170.929 63.1621 170.313 cv
f
63.1621 170.313 mo
63.1621 169.699 62.6631 169.199 62.0483 169.199 cv
61.4331 169.199 60.9341 169.699 60.9341 170.313 cv
60.9341 170.929 61.4331 171.428 62.0483 171.428 cv
62.6631 171.428 63.1621 170.929 63.1621 170.313 cv
@
33.5083 187.127 mo
33.5083 186.512 33.0093 186.013 32.394 186.013 cv
31.7793 186.013 31.2798 186.512 31.2798 187.127 cv
31.2798 187.742 31.7793 188.24 32.394 188.24 cv
33.0093 188.24 33.5083 187.742 33.5083 187.127 cv
f
33.5083 187.127 mo
33.5083 186.512 33.0093 186.013 32.394 186.013 cv
31.7793 186.013 31.2798 186.512 31.2798 187.127 cv
31.2798 187.742 31.7793 188.24 32.394 188.24 cv
33.0093 188.24 33.5083 187.742 33.5083 187.127 cv
@
32.3169 186.464 mo
32.3169 185.85 31.8174 185.351 31.2026 185.351 cv
30.5874 185.351 30.0884 185.85 30.0884 186.464 cv
30.0884 187.079 30.5874 187.58 31.2026 187.58 cv
31.8174 187.58 32.3169 187.079 32.3169 186.464 cv
f
32.3169 186.464 mo
32.3169 185.85 31.8174 185.351 31.2026 185.351 cv
30.5874 185.351 30.0884 185.85 30.0884 186.464 cv
30.0884 187.079 30.5874 187.58 31.2026 187.58 cv
31.8174 187.58 32.3169 187.079 32.3169 186.464 cv
@
39.7305 188.583 mo
39.7305 187.968 39.2314 187.469 38.6162 187.469 cv
38.001 187.469 37.502 187.968 37.502 188.583 cv
37.502 189.197 38.001 189.696 38.6162 189.696 cv
39.2314 189.696 39.7305 189.197 39.7305 188.583 cv
f
39.7305 188.583 mo
39.7305 187.968 39.2314 187.469 38.6162 187.469 cv
38.001 187.469 37.502 187.968 37.502 188.583 cv
37.502 189.197 38.001 189.696 38.6162 189.696 cv
39.2314 189.696 39.7305 189.197 39.7305 188.583 cv
@
62.103 167.665 mo
62.103 167.052 61.604 166.552 60.9893 166.552 cv
60.374 166.552 59.875 167.052 59.875 167.665 cv
59.875 168.28 60.374 168.781 60.9893 168.781 cv
61.604 168.781 62.103 168.28 62.103 167.665 cv
f
62.103 167.665 mo
62.103 167.052 61.604 166.552 60.9893 166.552 cv
60.374 166.552 59.875 167.052 59.875 167.665 cv
59.875 168.28 60.374 168.781 60.9893 168.781 cv
61.604 168.781 62.103 168.28 62.103 167.665 cv
@
62.3677 171.107 mo
62.3677 170.492 61.8687 169.994 61.2534 169.994 cv
60.6382 169.994 60.1396 170.492 60.1396 171.107 cv
60.1396 171.723 60.6382 172.223 61.2534 172.223 cv
61.8687 172.223 62.3677 171.723 62.3677 171.107 cv
f
62.3677 171.107 mo
62.3677 170.492 61.8687 169.994 61.2534 169.994 cv
60.6382 169.994 60.1396 170.492 60.1396 171.107 cv
60.1396 171.723 60.6382 172.223 61.2534 172.223 cv
61.8687 172.223 62.3677 171.723 62.3677 171.107 cv
@
47.0117 179.978 mo
47.0117 179.362 46.5122 178.863 45.897 178.863 cv
45.2822 178.863 44.7827 179.362 44.7827 179.978 cv
44.7827 180.593 45.2822 181.093 45.897 181.093 cv
46.5122 181.093 47.0117 180.593 47.0117 179.978 cv
f
47.0117 179.978 mo
47.0117 179.362 46.5122 178.863 45.897 178.863 cv
45.2822 178.863 44.7827 179.362 44.7827 179.978 cv
44.7827 180.593 45.2822 181.093 45.897 181.093 cv
46.5122 181.093 47.0117 180.593 47.0117 179.978 cv
@
55.749 180.64 mo
55.749 180.024 55.2495 179.525 54.6348 179.525 cv
54.0195 179.525 53.52 180.024 53.52 180.64 cv
53.52 181.255 54.0195 181.754 54.6348 181.754 cv
55.2495 181.754 55.749 181.255 55.749 180.64 cv
f
55.749 180.64 mo
55.749 180.024 55.2495 179.525 54.6348 179.525 cv
54.0195 179.525 53.52 180.024 53.52 180.64 cv
53.52 181.255 54.0195 181.754 54.6348 181.754 cv
55.2495 181.754 55.749 181.255 55.749 180.64 cv
@
44.4961 183.221 mo
44.4961 182.605 43.9971 182.107 43.3818 182.107 cv
42.7671 182.107 42.2676 182.605 42.2676 183.221 cv
42.2676 183.836 42.7671 184.335 43.3818 184.335 cv
43.9971 184.335 44.4961 183.836 44.4961 183.221 cv
f
44.4961 183.221 mo
44.4961 182.605 43.9971 182.107 43.3818 182.107 cv
42.7671 182.107 42.2676 182.605 42.2676 183.221 cv
42.2676 183.836 42.7671 184.335 43.3818 184.335 cv
43.9971 184.335 44.4961 183.836 44.4961 183.221 cv
@
41.981 184.743 mo
41.981 184.128 41.4814 183.63 40.8667 183.63 cv
40.2515 183.63 39.7524 184.128 39.7524 184.743 cv
39.7524 185.358 40.2515 185.857 40.8667 185.857 cv
41.4814 185.857 41.981 185.358 41.981 184.743 cv
f
41.981 184.743 mo
41.981 184.128 41.4814 183.63 40.8667 183.63 cv
40.2515 183.63 39.7524 184.128 39.7524 184.743 cv
39.7524 185.358 40.2515 185.857 40.8667 185.857 cv
41.4814 185.857 41.981 185.358 41.981 184.743 cv
@
58.3965 179.448 mo
58.3965 178.833 57.897 178.334 57.2817 178.334 cv
56.667 178.334 56.168 178.833 56.168 179.448 cv
56.168 180.063 56.667 180.563 57.2817 180.563 cv
57.897 180.563 58.3965 180.063 58.3965 179.448 cv
f
58.3965 179.448 mo
58.3965 178.833 57.897 178.334 57.2817 178.334 cv
56.667 178.334 56.168 178.833 56.168 179.448 cv
56.168 180.063 56.667 180.563 57.2817 180.563 cv
57.897 180.563 58.3965 180.063 58.3965 179.448 cv
@
55.3516 173.358 mo
55.3516 172.743 54.8525 172.244 54.2373 172.244 cv
53.6221 172.244 53.123 172.743 53.123 173.358 cv
53.123 173.974 53.6221 174.474 54.2373 174.474 cv
54.8525 174.474 55.3516 173.974 55.3516 173.358 cv
f
55.3516 173.358 mo
55.3516 172.743 54.8525 172.244 54.2373 172.244 cv
53.6221 172.244 53.123 172.743 53.123 173.358 cv
53.123 173.974 53.6221 174.474 54.2373 174.474 cv
54.8525 174.474 55.3516 173.974 55.3516 173.358 cv
@
104.598 132.915 mo
104.598 132.301 104.099 131.801 103.484 131.801 cv
102.869 131.801 102.37 132.301 102.37 132.915 cv
102.37 133.53 102.869 134.03 103.484 134.03 cv
104.099 134.03 104.598 133.53 104.598 132.915 cv
f
104.598 132.915 mo
104.598 132.301 104.099 131.801 103.484 131.801 cv
102.869 131.801 102.37 132.301 102.37 132.915 cv
102.37 133.53 102.869 134.03 103.484 134.03 cv
104.099 134.03 104.598 133.53 104.598 132.915 cv
@
71.2373 160.518 mo
71.2373 159.902 70.7383 159.403 70.123 159.403 cv
69.5083 159.403 69.0088 159.902 69.0088 160.518 cv
69.0088 161.133 69.5083 161.632 70.123 161.632 cv
70.7383 161.632 71.2373 161.133 71.2373 160.518 cv
f
71.2373 160.518 mo
71.2373 159.902 70.7383 159.403 70.123 159.403 cv
69.5083 159.403 69.0088 159.902 69.0088 160.518 cv
69.0088 161.133 69.5083 161.632 70.123 161.632 cv
70.7383 161.632 71.2373 161.133 71.2373 160.518 cv
@
73.4214 161.577 mo
73.4214 160.962 72.9224 160.462 72.3076 160.462 cv
71.6924 160.462 71.1938 160.962 71.1938 161.577 cv
71.1938 162.192 71.6924 162.69 72.3076 162.69 cv
72.9224 162.69 73.4214 162.192 73.4214 161.577 cv
f
73.4214 161.577 mo
73.4214 160.962 72.9224 160.462 72.3076 160.462 cv
71.6924 160.462 71.1938 160.962 71.1938 161.577 cv
71.1938 162.192 71.6924 162.69 72.3076 162.69 cv
72.9224 162.69 73.4214 162.192 73.4214 161.577 cv
@
69.1196 159.459 mo
69.1196 158.844 68.6201 158.344 68.0054 158.344 cv
67.3901 158.344 66.8906 158.844 66.8906 159.459 cv
66.8906 160.074 67.3901 160.572 68.0054 160.572 cv
68.6201 160.572 69.1196 160.074 69.1196 159.459 cv
f
69.1196 159.459 mo
69.1196 158.844 68.6201 158.344 68.0054 158.344 cv
67.3901 158.344 66.8906 158.844 66.8906 159.459 cv
66.8906 160.074 67.3901 160.572 68.0054 160.572 cv
68.6201 160.572 69.1196 160.074 69.1196 159.459 cv
@
119.557 111.271 mo
119.557 110.656 119.059 110.156 118.443 110.156 cv
117.829 110.156 117.329 110.656 117.329 111.271 cv
117.329 111.885 117.829 112.385 118.443 112.385 cv
119.059 112.385 119.557 111.885 119.557 111.271 cv
f
119.557 111.271 mo
119.557 110.656 119.059 110.156 118.443 110.156 cv
117.829 110.156 117.329 110.656 117.329 111.271 cv
117.329 111.885 117.829 112.385 118.443 112.385 cv
119.059 112.385 119.557 111.885 119.557 111.271 cv
@
62.103 172.962 mo
62.103 172.347 61.604 171.847 60.9893 171.847 cv
60.374 171.847 59.875 172.347 59.875 172.962 cv
59.875 173.576 60.374 174.076 60.9893 174.076 cv
61.604 174.076 62.103 173.576 62.103 172.962 cv
f
62.103 172.962 mo
62.103 172.347 61.604 171.847 60.9893 171.847 cv
60.374 171.847 59.875 172.347 59.875 172.962 cv
59.875 173.576 60.374 174.076 60.9893 174.076 cv
61.604 174.076 62.103 173.576 62.103 172.962 cv
@
79.1807 156.348 mo
79.1807 155.732 78.6812 155.232 78.0664 155.232 cv
77.4512 155.232 76.9521 155.732 76.9521 156.348 cv
76.9521 156.963 77.4512 157.461 78.0664 157.461 cv
78.6812 157.461 79.1807 156.963 79.1807 156.348 cv
f
79.1807 156.348 mo
79.1807 155.732 78.6812 155.232 78.0664 155.232 cv
77.4512 155.232 76.9521 155.732 76.9521 156.348 cv
76.9521 156.963 77.4512 157.461 78.0664 157.461 cv
78.6812 157.461 79.1807 156.963 79.1807 156.348 cv
@
65.8101 169.388 mo
65.8101 168.772 65.3105 168.273 64.6958 168.273 cv
64.0806 168.273 63.5811 168.772 63.5811 169.388 cv
63.5811 170.002 64.0806 170.501 64.6958 170.501 cv
65.3105 170.501 65.8101 170.002 65.8101 169.388 cv
f
65.8101 169.388 mo
65.8101 168.772 65.3105 168.273 64.6958 168.273 cv
64.0806 168.273 63.5811 168.772 63.5811 169.388 cv
63.5811 170.002 64.0806 170.501 64.6958 170.501 cv
65.3105 170.501 65.8101 170.002 65.8101 169.388 cv
@
41.584 187.127 mo
41.584 186.512 41.0845 186.013 40.4697 186.013 cv
39.8545 186.013 39.3555 186.512 39.3555 187.127 cv
39.3555 187.742 39.8545 188.24 40.4697 188.24 cv
41.0845 188.24 41.584 187.742 41.584 187.127 cv
f
41.584 187.127 mo
41.584 186.512 41.0845 186.013 40.4697 186.013 cv
39.8545 186.013 39.3555 186.512 39.3555 187.127 cv
39.3555 187.742 39.8545 188.24 40.4697 188.24 cv
41.0845 188.24 41.584 187.742 41.584 187.127 cv
@
50.3872 181.831 mo
50.3872 181.216 49.8882 180.717 49.2729 180.717 cv
48.6577 180.717 48.1587 181.216 48.1587 181.831 cv
48.1587 182.446 48.6577 182.946 49.2729 182.946 cv
49.8882 182.946 50.3872 182.446 50.3872 181.831 cv
f
50.3872 181.831 mo
50.3872 181.216 49.8882 180.717 49.2729 180.717 cv
48.6577 180.717 48.1587 181.216 48.1587 181.831 cv
48.1587 182.446 48.6577 182.946 49.2729 182.946 cv
49.8882 182.946 50.3872 182.446 50.3872 181.831 cv
@
47.6738 184.147 mo
47.6738 183.532 47.1743 183.034 46.5591 183.034 cv
45.9443 183.034 45.4448 183.532 45.4448 184.147 cv
45.4448 184.763 45.9443 185.262 46.5591 185.262 cv
47.1743 185.262 47.6738 184.763 47.6738 184.147 cv
f
47.6738 184.147 mo
47.6738 183.532 47.1743 183.034 46.5591 183.034 cv
45.9443 183.034 45.4448 183.532 45.4448 184.147 cv
45.4448 184.763 45.9443 185.262 46.5591 185.262 cv
47.1743 185.262 47.6738 184.763 47.6738 184.147 cv
@
49.6592 183.949 mo
49.6592 183.334 49.1597 182.835 48.5449 182.835 cv
47.9297 182.835 47.4307 183.334 47.4307 183.949 cv
47.4307 184.564 47.9297 185.063 48.5449 185.063 cv
49.1597 185.063 49.6592 184.564 49.6592 183.949 cv
f
49.6592 183.949 mo
49.6592 183.334 49.1597 182.835 48.5449 182.835 cv
47.9297 182.835 47.4307 183.334 47.4307 183.949 cv
47.4307 184.564 47.9297 185.063 48.5449 185.063 cv
49.1597 185.063 49.6592 184.564 49.6592 183.949 cv
@
150.667 82.9404 mo
150.667 82.3257 150.169 81.8267 149.554 81.8267 cv
148.938 81.8267 148.439 82.3257 148.439 82.9404 cv
148.439 83.5557 148.938 84.0547 149.554 84.0547 cv
150.169 84.0547 150.667 83.5557 150.667 82.9404 cv
f
150.667 82.9404 mo
150.667 82.3257 150.169 81.8267 149.554 81.8267 cv
148.938 81.8267 148.439 82.3257 148.439 82.9404 cv
148.439 83.5557 148.938 84.0547 149.554 84.0547 cv
150.169 84.0547 150.667 83.5557 150.667 82.9404 cv
@
34.0381 189.906 mo
34.0381 189.291 33.5386 188.792 32.9233 188.792 cv
32.3086 188.792 31.8091 189.291 31.8091 189.906 cv
31.8091 190.521 32.3086 191.021 32.9233 191.021 cv
33.5386 191.021 34.0381 190.521 34.0381 189.906 cv
f
34.0381 189.906 mo
34.0381 189.291 33.5386 188.792 32.9233 188.792 cv
32.3086 188.792 31.8091 189.291 31.8091 189.906 cv
31.8091 190.521 32.3086 191.021 32.9233 191.021 cv
33.5386 191.021 34.0381 190.521 34.0381 189.906 cv
@
51.9092 178.124 mo
51.9092 177.509 51.4106 177.011 50.7954 177.011 cv
50.1802 177.011 49.6816 177.509 49.6816 178.124 cv
49.6816 178.739 50.1802 179.238 50.7954 179.238 cv
51.4106 179.238 51.9092 178.739 51.9092 178.124 cv
f
51.9092 178.124 mo
51.9092 177.509 51.4106 177.011 50.7954 177.011 cv
50.1802 177.011 49.6816 177.509 49.6816 178.124 cv
49.6816 178.739 50.1802 179.238 50.7954 179.238 cv
51.4106 179.238 51.9092 178.739 51.9092 178.124 cv
@
43.9663 184.545 mo
43.9663 183.93 43.4678 183.431 42.8525 183.431 cv
42.2378 183.431 41.7383 183.93 41.7383 184.545 cv
41.7383 185.16 42.2378 185.66 42.8525 185.66 cv
43.4678 185.66 43.9663 185.16 43.9663 184.545 cv
f
43.9663 184.545 mo
43.9663 183.93 43.4678 183.431 42.8525 183.431 cv
42.2378 183.431 41.7383 183.93 41.7383 184.545 cv
41.7383 185.16 42.2378 185.66 42.8525 185.66 cv
43.4678 185.66 43.9663 185.16 43.9663 184.545 cv
@
41.7822 188.318 mo
41.7822 187.703 41.2832 187.204 40.668 187.204 cv
40.0532 187.204 39.5537 187.703 39.5537 188.318 cv
39.5537 188.934 40.0532 189.432 40.668 189.432 cv
41.2832 189.432 41.7822 188.934 41.7822 188.318 cv
f
41.7822 188.318 mo
41.7822 187.703 41.2832 187.204 40.668 187.204 cv
40.0532 187.204 39.5537 187.703 39.5537 188.318 cv
39.5537 188.934 40.0532 189.432 40.668 189.432 cv
41.2832 189.432 41.7822 188.934 41.7822 188.318 cv
@
41.1865 186.464 mo
41.1865 185.85 40.6875 185.351 40.0723 185.351 cv
39.4575 185.351 38.958 185.85 38.958 186.464 cv
38.958 187.079 39.4575 187.58 40.0723 187.58 cv
40.6875 187.58 41.1865 187.079 41.1865 186.464 cv
f
41.1865 186.464 mo
41.1865 185.85 40.6875 185.351 40.0723 185.351 cv
39.4575 185.351 38.958 185.85 38.958 186.464 cv
38.958 187.079 39.4575 187.58 40.0723 187.58 cv
40.6875 187.58 41.1865 187.079 41.1865 186.464 cv
@
40.2598 188.583 mo
40.2598 187.968 39.7603 187.469 39.1455 187.469 cv
38.5303 187.469 38.0313 187.968 38.0313 188.583 cv
38.0313 189.197 38.5303 189.696 39.1455 189.696 cv
39.7603 189.696 40.2598 189.197 40.2598 188.583 cv
f
40.2598 188.583 mo
40.2598 187.968 39.7603 187.469 39.1455 187.469 cv
38.5303 187.469 38.0313 187.968 38.0313 188.583 cv
38.0313 189.197 38.5303 189.696 39.1455 189.696 cv
39.7603 189.696 40.2598 189.197 40.2598 188.583 cv
@
83.2847 142.513 mo
83.2847 141.897 82.7852 141.399 82.1699 141.399 cv
81.5552 141.399 81.0557 141.897 81.0557 142.513 cv
81.0557 143.128 81.5552 143.628 82.1699 143.628 cv
82.7852 143.628 83.2847 143.128 83.2847 142.513 cv
f
83.2847 142.513 mo
83.2847 141.897 82.7852 141.399 82.1699 141.399 cv
81.5552 141.399 81.0557 141.897 81.0557 142.513 cv
81.0557 143.128 81.5552 143.628 82.1699 143.628 cv
82.7852 143.628 83.2847 143.128 83.2847 142.513 cv
@
74.1499 157.208 mo
74.1499 156.593 73.6509 156.094 73.0356 156.094 cv
72.4204 156.094 71.9214 156.593 71.9214 157.208 cv
71.9214 157.823 72.4204 158.322 73.0356 158.322 cv
73.6509 158.322 74.1499 157.823 74.1499 157.208 cv
f
74.1499 157.208 mo
74.1499 156.593 73.6509 156.094 73.0356 156.094 cv
72.4204 156.094 71.9214 156.593 71.9214 157.208 cv
71.9214 157.823 72.4204 158.322 73.0356 158.322 cv
73.6509 158.322 74.1499 157.823 74.1499 157.208 cv
@
113.071 112.991 mo
113.071 112.377 112.571 111.877 111.957 111.877 cv
111.341 111.877 110.842 112.377 110.842 112.991 cv
110.842 113.606 111.341 114.106 111.957 114.106 cv
112.571 114.106 113.071 113.606 113.071 112.991 cv
f
113.071 112.991 mo
113.071 112.377 112.571 111.877 111.957 111.877 cv
111.341 111.877 110.842 112.377 110.842 112.991 cv
110.842 113.606 111.341 114.106 111.957 114.106 cv
112.571 114.106 113.071 113.606 113.071 112.991 cv
@
80.2397 154.561 mo
80.2397 153.945 79.7402 153.445 79.1255 153.445 cv
78.5103 153.445 78.0112 153.945 78.0112 154.561 cv
78.0112 155.176 78.5103 155.675 79.1255 155.675 cv
79.7402 155.675 80.2397 155.176 80.2397 154.561 cv
f
80.2397 154.561 mo
80.2397 153.945 79.7402 153.445 79.1255 153.445 cv
78.5103 153.445 78.0112 153.945 78.0112 154.561 cv
78.0112 155.176 78.5103 155.675 79.1255 155.675 cv
79.7402 155.675 80.2397 155.176 80.2397 154.561 cv
@
54.6895 167.534 mo
54.6895 166.919 54.1904 166.419 53.5752 166.419 cv
52.9604 166.419 52.4609 166.919 52.4609 167.534 cv
52.4609 168.148 52.9604 168.648 53.5752 168.648 cv
54.1904 168.648 54.6895 168.148 54.6895 167.534 cv
f
54.6895 167.534 mo
54.6895 166.919 54.1904 166.419 53.5752 166.419 cv
52.9604 166.419 52.4609 166.919 52.4609 167.534 cv
52.4609 168.148 52.9604 168.648 53.5752 168.648 cv
54.1904 168.648 54.6895 168.148 54.6895 167.534 cv
@
77.4595 143.439 mo
77.4595 142.825 76.96 142.326 76.3452 142.326 cv
75.73 142.326 75.231 142.825 75.231 143.439 cv
75.231 144.055 75.73 144.555 76.3452 144.555 cv
76.96 144.555 77.4595 144.055 77.4595 143.439 cv
f
77.4595 143.439 mo
77.4595 142.825 76.96 142.326 76.3452 142.326 cv
75.73 142.326 75.231 142.825 75.231 143.439 cv
75.231 144.055 75.73 144.555 76.3452 144.555 cv
76.96 144.555 77.4595 144.055 77.4595 143.439 cv
@
62.0371 170.975 mo
62.0371 170.361 61.5376 169.861 60.9229 169.861 cv
60.3076 169.861 59.8086 170.361 59.8086 170.975 cv
59.8086 171.59 60.3076 172.091 60.9229 172.091 cv
61.5376 172.091 62.0371 171.59 62.0371 170.975 cv
f
62.0371 170.975 mo
62.0371 170.361 61.5376 169.861 60.9229 169.861 cv
60.3076 169.861 59.8086 170.361 59.8086 170.975 cv
59.8086 171.59 60.3076 172.091 60.9229 172.091 cv
61.5376 172.091 62.0371 171.59 62.0371 170.975 cv
@
109.099 116.963 mo
109.099 116.349 108.6 115.849 107.985 115.849 cv
107.37 115.849 106.871 116.349 106.871 116.963 cv
106.871 117.578 107.37 118.078 107.985 118.078 cv
108.6 118.078 109.099 117.578 109.099 116.963 cv
f
109.099 116.963 mo
109.099 116.349 108.6 115.849 107.985 115.849 cv
107.37 115.849 106.871 116.349 106.871 116.963 cv
106.871 117.578 107.37 118.078 107.985 118.078 cv
108.6 118.078 109.099 117.578 109.099 116.963 cv
@
102.348 128.282 mo
102.348 127.667 101.848 127.168 101.233 127.168 cv
100.618 127.168 100.119 127.667 100.119 128.282 cv
100.119 128.897 100.618 129.396 101.233 129.396 cv
101.848 129.396 102.348 128.897 102.348 128.282 cv
f
102.348 128.282 mo
102.348 127.667 101.848 127.168 101.233 127.168 cv
100.618 127.168 100.119 127.667 100.119 128.282 cv
100.119 128.897 100.618 129.396 101.233 129.396 cv
101.848 129.396 102.348 128.897 102.348 128.282 cv
@
78.6509 149.463 mo
78.6509 148.849 78.1514 148.35 77.5366 148.35 cv
76.9214 148.35 76.4229 148.849 76.4229 149.463 cv
76.4229 150.078 76.9214 150.578 77.5366 150.578 cv
78.1514 150.578 78.6509 150.078 78.6509 149.463 cv
f
78.6509 149.463 mo
78.6509 148.849 78.1514 148.35 77.5366 148.35 cv
76.9214 148.35 76.4229 148.849 76.4229 149.463 cv
76.4229 150.078 76.9214 150.578 77.5366 150.578 cv
78.1514 150.578 78.6509 150.078 78.6509 149.463 cv
@
89.6392 143.705 mo
89.6392 143.09 89.1396 142.591 88.5249 142.591 cv
87.9097 142.591 87.4106 143.09 87.4106 143.705 cv
87.4106 144.32 87.9097 144.818 88.5249 144.818 cv
89.1396 144.818 89.6392 144.32 89.6392 143.705 cv
f
89.6392 143.705 mo
89.6392 143.09 89.1396 142.591 88.5249 142.591 cv
87.9097 142.591 87.4106 143.09 87.4106 143.705 cv
87.4106 144.32 87.9097 144.818 88.5249 144.818 cv
89.1396 144.818 89.6392 144.32 89.6392 143.705 cv
@
61.0439 161.775 mo
61.0439 161.16 60.5449 160.66 59.9297 160.66 cv
59.3149 160.66 58.8154 161.16 58.8154 161.775 cv
58.8154 162.391 59.3149 162.89 59.9297 162.89 cv
60.5449 162.89 61.0439 162.391 61.0439 161.775 cv
f
61.0439 161.775 mo
61.0439 161.16 60.5449 160.66 59.9297 160.66 cv
59.3149 160.66 58.8154 161.16 58.8154 161.775 cv
58.8154 162.391 59.3149 162.89 59.9297 162.89 cv
60.5449 162.89 61.0439 162.391 61.0439 161.775 cv
@
71.7666 156.811 mo
71.7666 156.195 71.2676 155.696 70.6528 155.696 cv
70.0376 155.696 69.5391 156.195 69.5391 156.811 cv
69.5391 157.426 70.0376 157.926 70.6528 157.926 cv
71.2676 157.926 71.7666 157.426 71.7666 156.811 cv
f
71.7666 156.811 mo
71.7666 156.195 71.2676 155.696 70.6528 155.696 cv
70.0376 155.696 69.5391 156.195 69.5391 156.811 cv
69.5391 157.426 70.0376 157.926 70.6528 157.926 cv
71.2676 157.926 71.7666 157.426 71.7666 156.811 cv
@
53.2334 173.756 mo
53.2334 173.141 52.7339 172.642 52.1191 172.642 cv
51.5039 172.642 51.0049 173.141 51.0049 173.756 cv
51.0049 174.371 51.5039 174.87 52.1191 174.87 cv
52.7339 174.87 53.2334 174.371 53.2334 173.756 cv
f
53.2334 173.756 mo
53.2334 173.141 52.7339 172.642 52.1191 172.642 cv
51.5039 172.642 51.0049 173.141 51.0049 173.756 cv
51.0049 174.371 51.5039 174.87 52.1191 174.87 cv
52.7339 174.87 53.2334 174.371 53.2334 173.756 cv
@
65.8101 161.775 mo
65.8101 161.16 65.3105 160.66 64.6958 160.66 cv
64.0806 160.66 63.5811 161.16 63.5811 161.775 cv
63.5811 162.391 64.0806 162.89 64.6958 162.89 cv
65.3105 162.89 65.8101 162.391 65.8101 161.775 cv
f
65.8101 161.775 mo
65.8101 161.16 65.3105 160.66 64.6958 160.66 cv
64.0806 160.66 63.5811 161.16 63.5811 161.775 cv
63.5811 162.391 64.0806 162.89 64.6958 162.89 cv
65.3105 162.89 65.8101 162.391 65.8101 161.775 cv
@
59.9849 170.579 mo
59.9849 169.964 59.4858 169.465 58.8706 169.465 cv
58.2559 169.465 57.7563 169.964 57.7563 170.579 cv
57.7563 171.193 58.2559 171.693 58.8706 171.693 cv
59.4858 171.693 59.9849 171.193 59.9849 170.579 cv
f
59.9849 170.579 mo
59.9849 169.964 59.4858 169.465 58.8706 169.465 cv
58.2559 169.465 57.7563 169.964 57.7563 170.579 cv
57.7563 171.193 58.2559 171.693 58.8706 171.693 cv
59.4858 171.693 59.9849 171.193 59.9849 170.579 cv
@
36.9502 190.701 mo
36.9502 190.086 36.4512 189.587 35.8359 189.587 cv
35.2212 189.587 34.7217 190.086 34.7217 190.701 cv
34.7217 191.315 35.2212 191.814 35.8359 191.814 cv
36.4512 191.814 36.9502 191.315 36.9502 190.701 cv
f
36.9502 190.701 mo
36.9502 190.086 36.4512 189.587 35.8359 189.587 cv
35.2212 189.587 34.7217 190.086 34.7217 190.701 cv
34.7217 191.315 35.2212 191.814 35.8359 191.814 cv
36.4512 191.814 36.9502 191.315 36.9502 190.701 cv
@
38.1416 188.715 mo
38.1416 188.1 37.6426 187.601 37.0273 187.601 cv
36.4121 187.601 35.9136 188.1 35.9136 188.715 cv
35.9136 189.33 36.4121 189.829 37.0273 189.829 cv
37.6426 189.829 38.1416 189.33 38.1416 188.715 cv
f
38.1416 188.715 mo
38.1416 188.1 37.6426 187.601 37.0273 187.601 cv
36.4121 187.601 35.9136 188.1 35.9136 188.715 cv
35.9136 189.33 36.4121 189.829 37.0273 189.829 cv
37.6426 189.829 38.1416 189.33 38.1416 188.715 cv
@
63.4268 166.143 mo
63.4268 165.528 62.9277 165.029 62.3125 165.029 cv
61.6973 165.029 61.1987 165.528 61.1987 166.143 cv
61.1987 166.758 61.6973 167.259 62.3125 167.259 cv
62.9277 167.259 63.4268 166.758 63.4268 166.143 cv
f
63.4268 166.143 mo
63.4268 165.528 62.9277 165.029 62.3125 165.029 cv
61.6973 165.029 61.1987 165.528 61.1987 166.143 cv
61.1987 166.758 61.6973 167.259 62.3125 167.259 cv
62.9277 167.259 63.4268 166.758 63.4268 166.143 cv
@
85.1377 144.565 mo
85.1377 143.95 84.6387 143.451 84.0234 143.451 cv
83.4082 143.451 82.9097 143.95 82.9097 144.565 cv
82.9097 145.181 83.4082 145.679 84.0234 145.679 cv
84.6387 145.679 85.1377 145.181 85.1377 144.565 cv
f
85.1377 144.565 mo
85.1377 143.95 84.6387 143.451 84.0234 143.451 cv
83.4082 143.451 82.9097 143.95 82.9097 144.565 cv
82.9097 145.181 83.4082 145.679 84.0234 145.679 cv
84.6387 145.679 85.1377 145.181 85.1377 144.565 cv
@
69.7817 165.548 mo
69.7817 164.933 69.2822 164.434 68.667 164.434 cv
68.0522 164.434 67.5527 164.933 67.5527 165.548 cv
67.5527 166.162 68.0522 166.663 68.667 166.663 cv
69.2822 166.663 69.7817 166.162 69.7817 165.548 cv
f
69.7817 165.548 mo
69.7817 164.933 69.2822 164.434 68.667 164.434 cv
68.0522 164.434 67.5527 164.933 67.5527 165.548 cv
67.5527 166.162 68.0522 166.663 68.667 166.663 cv
69.2822 166.663 69.7817 166.162 69.7817 165.548 cv
@
57.6021 172.036 mo
57.6021 171.421 57.1025 170.92 56.4878 170.92 cv
55.8726 170.92 55.3735 171.421 55.3735 172.036 cv
55.3735 172.649 55.8726 173.149 56.4878 173.149 cv
57.1025 173.149 57.6021 172.649 57.6021 172.036 cv
f
57.6021 172.036 mo
57.6021 171.421 57.1025 170.92 56.4878 170.92 cv
55.8726 170.92 55.3735 171.421 55.3735 172.036 cv
55.3735 172.649 55.8726 173.149 56.4878 173.149 cv
57.1025 173.149 57.6021 172.649 57.6021 172.036 cv
@
74.9443 158.665 mo
74.9443 158.05 74.4453 157.549 73.8301 157.549 cv
73.2148 157.549 72.7158 158.05 72.7158 158.665 cv
72.7158 159.28 73.2148 159.778 73.8301 159.778 cv
74.4453 159.778 74.9443 159.28 74.9443 158.665 cv
f
74.9443 158.665 mo
74.9443 158.05 74.4453 157.549 73.8301 157.549 cv
73.2148 157.549 72.7158 158.05 72.7158 158.665 cv
72.7158 159.28 73.2148 159.778 73.8301 159.778 cv
74.4453 159.778 74.9443 159.28 74.9443 158.665 cv
@
125.382 107.697 mo
125.382 107.082 124.883 106.583 124.268 106.583 cv
123.653 106.583 123.154 107.082 123.154 107.697 cv
123.154 108.311 123.653 108.811 124.268 108.811 cv
124.883 108.811 125.382 108.311 125.382 107.697 cv
f
125.382 107.697 mo
125.382 107.082 124.883 106.583 124.268 106.583 cv
123.653 106.583 123.154 107.082 123.154 107.697 cv
123.154 108.311 123.653 108.811 124.268 108.811 cv
124.883 108.811 125.382 108.311 125.382 107.697 cv
@
115.586 125.965 mo
115.586 125.35 115.087 124.852 114.472 124.852 cv
113.857 124.852 113.357 125.35 113.357 125.965 cv
113.357 126.58 113.857 127.08 114.472 127.08 cv
115.087 127.08 115.586 126.58 115.586 125.965 cv
f
115.586 125.965 mo
115.586 125.35 115.087 124.852 114.472 124.852 cv
113.857 124.852 113.357 125.35 113.357 125.965 cv
113.357 126.58 113.857 127.08 114.472 127.08 cv
115.087 127.08 115.586 126.58 115.586 125.965 cv
@
143.386 93.5313 mo
143.386 92.916 142.887 92.4165 142.272 92.4165 cv
141.657 92.4165 141.158 92.916 141.158 93.5313 cv
141.158 94.146 141.657 94.646 142.272 94.646 cv
142.887 94.646 143.386 94.146 143.386 93.5313 cv
f
143.386 93.5313 mo
143.386 92.916 142.887 92.4165 142.272 92.4165 cv
141.657 92.4165 141.158 92.916 141.158 93.5313 cv
141.158 94.146 141.657 94.646 142.272 94.646 cv
142.887 94.646 143.386 94.146 143.386 93.5313 cv
@
131.538 103.792 mo
131.538 103.176 131.039 102.677 130.423 102.677 cv
129.809 102.677 129.31 103.176 129.31 103.792 cv
129.31 104.407 129.809 104.905 130.423 104.905 cv
131.039 104.905 131.538 104.407 131.538 103.792 cv
f
131.538 103.792 mo
131.538 103.176 131.039 102.677 130.423 102.677 cv
129.809 102.677 129.31 103.176 129.31 103.792 cv
129.31 104.407 129.809 104.905 130.423 104.905 cv
131.039 104.905 131.538 104.407 131.538 103.792 cv
@
70.4434 166.143 mo
70.4434 165.528 69.9443 165.029 69.3291 165.029 cv
68.7144 165.029 68.2148 165.528 68.2148 166.143 cv
68.2148 166.758 68.7144 167.259 69.3291 167.259 cv
69.9443 167.259 70.4434 166.758 70.4434 166.143 cv
f
70.4434 166.143 mo
70.4434 165.528 69.9443 165.029 69.3291 165.029 cv
68.7144 165.029 68.2148 165.528 68.2148 166.143 cv
68.2148 166.758 68.7144 167.259 69.3291 167.259 cv
69.9443 167.259 70.4434 166.758 70.4434 166.143 cv
@
89.5063 146.088 mo
89.5063 145.473 89.0073 144.974 88.3921 144.974 cv
87.7769 144.974 87.2783 145.473 87.2783 146.088 cv
87.2783 146.703 87.7769 147.201 88.3921 147.201 cv
89.0073 147.201 89.5063 146.703 89.5063 146.088 cv
f
89.5063 146.088 mo
89.5063 145.473 89.0073 144.974 88.3921 144.974 cv
87.7769 144.974 87.2783 145.473 87.2783 146.088 cv
87.2783 146.703 87.7769 147.201 88.3921 147.201 cv
89.0073 147.201 89.5063 146.703 89.5063 146.088 cv
@
167.017 67.3857 mo
167.017 66.7705 166.518 66.272 165.902 66.272 cv
165.287 66.272 164.789 66.7705 164.789 67.3857 cv
164.789 68.0005 165.287 68.5 165.902 68.5 cv
166.518 68.5 167.017 68.0005 167.017 67.3857 cv
f
167.017 67.3857 mo
167.017 66.7705 166.518 66.272 165.902 66.272 cv
165.287 66.272 164.789 66.7705 164.789 67.3857 cv
164.789 68.0005 165.287 68.5 165.902 68.5 cv
166.518 68.5 167.017 68.0005 167.017 67.3857 cv
@
114.395 116.632 mo
114.395 116.017 113.896 115.518 113.28 115.518 cv
112.665 115.518 112.166 116.017 112.166 116.632 cv
112.166 117.247 112.665 117.746 113.28 117.746 cv
113.896 117.746 114.395 117.247 114.395 116.632 cv
f
114.395 116.632 mo
114.395 116.017 113.896 115.518 113.28 115.518 cv
112.665 115.518 112.166 116.017 112.166 116.632 cv
112.166 117.247 112.665 117.746 113.28 117.746 cv
113.896 117.746 114.395 117.247 114.395 116.632 cv
@
90.5654 142.646 mo
90.5654 142.03 90.0659 141.532 89.4512 141.532 cv
88.8359 141.532 88.3369 142.03 88.3369 142.646 cv
88.3369 143.261 88.8359 143.759 89.4512 143.759 cv
90.0659 143.759 90.5654 143.261 90.5654 142.646 cv
f
90.5654 142.646 mo
90.5654 142.03 90.0659 141.532 89.4512 141.532 cv
88.8359 141.532 88.3369 142.03 88.3369 142.646 cv
88.3369 143.261 88.8359 143.759 89.4512 143.759 cv
90.0659 143.759 90.5654 143.261 90.5654 142.646 cv
@
103.936 132.451 mo
103.936 131.836 103.437 131.338 102.822 131.338 cv
102.207 131.338 101.708 131.836 101.708 132.451 cv
101.708 133.066 102.207 133.567 102.822 133.567 cv
103.437 133.567 103.936 133.066 103.936 132.451 cv
f
103.936 132.451 mo
103.936 131.836 103.437 131.338 102.822 131.338 cv
102.207 131.338 101.708 131.836 101.708 132.451 cv
101.708 133.066 102.207 133.567 102.822 133.567 cv
103.437 133.567 103.936 133.066 103.936 132.451 cv
@
52.8364 176.535 mo
52.8364 175.922 52.3374 175.422 51.7222 175.422 cv
51.1069 175.422 50.6079 175.922 50.6079 176.535 cv
50.6079 177.15 51.1069 177.65 51.7222 177.65 cv
52.3374 177.65 52.8364 177.15 52.8364 176.535 cv
f
52.8364 176.535 mo
52.8364 175.922 52.3374 175.422 51.7222 175.422 cv
51.1069 175.422 50.6079 175.922 50.6079 176.535 cv
50.6079 177.15 51.1069 177.65 51.7222 177.65 cv
52.3374 177.65 52.8364 177.15 52.8364 176.535 cv
@
110.158 112.263 mo
110.158 111.648 109.659 111.149 109.044 111.149 cv
108.429 111.149 107.93 111.648 107.93 112.263 cv
107.93 112.878 108.429 113.377 109.044 113.377 cv
109.659 113.377 110.158 112.878 110.158 112.263 cv
f
110.158 112.263 mo
110.158 111.648 109.659 111.149 109.044 111.149 cv
108.429 111.149 107.93 111.648 107.93 112.263 cv
107.93 112.878 108.429 113.377 109.044 113.377 cv
109.659 113.377 110.158 112.878 110.158 112.263 cv
@
77.8564 150.854 mo
77.8564 150.238 77.3574 149.739 76.7422 149.739 cv
76.1274 149.739 75.6279 150.238 75.6279 150.854 cv
75.6279 151.469 76.1274 151.968 76.7422 151.968 cv
77.3574 151.968 77.8564 151.469 77.8564 150.854 cv
f
77.8564 150.854 mo
77.8564 150.238 77.3574 149.739 76.7422 149.739 cv
76.1274 149.739 75.6279 150.238 75.6279 150.854 cv
75.6279 151.469 76.1274 151.968 76.7422 151.968 cv
77.3574 151.968 77.8564 151.469 77.8564 150.854 cv
@
90.5654 139.071 mo
90.5654 138.456 90.0659 137.957 89.4512 137.957 cv
88.8359 137.957 88.3369 138.456 88.3369 139.071 cv
88.3369 139.687 88.8359 140.187 89.4512 140.187 cv
90.0659 140.187 90.5654 139.687 90.5654 139.071 cv
f
90.5654 139.071 mo
90.5654 138.456 90.0659 137.957 89.4512 137.957 cv
88.8359 137.957 88.3369 138.456 88.3369 139.071 cv
88.3369 139.687 88.8359 140.187 89.4512 140.187 cv
90.0659 140.187 90.5654 139.687 90.5654 139.071 cv
@
108.503 114.183 mo
108.503 113.567 108.004 113.069 107.389 113.069 cv
106.774 113.069 106.275 113.567 106.275 114.183 cv
106.275 114.798 106.774 115.297 107.389 115.297 cv
108.004 115.297 108.503 114.798 108.503 114.183 cv
f
108.503 114.183 mo
108.503 113.567 108.004 113.069 107.389 113.069 cv
106.774 113.069 106.275 113.567 106.275 114.183 cv
106.275 114.798 106.774 115.297 107.389 115.297 cv
108.004 115.297 108.503 114.798 108.503 114.183 cv
@
41.0542 189.046 mo
41.0542 188.431 40.5547 187.932 39.9399 187.932 cv
39.3247 187.932 38.8262 188.431 38.8262 189.046 cv
38.8262 189.66 39.3247 190.16 39.9399 190.16 cv
40.5547 190.16 41.0542 189.66 41.0542 189.046 cv
f
41.0542 189.046 mo
41.0542 188.431 40.5547 187.932 39.9399 187.932 cv
39.3247 187.932 38.8262 188.431 38.8262 189.046 cv
38.8262 189.66 39.3247 190.16 39.9399 190.16 cv
40.5547 190.16 41.0542 189.66 41.0542 189.046 cv
@
65.1479 167.665 mo
65.1479 167.052 64.6484 166.552 64.0337 166.552 cv
63.4185 166.552 62.9194 167.052 62.9194 167.665 cv
62.9194 168.28 63.4185 168.781 64.0337 168.781 cv
64.6484 168.781 65.1479 168.28 65.1479 167.665 cv
f
65.1479 167.665 mo
65.1479 167.052 64.6484 166.552 64.0337 166.552 cv
63.4185 166.552 62.9194 167.052 62.9194 167.665 cv
62.9194 168.28 63.4185 168.781 64.0337 168.781 cv
64.6484 168.781 65.1479 168.28 65.1479 167.665 cv
@
46.019 184.941 mo
46.019 184.326 45.5195 183.828 44.9043 183.828 cv
44.2896 183.828 43.79 184.326 43.79 184.941 cv
43.79 185.557 44.2896 186.058 44.9043 186.058 cv
45.5195 186.058 46.019 185.557 46.019 184.941 cv
f
46.019 184.941 mo
46.019 184.326 45.5195 183.828 44.9043 183.828 cv
44.2896 183.828 43.79 184.326 43.79 184.941 cv
43.79 185.557 44.2896 186.058 44.9043 186.058 cv
45.5195 186.058 46.019 185.557 46.019 184.941 cv
@
71.6348 153.237 mo
71.6348 152.622 71.1357 152.121 70.5205 152.121 cv
69.9053 152.121 69.4063 152.622 69.4063 153.237 cv
69.4063 153.852 69.9053 154.351 70.5205 154.351 cv
71.1357 154.351 71.6348 153.852 71.6348 153.237 cv
f
71.6348 153.237 mo
71.6348 152.622 71.1357 152.121 70.5205 152.121 cv
69.9053 152.121 69.4063 152.622 69.4063 153.237 cv
69.4063 153.852 69.9053 154.351 70.5205 154.351 cv
71.1357 154.351 71.6348 153.852 71.6348 153.237 cv
@
88.7119 143.572 mo
88.7119 142.957 88.2129 142.458 87.5977 142.458 cv
86.9824 142.458 86.4834 142.957 86.4834 143.572 cv
86.4834 144.188 86.9824 144.687 87.5977 144.687 cv
88.2129 144.687 88.7119 144.188 88.7119 143.572 cv
f
88.7119 143.572 mo
88.7119 142.957 88.2129 142.458 87.5977 142.458 cv
86.9824 142.458 86.4834 142.957 86.4834 143.572 cv
86.4834 144.188 86.9824 144.687 87.5977 144.687 cv
88.2129 144.687 88.7119 144.188 88.7119 143.572 cv
@
140.209 100.482 mo
140.209 99.8667 139.71 99.3672 139.095 99.3672 cv
138.48 99.3672 137.98 99.8667 137.98 100.482 cv
137.98 101.097 138.48 101.596 139.095 101.596 cv
139.71 101.596 140.209 101.097 140.209 100.482 cv
f
140.209 100.482 mo
140.209 99.8667 139.71 99.3672 139.095 99.3672 cv
138.48 99.3672 137.98 99.8667 137.98 100.482 cv
137.98 101.097 138.48 101.596 139.095 101.596 cv
139.71 101.596 140.209 101.097 140.209 100.482 cv
@
132.465 97.1055 mo
132.465 96.4902 131.966 95.9912 131.351 95.9912 cv
130.736 95.9912 130.236 96.4902 130.236 97.1055 cv
130.236 97.7207 130.736 98.2202 131.351 98.2202 cv
131.966 98.2202 132.465 97.7207 132.465 97.1055 cv
f
132.465 97.1055 mo
132.465 96.4902 131.966 95.9912 131.351 95.9912 cv
130.736 95.9912 130.236 96.4902 130.236 97.1055 cv
130.236 97.7207 130.736 98.2202 131.351 98.2202 cv
131.966 98.2202 132.465 97.7207 132.465 97.1055 cv
@
149.344 89.1626 mo
149.344 88.5474 148.845 88.0483 148.229 88.0483 cv
147.614 88.0483 147.115 88.5474 147.115 89.1626 cv
147.115 89.7773 147.614 90.2773 148.229 90.2773 cv
148.845 90.2773 149.344 89.7773 149.344 89.1626 cv
f
149.344 89.1626 mo
149.344 88.5474 148.845 88.0483 148.229 88.0483 cv
147.614 88.0483 147.115 88.5474 147.115 89.1626 cv
147.115 89.7773 147.614 90.2773 148.229 90.2773 cv
148.845 90.2773 149.344 89.7773 149.344 89.1626 cv
@
53.1011 179.911 mo
53.1011 179.296 52.6021 178.798 51.9868 178.798 cv
51.3721 178.798 50.8726 179.296 50.8726 179.911 cv
50.8726 180.526 51.3721 181.026 51.9868 181.026 cv
52.6021 181.026 53.1011 180.526 53.1011 179.911 cv
f
53.1011 179.911 mo
53.1011 179.296 52.6021 178.798 51.9868 178.798 cv
51.3721 178.798 50.8726 179.296 50.8726 179.911 cv
50.8726 180.526 51.3721 181.026 51.9868 181.026 cv
52.6021 181.026 53.1011 180.526 53.1011 179.911 cv
@
181.645 58.7148 mo
181.645 58.0996 181.146 57.6001 180.531 57.6001 cv
179.916 57.6001 179.417 58.0996 179.417 58.7148 cv
179.417 59.3296 179.916 59.8291 180.531 59.8291 cv
181.146 59.8291 181.645 59.3296 181.645 58.7148 cv
f
181.645 58.7148 mo
181.645 58.0996 181.146 57.6001 180.531 57.6001 cv
179.916 57.6001 179.417 58.0996 179.417 58.7148 cv
179.417 59.3296 179.916 59.8291 180.531 59.8291 cv
181.146 59.8291 181.645 59.3296 181.645 58.7148 cv
@
182.042 54.8096 mo
182.042 54.1943 181.543 53.6948 180.928 53.6948 cv
180.313 53.6948 179.814 54.1943 179.814 54.8096 cv
179.814 55.4248 180.313 55.9238 180.928 55.9238 cv
181.543 55.9238 182.042 55.4248 182.042 54.8096 cv
f
182.042 54.8096 mo
182.042 54.1943 181.543 53.6948 180.928 53.6948 cv
180.313 53.6948 179.814 54.1943 179.814 54.8096 cv
179.814 55.4248 180.313 55.9238 180.928 55.9238 cv
181.543 55.9238 182.042 55.4248 182.042 54.8096 cv
@
184.955 59.2437 mo
184.955 58.6289 184.455 58.1299 183.84 58.1299 cv
183.225 58.1299 182.727 58.6289 182.727 59.2437 cv
182.727 59.8589 183.225 60.3584 183.84 60.3584 cv
184.455 60.3584 184.955 59.8589 184.955 59.2437 cv
f
184.955 59.2437 mo
184.955 58.6289 184.455 58.1299 183.84 58.1299 cv
183.225 58.1299 182.727 58.6289 182.727 59.2437 cv
182.727 59.8589 183.225 60.3584 183.84 60.3584 cv
184.455 60.3584 184.955 59.8589 184.955 59.2437 cv
@
211.034 28.6636 mo
211.034 28.0483 210.535 27.5493 209.92 27.5493 cv
209.305 27.5493 208.806 28.0483 208.806 28.6636 cv
208.806 29.2783 209.305 29.7778 209.92 29.7778 cv
210.535 29.7778 211.034 29.2783 211.034 28.6636 cv
f
211.034 28.6636 mo
211.034 28.0483 210.535 27.5493 209.92 27.5493 cv
209.305 27.5493 208.806 28.0483 208.806 28.6636 cv
208.806 29.2783 209.305 29.7778 209.92 29.7778 cv
210.535 29.7778 211.034 29.2783 211.034 28.6636 cv
@
204.547 33.0322 mo
204.547 32.4175 204.048 31.918 203.433 31.918 cv
202.818 31.918 202.319 32.4175 202.319 33.0322 cv
202.319 33.6475 202.818 34.1465 203.433 34.1465 cv
204.048 34.1465 204.547 33.6475 204.547 33.0322 cv
f
204.547 33.0322 mo
204.547 32.4175 204.048 31.918 203.433 31.918 cv
202.818 31.918 202.319 32.4175 202.319 33.0322 cv
202.319 33.6475 202.818 34.1465 203.433 34.1465 cv
204.048 34.1465 204.547 33.6475 204.547 33.0322 cv
@
175.555 60.0386 mo
175.555 59.4238 175.056 58.9243 174.441 58.9243 cv
173.826 58.9243 173.327 59.4238 173.327 60.0386 cv
173.327 60.6538 173.826 61.1523 174.441 61.1523 cv
175.056 61.1523 175.555 60.6538 175.555 60.0386 cv
f
175.555 60.0386 mo
175.555 59.4238 175.056 58.9243 174.441 58.9243 cv
173.826 58.9243 173.327 59.4238 173.327 60.0386 cv
173.327 60.6538 173.826 61.1523 174.441 61.1523 cv
175.056 61.1523 175.555 60.6538 175.555 60.0386 cv
@
170.392 69.041 mo
170.392 68.4258 169.894 67.9268 169.278 67.9268 cv
168.663 67.9268 168.164 68.4258 168.164 69.041 cv
168.164 69.6558 168.663 70.1548 169.278 70.1548 cv
169.894 70.1548 170.392 69.6558 170.392 69.041 cv
f
170.392 69.041 mo
170.392 68.4258 169.894 67.9268 169.278 67.9268 cv
168.663 67.9268 168.164 68.4258 168.164 69.041 cv
168.164 69.6558 168.663 70.1548 169.278 70.1548 cv
169.894 70.1548 170.392 69.6558 170.392 69.041 cv
@
151.726 81.8813 mo
151.726 81.2666 151.228 80.7676 150.613 80.7676 cv
149.998 80.7676 149.498 81.2666 149.498 81.8813 cv
149.498 82.4966 149.998 82.9956 150.613 82.9956 cv
151.228 82.9956 151.726 82.4966 151.726 81.8813 cv
f
151.726 81.8813 mo
151.726 81.2666 151.228 80.7676 150.613 80.7676 cv
149.998 80.7676 149.498 81.2666 149.498 81.8813 cv
149.498 82.4966 149.998 82.9956 150.613 82.9956 cv
151.228 82.9956 151.726 82.4966 151.726 81.8813 cv
@
151.329 85.125 mo
151.329 84.5103 150.83 84.0107 150.215 84.0107 cv
149.6 84.0107 149.101 84.5103 149.101 85.125 cv
149.101 85.7402 149.6 86.2393 150.215 86.2393 cv
150.83 86.2393 151.329 85.7402 151.329 85.125 cv
f
151.329 85.125 mo
151.329 84.5103 150.83 84.0107 150.215 84.0107 cv
149.6 84.0107 149.101 84.5103 149.101 85.125 cv
149.101 85.7402 149.6 86.2393 150.215 86.2393 cv
150.83 86.2393 151.329 85.7402 151.329 85.125 cv
@
135.708 97.5688 mo
135.708 96.9541 135.209 96.4546 134.594 96.4546 cv
133.979 96.4546 133.479 96.9541 133.479 97.5688 cv
133.479 98.1841 133.979 98.6836 134.594 98.6836 cv
135.209 98.6836 135.708 98.1841 135.708 97.5688 cv
f
135.708 97.5688 mo
135.708 96.9541 135.209 96.4546 134.594 96.4546 cv
133.979 96.4546 133.479 96.9541 133.479 97.5688 cv
133.479 98.1841 133.979 98.6836 134.594 98.6836 cv
135.209 98.6836 135.708 98.1841 135.708 97.5688 cv
@
197.398 36.0767 mo
197.398 35.4619 196.9 34.9629 196.285 34.9629 cv
195.669 34.9629 195.17 35.4619 195.17 36.0767 cv
195.17 36.6919 195.669 37.1909 196.285 37.1909 cv
196.9 37.1909 197.398 36.6919 197.398 36.0767 cv
f
197.398 36.0767 mo
197.398 35.4619 196.9 34.9629 196.285 34.9629 cv
195.669 34.9629 195.17 35.4619 195.17 36.0767 cv
195.17 36.6919 195.669 37.1909 196.285 37.1909 cv
196.9 37.1909 197.398 36.6919 197.398 36.0767 cv
@
180.983 56.7285 mo
180.983 56.1138 180.484 55.6147 179.869 55.6147 cv
179.254 55.6147 178.755 56.1138 178.755 56.7285 cv
178.755 57.3438 179.254 57.8428 179.869 57.8428 cv
180.484 57.8428 180.983 57.3438 180.983 56.7285 cv
f
180.983 56.7285 mo
180.983 56.1138 180.484 55.6147 179.869 55.6147 cv
179.254 55.6147 178.755 56.1138 178.755 56.7285 cv
178.755 57.3438 179.254 57.8428 179.869 57.8428 cv
180.484 57.8428 180.983 57.3438 180.983 56.7285 cv
@
190.714 47.9912 mo
190.714 47.3765 190.214 46.877 189.599 46.877 cv
188.984 46.877 188.485 47.3765 188.485 47.9912 cv
188.485 48.6064 188.984 49.106 189.599 49.106 cv
190.214 49.106 190.714 48.6064 190.714 47.9912 cv
f
190.714 47.9912 mo
190.714 47.3765 190.214 46.877 189.599 46.877 cv
188.984 46.877 188.485 47.3765 188.485 47.9912 cv
188.485 48.6064 188.984 49.106 189.599 49.106 cv
190.214 49.106 190.714 48.6064 190.714 47.9912 cv
@
145.373 93.002 mo
145.373 92.3867 144.873 91.8882 144.258 91.8882 cv
143.643 91.8882 143.144 92.3867 143.144 93.002 cv
143.144 93.6172 143.643 94.1162 144.258 94.1162 cv
144.873 94.1162 145.373 93.6172 145.373 93.002 cv
f
145.373 93.002 mo
145.373 92.3867 144.873 91.8882 144.258 91.8882 cv
143.643 91.8882 143.144 92.3867 143.144 93.002 cv
143.144 93.6172 143.643 94.1162 144.258 94.1162 cv
144.873 94.1162 145.373 93.6172 145.373 93.002 cv
@
164.568 71.7549 mo
164.568 71.1396 164.068 70.6401 163.454 70.6401 cv
162.838 70.6401 162.339 71.1396 162.339 71.7549 cv
162.339 72.3696 162.838 72.8687 163.454 72.8687 cv
164.068 72.8687 164.568 72.3696 164.568 71.7549 cv
f
164.568 71.7549 mo
164.568 71.1396 164.068 70.6401 163.454 70.6401 cv
162.838 70.6401 162.339 71.1396 162.339 71.7549 cv
162.339 72.3696 162.838 72.8687 163.454 72.8687 cv
164.068 72.8687 164.568 72.3696 164.568 71.7549 cv
@
141.136 95.3184 mo
141.136 94.7036 140.637 94.2041 140.021 94.2041 cv
139.406 94.2041 138.908 94.7036 138.908 95.3184 cv
138.908 95.9336 139.406 96.4326 140.021 96.4326 cv
140.637 96.4326 141.136 95.9336 141.136 95.3184 cv
f
141.136 95.3184 mo
141.136 94.7036 140.637 94.2041 140.021 94.2041 cv
139.406 94.2041 138.908 94.7036 138.908 95.3184 cv
138.908 95.9336 139.406 96.4326 140.021 96.4326 cv
140.637 96.4326 141.136 95.9336 141.136 95.3184 cv
@
163.376 72.8794 mo
163.376 72.2642 162.877 71.7651 162.262 71.7651 cv
161.647 71.7651 161.147 72.2642 161.147 72.8794 cv
161.147 73.4946 161.647 73.9941 162.262 73.9941 cv
162.877 73.9941 163.376 73.4946 163.376 72.8794 cv
f
163.376 72.8794 mo
163.376 72.2642 162.877 71.7651 162.262 71.7651 cv
161.647 71.7651 161.147 72.2642 161.147 72.8794 cv
161.147 73.4946 161.647 73.9941 162.262 73.9941 cv
162.877 73.9941 163.376 73.4946 163.376 72.8794 cv
@
173.57 59.6416 mo
173.57 59.0264 173.071 58.5273 172.456 58.5273 cv
171.84 58.5273 171.341 59.0264 171.341 59.6416 cv
171.341 60.2563 171.84 60.7554 172.456 60.7554 cv
173.071 60.7554 173.57 60.2563 173.57 59.6416 cv
f
173.57 59.6416 mo
173.57 59.0264 173.071 58.5273 172.456 58.5273 cv
171.84 58.5273 171.341 59.0264 171.341 59.6416 cv
171.341 60.2563 171.84 60.7554 172.456 60.7554 cv
173.071 60.7554 173.57 60.2563 173.57 59.6416 cv
@
146.298 92.208 mo
146.298 91.5928 145.8 91.0933 145.185 91.0933 cv
144.57 91.0933 144.07 91.5928 144.07 92.208 cv
144.07 92.8228 144.57 93.3218 145.185 93.3218 cv
145.8 93.3218 146.298 92.8228 146.298 92.208 cv
f
146.298 92.208 mo
146.298 91.5928 145.8 91.0933 145.185 91.0933 cv
144.57 91.0933 144.07 91.5928 144.07 92.208 cv
144.07 92.8228 144.57 93.3218 145.185 93.3218 cv
145.8 93.3218 146.298 92.8228 146.298 92.208 cv
@
167.215 71.5557 mo
167.215 70.9404 166.716 70.4414 166.101 70.4414 cv
165.486 70.4414 164.987 70.9404 164.987 71.5557 cv
164.987 72.1709 165.486 72.6699 166.101 72.6699 cv
166.716 72.6699 167.215 72.1709 167.215 71.5557 cv
f
167.215 71.5557 mo
167.215 70.9404 166.716 70.4414 166.101 70.4414 cv
165.486 70.4414 164.987 70.9404 164.987 71.5557 cv
164.987 72.1709 165.486 72.6699 166.101 72.6699 cv
166.716 72.6699 167.215 72.1709 167.215 71.5557 cv
@
178.468 56.4644 mo
178.468 55.8491 177.968 55.3496 177.353 55.3496 cv
176.739 55.3496 176.24 55.8491 176.24 56.4644 cv
176.24 57.0791 176.739 57.5786 177.353 57.5786 cv
177.968 57.5786 178.468 57.0791 178.468 56.4644 cv
f
178.468 56.4644 mo
178.468 55.8491 177.968 55.3496 177.353 55.3496 cv
176.739 55.3496 176.24 55.8491 176.24 56.4644 cv
176.24 57.0791 176.739 57.5786 177.353 57.5786 cv
177.968 57.5786 178.468 57.0791 178.468 56.4644 cv
@
157.949 78.3071 mo
157.949 77.6919 157.449 77.1929 156.834 77.1929 cv
156.22 77.1929 155.72 77.6919 155.72 78.3071 cv
155.72 78.9219 156.22 79.4214 156.834 79.4214 cv
157.449 79.4214 157.949 78.9219 157.949 78.3071 cv
f
157.949 78.3071 mo
157.949 77.6919 157.449 77.1929 156.834 77.1929 cv
156.22 77.1929 155.72 77.6919 155.72 78.3071 cv
155.72 78.9219 156.22 79.4214 156.834 79.4214 cv
157.449 79.4214 157.949 78.9219 157.949 78.3071 cv
@
161.06 78.3071 mo
161.06 77.6919 160.561 77.1929 159.945 77.1929 cv
159.33 77.1929 158.831 77.6919 158.831 78.3071 cv
158.831 78.9219 159.33 79.4214 159.945 79.4214 cv
160.561 79.4214 161.06 78.9219 161.06 78.3071 cv
f
161.06 78.3071 mo
161.06 77.6919 160.561 77.1929 159.945 77.1929 cv
159.33 77.1929 158.831 77.6919 158.831 78.3071 cv
158.831 78.9219 159.33 79.4214 159.945 79.4214 cv
160.561 79.4214 161.06 78.9219 161.06 78.3071 cv
@
126.044 104.652 mo
126.044 104.037 125.545 103.537 124.93 103.537 cv
124.315 103.537 123.816 104.037 123.816 104.652 cv
123.816 105.266 124.315 105.766 124.93 105.766 cv
125.545 105.766 126.044 105.266 126.044 104.652 cv
f
126.044 104.652 mo
126.044 104.037 125.545 103.537 124.93 103.537 cv
124.315 103.537 123.816 104.037 123.816 104.652 cv
123.816 105.266 124.315 105.766 124.93 105.766 cv
125.545 105.766 126.044 105.266 126.044 104.652 cv
@
169.333 69.5698 mo
169.333 68.9546 168.834 68.4556 168.219 68.4556 cv
167.604 68.4556 167.104 68.9546 167.104 69.5698 cv
167.104 70.1851 167.604 70.6846 168.219 70.6846 cv
168.834 70.6846 169.333 70.1851 169.333 69.5698 cv
f
169.333 69.5698 mo
169.333 68.9546 168.834 68.4556 168.219 68.4556 cv
167.604 68.4556 167.104 68.9546 167.104 69.5698 cv
167.104 70.1851 167.604 70.6846 168.219 70.6846 cv
168.834 70.6846 169.333 70.1851 169.333 69.5698 cv
@
145.769 84.5952 mo
145.769 83.9805 145.27 83.4814 144.655 83.4814 cv
144.04 83.4814 143.541 83.9805 143.541 84.5952 cv
143.541 85.2104 144.04 85.7095 144.655 85.7095 cv
145.27 85.7095 145.769 85.2104 145.769 84.5952 cv
f
145.769 84.5952 mo
145.769 83.9805 145.27 83.4814 144.655 83.4814 cv
144.04 83.4814 143.541 83.9805 143.541 84.5952 cv
143.541 85.2104 144.04 85.7095 144.655 85.7095 cv
145.27 85.7095 145.769 85.2104 145.769 84.5952 cv
@
184.955 57.1265 mo
184.955 56.5112 184.455 56.0117 183.84 56.0117 cv
183.225 56.0117 182.727 56.5112 182.727 57.1265 cv
182.727 57.7412 183.225 58.2402 183.84 58.2402 cv
184.455 58.2402 184.955 57.7412 184.955 57.1265 cv
f
184.955 57.1265 mo
184.955 56.5112 184.455 56.0117 183.84 56.0117 cv
183.225 56.0117 182.727 56.5112 182.727 57.1265 cv
182.727 57.7412 183.225 58.2402 183.84 58.2402 cv
184.455 58.2402 184.955 57.7412 184.955 57.1265 cv
@
197.398 44.5498 mo
197.398 43.9346 196.9 43.4351 196.285 43.4351 cv
195.669 43.4351 195.17 43.9346 195.17 44.5498 cv
195.17 45.1646 195.669 45.6641 196.285 45.6641 cv
196.9 45.6641 197.398 45.1646 197.398 44.5498 cv
f
197.398 44.5498 mo
197.398 43.9346 196.9 43.4351 196.285 43.4351 cv
195.669 43.4351 195.17 43.9346 195.17 44.5498 cv
195.17 45.1646 195.669 45.6641 196.285 45.6641 cv
196.9 45.6641 197.398 45.1646 197.398 44.5498 cv
@
169.069 70.894 mo
169.069 70.2788 168.57 69.7798 167.955 69.7798 cv
167.339 69.7798 166.84 70.2788 166.84 70.894 cv
166.84 71.5093 167.339 72.0078 167.955 72.0078 cv
168.57 72.0078 169.069 71.5093 169.069 70.894 cv
f
169.069 70.894 mo
169.069 70.2788 168.57 69.7798 167.955 69.7798 cv
167.339 69.7798 166.84 70.2788 166.84 70.894 cv
166.84 71.5093 167.339 72.0078 167.955 72.0078 cv
168.57 72.0078 169.069 71.5093 169.069 70.894 cv
@
187.338 48.5869 mo
187.338 47.9722 186.838 47.4731 186.223 47.4731 cv
185.608 47.4731 185.109 47.9722 185.109 48.5869 cv
185.109 49.2021 185.608 49.7017 186.223 49.7017 cv
186.838 49.7017 187.338 49.2021 187.338 48.5869 cv
f
187.338 48.5869 mo
187.338 47.9722 186.838 47.4731 186.223 47.4731 cv
185.608 47.4731 185.109 47.9722 185.109 48.5869 cv
185.109 49.2021 185.608 49.7017 186.223 49.7017 cv
186.838 49.7017 187.338 49.2021 187.338 48.5869 cv
@
171.716 61.627 mo
171.716 61.0122 171.217 60.5127 170.603 60.5127 cv
169.987 60.5127 169.488 61.0122 169.488 61.627 cv
169.488 62.2422 169.987 62.7412 170.603 62.7412 cv
171.217 62.7412 171.716 62.2422 171.716 61.627 cv
f
171.716 61.627 mo
171.716 61.0122 171.217 60.5127 170.603 60.5127 cv
169.987 60.5127 169.488 61.0122 169.488 61.627 cv
169.488 62.2422 169.987 62.7412 170.603 62.7412 cv
171.217 62.7412 171.716 62.2422 171.716 61.627 cv
@
154.705 77.1826 mo
154.705 76.5674 154.206 76.0679 153.59 76.0679 cv
152.976 76.0679 152.477 76.5674 152.477 77.1826 cv
152.477 77.7979 152.976 78.2959 153.59 78.2959 cv
154.206 78.2959 154.705 77.7979 154.705 77.1826 cv
f
154.705 77.1826 mo
154.705 76.5674 154.206 76.0679 153.59 76.0679 cv
152.976 76.0679 152.477 76.5674 152.477 77.1826 cv
152.477 77.7979 152.976 78.2959 153.59 78.2959 cv
154.206 78.2959 154.705 77.7979 154.705 77.1826 cv
@
175.555 67.0547 mo
175.555 66.4395 175.056 65.9399 174.441 65.9399 cv
173.826 65.9399 173.327 66.4395 173.327 67.0547 cv
173.327 67.6694 173.826 68.1694 174.441 68.1694 cv
175.056 68.1694 175.555 67.6694 175.555 67.0547 cv
f
175.555 67.0547 mo
175.555 66.4395 175.056 65.9399 174.441 65.9399 cv
173.826 65.9399 173.327 66.4395 173.327 67.0547 cv
173.327 67.6694 173.826 68.1694 174.441 68.1694 cv
175.056 68.1694 175.555 67.6694 175.555 67.0547 cv
@
126.375 96.0464 mo
126.375 95.4312 125.876 94.9321 125.261 94.9321 cv
124.646 94.9321 124.147 95.4312 124.147 96.0464 cv
124.147 96.6616 124.646 97.1611 125.261 97.1611 cv
125.876 97.1611 126.375 96.6616 126.375 96.0464 cv
f
126.375 96.0464 mo
126.375 95.4312 125.876 94.9321 125.261 94.9321 cv
124.646 94.9321 124.147 95.4312 124.147 96.0464 cv
124.147 96.6616 124.646 97.1611 125.261 97.1611 cv
125.876 97.1611 126.375 96.6616 126.375 96.0464 cv
@
156.625 80.5571 mo
156.625 79.9424 156.125 79.4438 155.51 79.4438 cv
154.896 79.4438 154.396 79.9424 154.396 80.5571 cv
154.396 81.1724 154.896 81.6719 155.51 81.6719 cv
156.125 81.6719 156.625 81.1724 156.625 80.5571 cv
f
156.625 80.5571 mo
156.625 79.9424 156.125 79.4438 155.51 79.4438 cv
154.896 79.4438 154.396 79.9424 154.396 80.5571 cv
154.396 81.1724 154.896 81.6719 155.51 81.6719 cv
156.125 81.6719 156.625 81.1724 156.625 80.5571 cv
@
164.303 69.835 mo
164.303 69.2197 163.804 68.7207 163.188 68.7207 cv
162.573 68.7207 162.075 69.2197 162.075 69.835 cv
162.075 70.4502 162.573 70.9492 163.188 70.9492 cv
163.804 70.9492 164.303 70.4502 164.303 69.835 cv
f
164.303 69.835 mo
164.303 69.2197 163.804 68.7207 163.188 68.7207 cv
162.573 68.7207 162.075 69.2197 162.075 69.835 cv
162.075 70.4502 162.573 70.9492 163.188 70.9492 cv
163.804 70.9492 164.303 70.4502 164.303 69.835 cv
@
203.091 38.7246 mo
203.091 38.1099 202.592 37.6108 201.978 37.6108 cv
201.362 37.6108 200.863 38.1099 200.863 38.7246 cv
200.863 39.3398 201.362 39.8389 201.978 39.8389 cv
202.592 39.8389 203.091 39.3398 203.091 38.7246 cv
f
203.091 38.7246 mo
203.091 38.1099 202.592 37.6108 201.978 37.6108 cv
201.362 37.6108 200.863 38.1099 200.863 38.7246 cv
200.863 39.3398 201.362 39.8389 201.978 39.8389 cv
202.592 39.8389 203.091 39.3398 203.091 38.7246 cv
@
182.175 56.7285 mo
182.175 56.1138 181.675 55.6147 181.061 55.6147 cv
180.446 55.6147 179.946 56.1138 179.946 56.7285 cv
179.946 57.3438 180.446 57.8428 181.061 57.8428 cv
181.675 57.8428 182.175 57.3438 182.175 56.7285 cv
f
182.175 56.7285 mo
182.175 56.1138 181.675 55.6147 181.061 55.6147 cv
180.446 55.6147 179.946 56.1138 179.946 56.7285 cv
179.946 57.3438 180.446 57.8428 181.061 57.8428 cv
181.675 57.8428 182.175 57.3438 182.175 56.7285 cv
@
172.113 60.0386 mo
172.113 59.4238 171.615 58.9243 171 58.9243 cv
170.384 58.9243 169.885 59.4238 169.885 60.0386 cv
169.885 60.6538 170.384 61.1523 171 61.1523 cv
171.615 61.1523 172.113 60.6538 172.113 60.0386 cv
f
172.113 60.0386 mo
172.113 59.4238 171.615 58.9243 171 58.9243 cv
170.384 58.9243 169.885 59.4238 169.885 60.0386 cv
169.885 60.6538 170.384 61.1523 171 61.1523 cv
171.615 61.1523 172.113 60.6538 172.113 60.0386 cv
@
198.855 34.9517 mo
198.855 34.3369 198.355 33.8374 197.741 33.8374 cv
197.126 33.8374 196.626 34.3369 196.626 34.9517 cv
196.626 35.5669 197.126 36.0664 197.741 36.0664 cv
198.355 36.0664 198.855 35.5669 198.855 34.9517 cv
f
198.855 34.9517 mo
198.855 34.3369 198.355 33.8374 197.741 33.8374 cv
197.126 33.8374 196.626 34.3369 196.626 34.9517 cv
196.626 35.5669 197.126 36.0664 197.741 36.0664 cv
198.355 36.0664 198.855 35.5669 198.855 34.9517 cv
@
158.478 75.6602 mo
158.478 75.0449 157.979 74.5454 157.364 74.5454 cv
156.749 74.5454 156.25 75.0449 156.25 75.6602 cv
156.25 76.2749 156.749 76.7739 157.364 76.7739 cv
157.979 76.7739 158.478 76.2749 158.478 75.6602 cv
f
158.478 75.6602 mo
158.478 75.0449 157.979 74.5454 157.364 74.5454 cv
156.749 74.5454 156.25 75.0449 156.25 75.6602 cv
156.25 76.2749 156.749 76.7739 157.364 76.7739 cv
157.979 76.7739 158.478 76.2749 158.478 75.6602 cv
@
59.0586 166.211 mo
59.0586 165.596 58.5591 165.096 57.9438 165.096 cv
57.3291 165.096 56.8296 165.596 56.8296 166.211 cv
56.8296 166.826 57.3291 167.324 57.9438 167.324 cv
58.5591 167.324 59.0586 166.826 59.0586 166.211 cv
f
59.0586 166.211 mo
59.0586 165.596 58.5591 165.096 57.9438 165.096 cv
57.3291 165.096 56.8296 165.596 56.8296 166.211 cv
56.8296 166.826 57.3291 167.324 57.9438 167.324 cv
58.5591 167.324 59.0586 166.826 59.0586 166.211 cv
@
63.5596 158.002 mo
63.5596 157.387 63.0605 156.888 62.4453 156.888 cv
61.8301 156.888 61.3311 157.387 61.3311 158.002 cv
61.3311 158.617 61.8301 159.116 62.4453 159.116 cv
63.0605 159.116 63.5596 158.617 63.5596 158.002 cv
f
63.5596 158.002 mo
63.5596 157.387 63.0605 156.888 62.4453 156.888 cv
61.8301 156.888 61.3311 157.387 61.3311 158.002 cv
61.3311 158.617 61.8301 159.116 62.4453 159.116 cv
63.0605 159.116 63.5596 158.617 63.5596 158.002 cv
@
60.1177 155.686 mo
60.1177 155.07 59.6182 154.572 59.0029 154.572 cv
58.3882 154.572 57.8887 155.07 57.8887 155.686 cv
57.8887 156.301 58.3882 156.8 59.0029 156.8 cv
59.6182 156.8 60.1177 156.301 60.1177 155.686 cv
f
60.1177 155.686 mo
60.1177 155.07 59.6182 154.572 59.0029 154.572 cv
58.3882 154.572 57.8887 155.07 57.8887 155.686 cv
57.8887 156.301 58.3882 156.8 59.0029 156.8 cv
59.6182 156.8 60.1177 156.301 60.1177 155.686 cv
@
82.4902 152.972 mo
82.4902 152.356 81.9907 151.858 81.376 151.858 cv
80.7607 151.858 80.2617 152.356 80.2617 152.972 cv
80.2617 153.587 80.7607 154.086 81.376 154.086 cv
81.9907 154.086 82.4902 153.587 82.4902 152.972 cv
f
82.4902 152.972 mo
82.4902 152.356 81.9907 151.858 81.376 151.858 cv
80.7607 151.858 80.2617 152.356 80.2617 152.972 cv
80.2617 153.587 80.7607 154.086 81.376 154.086 cv
81.9907 154.086 82.4902 153.587 82.4902 152.972 cv
@
63.0298 155.619 mo
63.0298 155.005 62.5308 154.505 61.9155 154.505 cv
61.3003 154.505 60.8013 155.005 60.8013 155.619 cv
60.8013 156.234 61.3003 156.733 61.9155 156.733 cv
62.5308 156.733 63.0298 156.234 63.0298 155.619 cv
f
63.0298 155.619 mo
63.0298 155.005 62.5308 154.505 61.9155 154.505 cv
61.3003 154.505 60.8013 155.005 60.8013 155.619 cv
60.8013 156.234 61.3003 156.733 61.9155 156.733 cv
62.5308 156.733 63.0298 156.234 63.0298 155.619 cv
@
45.5557 170.313 mo
45.5557 169.699 45.0562 169.199 44.4414 169.199 cv
43.8262 169.199 43.3267 169.699 43.3267 170.313 cv
43.3267 170.929 43.8262 171.428 44.4414 171.428 cv
45.0562 171.428 45.5557 170.929 45.5557 170.313 cv
f
45.5557 170.313 mo
45.5557 169.699 45.0562 169.199 44.4414 169.199 cv
43.8262 169.199 43.3267 169.699 43.3267 170.313 cv
43.3267 170.929 43.8262 171.428 44.4414 171.428 cv
45.0562 171.428 45.5557 170.929 45.5557 170.313 cv
@
59.0586 166.211 mo
59.0586 165.596 58.5591 165.096 57.9438 165.096 cv
57.3291 165.096 56.8296 165.596 56.8296 166.211 cv
56.8296 166.826 57.3291 167.324 57.9438 167.324 cv
58.5591 167.324 59.0586 166.826 59.0586 166.211 cv
f
59.0586 166.211 mo
59.0586 165.596 58.5591 165.096 57.9438 165.096 cv
57.3291 165.096 56.8296 165.596 56.8296 166.211 cv
56.8296 166.826 57.3291 167.324 57.9438 167.324 cv
58.5591 167.324 59.0586 166.826 59.0586 166.211 cv
@
49.6592 181.036 mo
49.6592 180.421 49.1597 179.923 48.5449 179.923 cv
47.9297 179.923 47.4307 180.421 47.4307 181.036 cv
47.4307 181.651 47.9297 182.152 48.5449 182.152 cv
49.1597 182.152 49.6592 181.651 49.6592 181.036 cv
f
49.6592 181.036 mo
49.6592 180.421 49.1597 179.923 48.5449 179.923 cv
47.9297 179.923 47.4307 180.421 47.4307 181.036 cv
47.4307 181.651 47.9297 182.152 48.5449 182.152 cv
49.1597 182.152 49.6592 181.651 49.6592 181.036 cv
@
56.146 170.313 mo
56.146 169.699 55.6465 169.199 55.0317 169.199 cv
54.4165 169.199 53.917 169.699 53.917 170.313 cv
53.917 170.929 54.4165 171.428 55.0317 171.428 cv
55.6465 171.428 56.146 170.929 56.146 170.313 cv
f
56.146 170.313 mo
56.146 169.699 55.6465 169.199 55.0317 169.199 cv
54.4165 169.199 53.917 169.699 53.917 170.313 cv
53.917 170.929 54.4165 171.428 55.0317 171.428 cv
55.6465 171.428 56.146 170.929 56.146 170.313 cv
@
45.1582 179.184 mo
45.1582 178.568 44.6592 178.069 44.0439 178.069 cv
43.4287 178.069 42.9297 178.568 42.9297 179.184 cv
42.9297 179.799 43.4287 180.298 44.0439 180.298 cv
44.6592 180.298 45.1582 179.799 45.1582 179.184 cv
f
45.1582 179.184 mo
45.1582 178.568 44.6592 178.069 44.0439 178.069 cv
43.4287 178.069 42.9297 178.568 42.9297 179.184 cv
42.9297 179.799 43.4287 180.298 44.0439 180.298 cv
44.6592 180.298 45.1582 179.799 45.1582 179.184 cv
@
36.6855 181.566 mo
36.6855 180.951 36.186 180.452 35.5713 180.452 cv
34.9561 180.452 34.4575 180.951 34.4575 181.566 cv
34.4575 182.182 34.9561 182.681 35.5713 182.681 cv
36.186 182.681 36.6855 182.182 36.6855 181.566 cv
f
36.6855 181.566 mo
36.6855 180.951 36.186 180.452 35.5713 180.452 cv
34.9561 180.452 34.4575 180.951 34.4575 181.566 cv
34.4575 182.182 34.9561 182.681 35.5713 182.681 cv
36.186 182.681 36.6855 182.182 36.6855 181.566 cv
@
48.0044 168.196 mo
48.0044 167.581 47.5049 167.081 46.8901 167.081 cv
46.2749 167.081 45.7759 167.581 45.7759 168.196 cv
45.7759 168.811 46.2749 169.31 46.8901 169.31 cv
47.5049 169.31 48.0044 168.811 48.0044 168.196 cv
f
48.0044 168.196 mo
48.0044 167.581 47.5049 167.081 46.8901 167.081 cv
46.2749 167.081 45.7759 167.581 45.7759 168.196 cv
45.7759 168.811 46.2749 169.31 46.8901 169.31 cv
47.5049 169.31 48.0044 168.811 48.0044 168.196 cv
@
66.0747 159.261 mo
66.0747 158.646 65.5757 158.145 64.9604 158.145 cv
64.3457 158.145 63.8462 158.646 63.8462 159.261 cv
63.8462 159.876 64.3457 160.374 64.9604 160.374 cv
65.5757 160.374 66.0747 159.876 66.0747 159.261 cv
f
66.0747 159.261 mo
66.0747 158.646 65.5757 158.145 64.9604 158.145 cv
64.3457 158.145 63.8462 158.646 63.8462 159.261 cv
63.8462 159.876 64.3457 160.374 64.9604 160.374 cv
65.5757 160.374 66.0747 159.876 66.0747 159.261 cv
@
99.0381 129.937 mo
99.0381 129.321 98.5391 128.822 97.9238 128.822 cv
97.3086 128.822 96.8096 129.321 96.8096 129.937 cv
96.8096 130.552 97.3086 131.052 97.9238 131.052 cv
98.5391 131.052 99.0381 130.552 99.0381 129.937 cv
f
99.0381 129.937 mo
99.0381 129.321 98.5391 128.822 97.9238 128.822 cv
97.3086 128.822 96.8096 129.321 96.8096 129.937 cv
96.8096 130.552 97.3086 131.052 97.9238 131.052 cv
98.5391 131.052 99.0381 130.552 99.0381 129.937 cv
@
66.0747 160.518 mo
66.0747 159.902 65.5757 159.403 64.9604 159.403 cv
64.3457 159.403 63.8462 159.902 63.8462 160.518 cv
63.8462 161.133 64.3457 161.632 64.9604 161.632 cv
65.5757 161.632 66.0747 161.133 66.0747 160.518 cv
f
66.0747 160.518 mo
66.0747 159.902 65.5757 159.403 64.9604 159.403 cv
64.3457 159.403 63.8462 159.902 63.8462 160.518 cv
63.8462 161.133 64.3457 161.632 64.9604 161.632 cv
65.5757 161.632 66.0747 161.133 66.0747 160.518 cv
@
52.8364 167.137 mo
52.8364 166.521 52.3374 166.022 51.7222 166.022 cv
51.1069 166.022 50.6079 166.521 50.6079 167.137 cv
50.6079 167.751 51.1069 168.251 51.7222 168.251 cv
52.3374 168.251 52.8364 167.751 52.8364 167.137 cv
f
52.8364 167.137 mo
52.8364 166.521 52.3374 166.022 51.7222 166.022 cv
51.1069 166.022 50.6079 166.521 50.6079 167.137 cv
50.6079 167.751 51.1069 168.251 51.7222 168.251 cv
52.3374 168.251 52.8364 167.751 52.8364 167.137 cv
@
86.5938 142.381 mo
86.5938 141.766 86.0947 141.267 85.4795 141.267 cv
84.8643 141.267 84.3657 141.766 84.3657 142.381 cv
84.3657 142.996 84.8643 143.495 85.4795 143.495 cv
86.0947 143.495 86.5938 142.996 86.5938 142.381 cv
f
86.5938 142.381 mo
86.5938 141.766 86.0947 141.267 85.4795 141.267 cv
84.8643 141.267 84.3657 141.766 84.3657 142.381 cv
84.3657 142.996 84.8643 143.495 85.4795 143.495 cv
86.0947 143.495 86.5938 142.996 86.5938 142.381 cv
@
90.0361 140.594 mo
90.0361 139.979 89.5366 139.479 88.9219 139.479 cv
88.3066 139.479 87.8076 139.979 87.8076 140.594 cv
87.8076 141.208 88.3066 141.708 88.9219 141.708 cv
89.5366 141.708 90.0361 141.208 90.0361 140.594 cv
f
90.0361 140.594 mo
90.0361 139.979 89.5366 139.479 88.9219 139.479 cv
88.3066 139.479 87.8076 139.979 87.8076 140.594 cv
87.8076 141.208 88.3066 141.708 88.9219 141.708 cv
89.5366 141.708 90.0361 141.208 90.0361 140.594 cv
@
52.8364 176.535 mo
52.8364 175.922 52.3374 175.422 51.7222 175.422 cv
51.1069 175.422 50.6079 175.922 50.6079 176.535 cv
50.6079 177.15 51.1069 177.65 51.7222 177.65 cv
52.3374 177.65 52.8364 177.15 52.8364 176.535 cv
f
52.8364 176.535 mo
52.8364 175.922 52.3374 175.422 51.7222 175.422 cv
51.1069 175.422 50.6079 175.922 50.6079 176.535 cv
50.6079 177.15 51.1069 177.65 51.7222 177.65 cv
52.3374 177.65 52.8364 177.15 52.8364 176.535 cv
@
108.172 120.272 mo
108.172 119.659 107.673 119.158 107.058 119.158 cv
106.443 119.158 105.944 119.659 105.944 120.272 cv
105.944 120.888 106.443 121.388 107.058 121.388 cv
107.673 121.388 108.172 120.888 108.172 120.272 cv
f
108.172 120.272 mo
108.172 119.659 107.673 119.158 107.058 119.158 cv
106.443 119.158 105.944 119.659 105.944 120.272 cv
105.944 120.888 106.443 121.388 107.058 121.388 cv
107.673 121.388 108.172 120.888 108.172 120.272 cv
@
92.9487 143.837 mo
92.9487 143.222 92.4492 142.724 91.8345 142.724 cv
91.2192 142.724 90.7197 143.222 90.7197 143.837 cv
90.7197 144.452 91.2192 144.951 91.8345 144.951 cv
92.4492 144.951 92.9487 144.452 92.9487 143.837 cv
f
92.9487 143.837 mo
92.9487 143.222 92.4492 142.724 91.8345 142.724 cv
91.2192 142.724 90.7197 143.222 90.7197 143.837 cv
90.7197 144.452 91.2192 144.951 91.8345 144.951 cv
92.4492 144.951 92.9487 144.452 92.9487 143.837 cv
@
149.939 79.2344 mo
149.939 78.6191 149.44 78.1196 148.825 78.1196 cv
148.21 78.1196 147.711 78.6191 147.711 79.2344 cv
147.711 79.8486 148.21 80.3486 148.825 80.3486 cv
149.44 80.3486 149.939 79.8486 149.939 79.2344 cv
f
149.939 79.2344 mo
149.939 78.6191 149.44 78.1196 148.825 78.1196 cv
148.21 78.1196 147.711 78.6191 147.711 79.2344 cv
147.711 79.8486 148.21 80.3486 148.825 80.3486 cv
149.44 80.3486 149.939 79.8486 149.939 79.2344 cv
@
117.307 111.998 mo
117.307 111.385 116.808 110.884 116.192 110.884 cv
115.578 110.884 115.079 111.385 115.079 111.998 cv
115.079 112.613 115.578 113.114 116.192 113.114 cv
116.808 113.114 117.307 112.613 117.307 111.998 cv
f
117.307 111.998 mo
117.307 111.385 116.808 110.884 116.192 110.884 cv
115.578 110.884 115.079 111.385 115.079 111.998 cv
115.079 112.613 115.578 113.114 116.192 113.114 cv
116.808 113.114 117.307 112.613 117.307 111.998 cv
@
106.849 120.936 mo
106.849 120.32 106.349 119.821 105.734 119.821 cv
105.119 119.821 104.62 120.32 104.62 120.936 cv
104.62 121.55 105.119 122.049 105.734 122.049 cv
106.349 122.049 106.849 121.55 106.849 120.936 cv
f
106.849 120.936 mo
106.849 120.32 106.349 119.821 105.734 119.821 cv
105.119 119.821 104.62 120.32 104.62 120.936 cv
104.62 121.55 105.119 122.049 105.734 122.049 cv
106.349 122.049 106.849 121.55 106.849 120.936 cv
@
127.963 97.5029 mo
127.963 96.8877 127.464 96.3882 126.85 96.3882 cv
126.234 96.3882 125.735 96.8877 125.735 97.5029 cv
125.735 98.1182 126.234 98.6167 126.85 98.6167 cv
127.464 98.6167 127.963 98.1182 127.963 97.5029 cv
f
127.963 97.5029 mo
127.963 96.8877 127.464 96.3882 126.85 96.3882 cv
126.234 96.3882 125.735 96.8877 125.735 97.5029 cv
125.735 98.1182 126.234 98.6167 126.85 98.6167 cv
127.464 98.6167 127.963 98.1182 127.963 97.5029 cv
@
163.906 66.1279 mo
163.906 65.5127 163.407 65.0142 162.792 65.0142 cv
162.176 65.0142 161.677 65.5127 161.677 66.1279 cv
161.677 66.7432 162.176 67.2422 162.792 67.2422 cv
163.407 67.2422 163.906 66.7432 163.906 66.1279 cv
f
163.906 66.1279 mo
163.906 65.5127 163.407 65.0142 162.792 65.0142 cv
162.176 65.0142 161.677 65.5127 161.677 66.1279 cv
161.677 66.7432 162.176 67.2422 162.792 67.2422 cv
163.407 67.2422 163.906 66.7432 163.906 66.1279 cv
@
111.879 119.347 mo
111.879 118.731 111.38 118.231 110.765 118.231 cv
110.149 118.231 109.651 118.731 109.651 119.347 cv
109.651 119.961 110.149 120.461 110.765 120.461 cv
111.38 120.461 111.879 119.961 111.879 119.347 cv
f
111.879 119.347 mo
111.879 118.731 111.38 118.231 110.765 118.231 cv
110.149 118.231 109.651 118.731 109.651 119.347 cv
109.651 119.961 110.149 120.461 110.765 120.461 cv
111.38 120.461 111.879 119.961 111.879 119.347 cv
@
63.5596 154.958 mo
63.5596 154.343 63.0605 153.844 62.4453 153.844 cv
61.8301 153.844 61.3311 154.343 61.3311 154.958 cv
61.3311 155.573 61.8301 156.071 62.4453 156.071 cv
63.0605 156.071 63.5596 155.573 63.5596 154.958 cv
f
63.5596 154.958 mo
63.5596 154.343 63.0605 153.844 62.4453 153.844 cv
61.8301 153.844 61.3311 154.343 61.3311 154.958 cv
61.3311 155.573 61.8301 156.071 62.4453 156.071 cv
63.0605 156.071 63.5596 155.573 63.5596 154.958 cv
@
45.8198 184.545 mo
45.8198 183.93 45.3208 183.431 44.7061 183.431 cv
44.0908 183.431 43.5918 183.93 43.5918 184.545 cv
43.5918 185.16 44.0908 185.66 44.7061 185.66 cv
45.3208 185.66 45.8198 185.16 45.8198 184.545 cv
f
45.8198 184.545 mo
45.8198 183.93 45.3208 183.431 44.7061 183.431 cv
44.0908 183.431 43.5918 183.93 43.5918 184.545 cv
43.5918 185.16 44.0908 185.66 44.7061 185.66 cv
45.3208 185.66 45.8198 185.16 45.8198 184.545 cv
@
73.7529 154.428 mo
73.7529 153.813 73.2539 153.313 72.6387 153.313 cv
72.0239 153.313 71.5244 153.813 71.5244 154.428 cv
71.5244 155.043 72.0239 155.542 72.6387 155.542 cv
73.2539 155.542 73.7529 155.043 73.7529 154.428 cv
f
73.7529 154.428 mo
73.7529 153.813 73.2539 153.313 72.6387 153.313 cv
72.0239 153.313 71.5244 153.813 71.5244 154.428 cv
71.5244 155.043 72.0239 155.542 72.6387 155.542 cv
73.2539 155.542 73.7529 155.043 73.7529 154.428 cv
@
83.8145 138.145 mo
83.8145 137.529 83.3149 137.03 82.6997 137.03 cv
82.085 137.03 81.5854 137.529 81.5854 138.145 cv
81.5854 138.76 82.085 139.258 82.6997 139.258 cv
83.3149 139.258 83.8145 138.76 83.8145 138.145 cv
f
83.8145 138.145 mo
83.8145 137.529 83.3149 137.03 82.6997 137.03 cv
82.085 137.03 81.5854 137.529 81.5854 138.145 cv
81.5854 138.76 82.085 139.258 82.6997 139.258 cv
83.3149 139.258 83.8145 138.76 83.8145 138.145 cv
@
74.9443 149.397 mo
74.9443 148.782 74.4453 148.283 73.8301 148.283 cv
73.2148 148.283 72.7158 148.782 72.7158 149.397 cv
72.7158 150.013 73.2148 150.511 73.8301 150.511 cv
74.4453 150.511 74.9443 150.013 74.9443 149.397 cv
f
74.9443 149.397 mo
74.9443 148.782 74.4453 148.283 73.8301 148.283 cv
73.2148 148.283 72.7158 148.782 72.7158 149.397 cv
72.7158 150.013 73.2148 150.511 73.8301 150.511 cv
74.4453 150.511 74.9443 150.013 74.9443 149.397 cv
@
61.3086 171.372 mo
61.3086 170.757 60.8096 170.259 60.1943 170.259 cv
59.5796 170.259 59.0806 170.757 59.0806 171.372 cv
59.0806 171.987 59.5796 172.487 60.1943 172.487 cv
60.8096 172.487 61.3086 171.987 61.3086 171.372 cv
f
61.3086 171.372 mo
61.3086 170.757 60.8096 170.259 60.1943 170.259 cv
59.5796 170.259 59.0806 170.757 59.0806 171.372 cv
59.0806 171.987 59.5796 172.487 60.1943 172.487 cv
60.8096 172.487 61.3086 171.987 61.3086 171.372 cv
@
70.6421 157.341 mo
70.6421 156.726 70.1426 156.227 69.5278 156.227 cv
68.9126 156.227 68.4136 156.726 68.4136 157.341 cv
68.4136 157.956 68.9126 158.454 69.5278 158.454 cv
70.1426 158.454 70.6421 157.956 70.6421 157.341 cv
f
70.6421 157.341 mo
70.6421 156.726 70.1426 156.227 69.5278 156.227 cv
68.9126 156.227 68.4136 156.726 68.4136 157.341 cv
68.4136 157.956 68.9126 158.454 69.5278 158.454 cv
70.1426 158.454 70.6421 157.956 70.6421 157.341 cv
@
79.0479 136.291 mo
79.0479 135.676 78.5493 135.178 77.9341 135.178 cv
77.3188 135.178 76.8198 135.676 76.8198 136.291 cv
76.8198 136.906 77.3188 137.405 77.9341 137.405 cv
78.5493 137.405 79.0479 136.906 79.0479 136.291 cv
f
79.0479 136.291 mo
79.0479 135.676 78.5493 135.178 77.9341 135.178 cv
77.3188 135.178 76.8198 135.676 76.8198 136.291 cv
76.8198 136.906 77.3188 137.405 77.9341 137.405 cv
78.5493 137.405 79.0479 136.906 79.0479 136.291 cv
@
45.8198 177.991 mo
45.8198 177.376 45.3208 176.878 44.7061 176.878 cv
44.0908 176.878 43.5918 177.376 43.5918 177.991 cv
43.5918 178.606 44.0908 179.106 44.7061 179.106 cv
45.3208 179.106 45.8198 178.606 45.8198 177.991 cv
f
45.8198 177.991 mo
45.8198 177.376 45.3208 176.878 44.7061 176.878 cv
44.0908 176.878 43.5918 177.376 43.5918 177.991 cv
43.5918 178.606 44.0908 179.106 44.7061 179.106 cv
45.3208 179.106 45.8198 178.606 45.8198 177.991 cv
@
46.3496 175.939 mo
46.3496 175.326 45.8501 174.825 45.2354 174.825 cv
44.6201 174.825 44.1211 175.326 44.1211 175.939 cv
44.1211 176.555 44.6201 177.055 45.2354 177.055 cv
45.8501 177.055 46.3496 176.555 46.3496 175.939 cv
f
46.3496 175.939 mo
46.3496 175.326 45.8501 174.825 45.2354 174.825 cv
44.6201 174.825 44.1211 175.326 44.1211 175.939 cv
44.1211 176.555 44.6201 177.055 45.2354 177.055 cv
45.8501 177.055 46.3496 176.555 46.3496 175.939 cv
@
47.6738 172.432 mo
47.6738 171.817 47.1743 171.317 46.5591 171.317 cv
45.9443 171.317 45.4448 171.817 45.4448 172.432 cv
45.4448 173.047 45.9443 173.546 46.5591 173.546 cv
47.1743 173.546 47.6738 173.047 47.6738 172.432 cv
f
47.6738 172.432 mo
47.6738 171.817 47.1743 171.317 46.5591 171.317 cv
45.9443 171.317 45.4448 171.817 45.4448 172.432 cv
45.4448 173.047 45.9443 173.546 46.5591 173.546 cv
47.1743 173.546 47.6738 173.047 47.6738 172.432 cv
@
50.189 170.712 mo
50.189 170.097 49.6895 169.596 49.0747 169.596 cv
48.4595 169.596 47.9604 170.097 47.9604 170.712 cv
47.9604 171.326 48.4595 171.825 49.0747 171.825 cv
49.6895 171.825 50.189 171.326 50.189 170.712 cv
f
50.189 170.712 mo
50.189 170.097 49.6895 169.596 49.0747 169.596 cv
48.4595 169.596 47.9604 170.097 47.9604 170.712 cv
47.9604 171.326 48.4595 171.825 49.0747 171.825 cv
49.6895 171.825 50.189 171.326 50.189 170.712 cv
@
73.4214 152.442 mo
73.4214 151.827 72.9224 151.328 72.3076 151.328 cv
71.6924 151.328 71.1938 151.827 71.1938 152.442 cv
71.1938 153.058 71.6924 153.557 72.3076 153.557 cv
72.9224 153.557 73.4214 153.058 73.4214 152.442 cv
f
73.4214 152.442 mo
73.4214 151.827 72.9224 151.328 72.3076 151.328 cv
71.6924 151.328 71.1938 151.827 71.1938 152.442 cv
71.1938 153.058 71.6924 153.557 72.3076 153.557 cv
72.9224 153.557 73.4214 153.058 73.4214 152.442 cv
@
88.9771 142.778 mo
88.9771 142.163 88.478 141.664 87.8628 141.664 cv
87.2476 141.664 86.7485 142.163 86.7485 142.778 cv
86.7485 143.394 87.2476 143.892 87.8628 143.892 cv
88.478 143.892 88.9771 143.394 88.9771 142.778 cv
f
88.9771 142.778 mo
88.9771 142.163 88.478 141.664 87.8628 141.664 cv
87.2476 141.664 86.7485 142.163 86.7485 142.778 cv
86.7485 143.394 87.2476 143.892 87.8628 143.892 cv
88.478 143.892 88.9771 143.394 88.9771 142.778 cv
@
99.9644 129.274 mo
99.9644 128.659 99.4653 128.161 98.8501 128.161 cv
98.2354 128.161 97.7363 128.659 97.7363 129.274 cv
97.7363 129.89 98.2354 130.39 98.8501 130.39 cv
99.4653 130.39 99.9644 129.89 99.9644 129.274 cv
f
99.9644 129.274 mo
99.9644 128.659 99.4653 128.161 98.8501 128.161 cv
98.2354 128.161 97.7363 128.659 97.7363 129.274 cv
97.7363 129.89 98.2354 130.39 98.8501 130.39 cv
99.4653 130.39 99.9644 129.89 99.9644 129.274 cv
@
87.918 139.203 mo
87.918 138.588 87.4189 138.09 86.8037 138.09 cv
86.1885 138.09 85.6895 138.588 85.6895 139.203 cv
85.6895 139.818 86.1885 140.318 86.8037 140.318 cv
87.4189 140.318 87.918 139.818 87.918 139.203 cv
f
87.918 139.203 mo
87.918 138.588 87.4189 138.09 86.8037 138.09 cv
86.1885 138.09 85.6895 138.588 85.6895 139.203 cv
85.6895 139.818 86.1885 140.318 86.8037 140.318 cv
87.4189 140.318 87.918 139.818 87.918 139.203 cv
@
82.8872 145.955 mo
82.8872 145.34 82.3882 144.842 81.7729 144.842 cv
81.1582 144.842 80.6587 145.34 80.6587 145.955 cv
80.6587 146.57 81.1582 147.069 81.7729 147.069 cv
82.3882 147.069 82.8872 146.57 82.8872 145.955 cv
f
82.8872 145.955 mo
82.8872 145.34 82.3882 144.842 81.7729 144.842 cv
81.1582 144.842 80.6587 145.34 80.6587 145.955 cv
80.6587 146.57 81.1582 147.069 81.7729 147.069 cv
82.3882 147.069 82.8872 146.57 82.8872 145.955 cv
@
101.951 124.509 mo
101.951 123.895 101.451 123.395 100.836 123.395 cv
100.221 123.395 99.7222 123.895 99.7222 124.509 cv
99.7222 125.123 100.221 125.624 100.836 125.624 cv
101.451 125.624 101.951 125.123 101.951 124.509 cv
f
101.951 124.509 mo
101.951 123.895 101.451 123.395 100.836 123.395 cv
100.221 123.395 99.7222 123.895 99.7222 124.509 cv
99.7222 125.123 100.221 125.624 100.836 125.624 cv
101.451 125.624 101.951 125.123 101.951 124.509 cv
@
66.4722 165.151 mo
66.4722 164.536 65.9727 164.037 65.3579 164.037 cv
64.7427 164.037 64.2437 164.536 64.2437 165.151 cv
64.2437 165.767 64.7427 166.266 65.3579 166.266 cv
65.9727 166.266 66.4722 165.767 66.4722 165.151 cv
f
66.4722 165.151 mo
66.4722 164.536 65.9727 164.037 65.3579 164.037 cv
64.7427 164.037 64.2437 164.536 64.2437 165.151 cv
64.2437 165.767 64.7427 166.266 65.3579 166.266 cv
65.9727 166.266 66.4722 165.767 66.4722 165.151 cv
@
79.71 140.395 mo
79.71 139.779 79.2104 139.281 78.5957 139.281 cv
77.9805 139.281 77.4819 139.779 77.4819 140.395 cv
77.4819 141.01 77.9805 141.509 78.5957 141.509 cv
79.2104 141.509 79.71 141.01 79.71 140.395 cv
f
79.71 140.395 mo
79.71 139.779 79.2104 139.281 78.5957 139.281 cv
77.9805 139.281 77.4819 139.779 77.4819 140.395 cv
77.4819 141.01 77.9805 141.509 78.5957 141.509 cv
79.2104 141.509 79.71 141.01 79.71 140.395 cv
@
190.366 197.982 mo
190.366 201.953 li
137.021 197.982 mo
137.021 201.953 li
83.6763 197.982 mo
83.6763 201.953 li
30.3315 197.982 mo
30.3315 201.953 li
30.3315 197.982 mo
190.366 197.982 li
@
23.1274 2.99268 mo
19.1558 2.99268 li
23.1274 38.5757 mo
19.1558 38.5757 li
23.1274 74.1597 mo
19.1558 74.1597 li
23.1274 109.737 mo
19.1558 109.737 li
23.1274 145.32 mo
19.1558 145.32 li
23.1274 180.903 mo
19.1558 180.903 li
23.1274 180.903 mo
23.1274 2.99268 li
@
23.1274 197.982 mo
242.37 197.982 li
242.37 2.56787 li
23.1274 2.56787 li
23.1274 197.982 li
@
0.5 lw
[2 3 ] 0 dsh
25.4854 197.982 mo
238.604 2.56787 li
0.137255 0.121569 0.12549 rgb
@
0 lc
0 lj
4 ml
[] 0 dsh
31.2466 191.566 mo
33.2769 189.735 li
35.3066 187.904 li
37.3364 186.073 li
39.3662 184.236 li
41.396 182.404 li
43.4258 180.567 li
45.4561 178.731 li
47.4854 176.894 li
49.5156 175.058 li
51.5459 173.215 li
53.5752 171.372 li
55.6055 169.53 li
57.6353 167.688 li
59.6704 165.847 li
61.7002 164.004 li
63.7305 162.156 li
65.7603 160.308 li
67.79 158.46 li
69.8198 156.612 li
71.8501 154.765 li
73.8799 152.911 li
75.9097 151.058 li
77.9395 149.21 li
79.9692 147.357 li
81.999 145.503 li
84.0288 143.645 li
86.0586 141.791 li
88.0889 139.932 li
90.1187 138.078 li
92.1484 136.219 li
94.1782 134.361 li
96.208 132.502 li
98.2383 130.638 li
100.268 128.778 li
102.298 126.914 li
104.328 125.055 li
106.358 123.19 li
108.387 121.326 li
110.417 119.462 li
112.447 117.598 li
114.477 115.729 li
116.507 113.863 li
118.537 111.993 li
120.567 110.129 li
122.597 108.259 li
124.626 106.389 li
126.656 104.52 li
128.687 102.644 li
130.716 100.774 li
132.752 98.9033 li
134.782 97.0288 li
136.811 95.1533 li
138.841 93.2832 li
140.871 91.4072 li
142.901 89.5322 li
144.931 87.6514 li
146.96 85.7764 li
148.991 83.9004 li
151.02 82.0195 li
153.05 80.144 li
155.08 78.2627 li
157.11 76.3818 li
159.14 74.5015 li
161.169 72.6206 li
163.199 70.7393 li
165.23 68.8589 li
167.259 66.978 li
169.289 65.0913 li
171.319 63.21 li
173.349 61.3237 li
175.379 59.4424 li
177.409 57.5562 li
179.438 55.6699 li
181.469 53.7832 li
183.499 51.897 li
185.528 50.0103 li
187.558 48.1182 li
189.588 46.2319 li
191.618 44.3398 li
193.647 42.4531 li
195.678 40.5615 li
197.708 38.6748 li
199.737 36.7827 li
201.767 34.8911 li
203.797 32.9995 li
205.832 31.1074 li
207.863 29.2153 li
209.893 27.3179 li
211.922 25.4258 li
213.952 23.5283 li
215.982 21.6362 li
218.012 19.7383 li
220.042 17.8472 li
222.071 15.9487 li
224.102 14.0518 li
226.131 12.1543 li
228.161 10.2568 li
230.191 8.35938 li
232.221 6.46191 li
234.251 4.55859 li
1 0 0 rgb
@
31.2466 193.834 mo
33.2769 191.942 li
35.3066 190.05 li
37.3364 188.158 li
39.3662 186.266 li
41.396 184.379 li
43.4258 182.493 li
45.4561 180.606 li
47.4854 178.72 li
49.5156 176.839 li
51.5459 174.952 li
53.5752 173.071 li
55.6055 171.19 li
57.6353 169.31 li
59.6704 167.429 li
61.7002 165.554 li
63.7305 163.679 li
65.7603 161.803 li
67.79 159.928 li
69.8198 158.052 li
71.8501 156.177 li
73.8799 154.307 li
75.9097 152.437 li
77.9395 150.567 li
79.9692 148.697 li
81.999 146.827 li
84.0288 144.956 li
86.0586 143.093 li
88.0889 141.223 li
90.1187 139.358 li
92.1484 137.494 li
94.1782 135.63 li
96.208 133.771 li
98.2383 131.907 li
100.268 130.047 li
102.298 128.183 li
104.328 126.324 li
106.358 124.466 li
108.387 122.606 li
110.417 120.747 li
112.447 118.894 li
114.477 117.035 li
116.507 115.182 li
118.537 113.322 li
120.567 111.469 li
122.597 109.617 li
124.626 107.763 li
126.656 105.915 li
128.687 104.062 li
130.716 102.208 li
132.752 100.36 li
134.782 98.5127 li
136.811 96.6592 li
138.841 94.811 li
140.871 92.9629 li
142.901 91.1152 li
144.931 89.2734 li
146.96 87.4253 li
148.991 85.583 li
151.02 83.7344 li
153.05 81.8926 li
155.08 80.0498 li
157.11 78.2026 li
159.14 76.3599 li
161.169 74.5234 li
163.199 72.6812 li
165.23 70.8389 li
167.259 68.9966 li
169.289 67.1597 li
171.319 65.3228 li
173.349 63.4805 li
175.379 61.6436 li
177.409 59.8066 li
179.438 57.9697 li
181.469 56.1333 li
183.499 54.2964 li
185.528 52.4595 li
187.558 50.6279 li
189.588 48.7915 li
191.618 46.96 li
193.647 45.123 li
195.678 43.292 li
197.708 41.4604 li
199.737 39.6294 li
201.767 37.7979 li
203.797 35.9668 li
205.832 34.1353 li
207.863 32.3042 li
209.893 30.4731 li
211.922 28.6475 li
213.952 26.8154 li
215.982 24.9902 li
218.012 23.1646 li
220.042 21.333 li
222.071 19.5068 li
224.102 17.6812 li
226.131 15.856 li
228.161 14.0303 li
230.191 12.2041 li
232.221 10.3784 li
234.251 8.55762 li
@
0 0 0 rgb
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B6CD37A2BFB477ECE13815458AE2134C562105CE5CDA826425272637C354DC32F5693B5A493A3DAD6D62E325ACDA94B41814F60B13A985425063E95A7E78B54CABB4E2E0961E8543ECFCC7C2D55A94F8DC1E8C62F612B43428E2D666E7885B48FF97EF4B97D963FBA20BA7DB077E8913BC2B70A114AA1292CD4A7538766E08EDEBD214B962FEB67CF96DED8433C7A107E4E2E85BF58031142705F2EB9E0BCA40677341CA2DC6D6A46433BF95F3914F872B96ACBAD3FCD0CF1C06730A86FDD2594B592D074E57BD0FD8D7779A9A6D1CE7C4531CF7FCB79992C89735758F2F89> |-/plus <1C60D8A8C9B7C7F3FCFFFDB16D71949556271E5F2AA88700268763C9ACD3F9E0997704EFB58B3C8E85BE2CD24BB97B678052C8703CE2AE55> |-/hyphen <1C60D8A8C9B8391507657C5BAF19A31D4BBDD7E17920BDF55F2EA39E0E> |-/period <1C60D8A8C9B89DB76243241956147685E9D04DE27F343A7EF0A25AE4387D3A3D08796B751439580940B3> |-/equal <1C60D8A8C9B7C7F3AB181AB0C0D4CCBD039E0B840C2FD0290F361F5FADEFB5C66FFFF03997F6A3C47D6E28F621A8DA> |-/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AF82883E05563056B289C39B2EA350305E00FB98125757C6B71D805070E392C2F5C67BAB2BDB26729DB33934727F6026751FF00CC19CB2FCE13DD0FF> |-/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C063970DBF718CAF90EB4032F79AFF3BD0DCAB8819135C4DEC30C4AD93CDA5718D518C03D131C0ECA750D3497F02641B81219A155BBD4DFC26D705BADFBB56DDF384391247F88C168EFD4243293DABFBBBE3A19FF63D> |-/E <1C60D8A8C9B7AFA9BC4F00998616708AD319D68861297151CC95B7F0DB510272712476AFC1F2C943C567A57033FD1283345EB0696AEA3E2C01AFF042> |-/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E8BCF65E1A153B8F64C14E4D433BE34E80499C2222430927749B4F85A3CF0F> |-/H <1C60D8A8C9B6415B1C8023DCDB0FF1D084A484AEEAD1BCB3E26ED8513BF01EB97B2B412C27A814AB0CF1433A6A27B347810AF06165FF360A71FFBED997DE> |-/I <1C60D8A8C9B87DE005AD6F3C5D74814A181348838688F7DFF9F5475394DF85A0> |-/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED19B0A38B3CB0F4F897304E6BAD55EEDCCDEBF2A9B8B5B52460C00D9A306CF6EA51A21B19E9B3BA70F64BDE9BAA61A839E8FB51C8743E8A82D68D8F927748ABF13844E9C386BBD03D70DAF9D> |-/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC915E5C8F246730235E0969B06AB4DFB6CD5E100F262B534390FC7CA7055C28ED1E42C84B636867D8A31D300B2F5F2294ED82992DF7233E5C523837B149A4D365755830345623E9A4E055720FE49A232DC2065A07388CBE9EB02B9DD8FF5931F0EA71B8534F17457D88BEF90224252D97A481A1378A56A9E08907> |-/x <1C60D8A8C9B74CDDCE74E25740A68E8EC93756D85AEDEDDC715C2E343856089CBF3B8126FA9B43C70F5E5E657C6611A04AC6BD64B94F2C3C0B74AAB216E5042ED4B3FF8375FDB59F9F31D0EAD1EF91AF3610AEC45036C8A054F273FA4FDC2EFDD7524FFC5A> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 37 /percent putdup 43 /plus putdup 45 /hyphen putdup 46 /period putdup 61 /equal putdup 65 /A putdup 67 /C putdup 69 /E putdup 70 /F putdup 72 /H putdup 73 /I putdup 80 /P putdup 83 /S putdup 120 /x putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 3{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /.notdef /x 135{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf129.317 150.607 mo(logBM = 2.749 x logC)[1.8877 4.39209 4.47217 4.33594 6.43164 1.69629 4.76758 1.69629 4.10352 1.65625 4.10352 4.104 4.104 1.6958 3.7041 1.6958 1.8877 4.39209 4.47217 0 ]xshWTDFTG+MyriadPro-Regular*1 [7 0 0 -7 0 0 ]msf199.556 151.831 mo(H+F)[4.56396 4.17188 0 ]xshWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf211.701 150.607 mo( - 1.104)[1.6958 2.45605 1.6958 4.104 1.65576 4.104 4.104 0 ]xsh202.007 161.006 mo(R)shWTDFTG+MyriadPro-Regular*1 [6 0 0 -6.12 0 0 ]msf206.311 158.56 mo(2)shWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf209.389 161.006 mo( = 0.988)[1.6958 4.76807 1.6958 4.104 1.65576 4.104 4.104 0 ]xsh194.709 171.405 mo(PPE = 25.6%)[4.25586 4.25586 3.93604 1.6958 4.76807 1.6958 4.104 4.104 1.65576 4.104 0 ]xsh197.573 181.804 mo(SEE = 0.134)[3.94385 3.93604 3.93604 1.6958 4.76807 1.6958 4.104 1.65576 4.104 4.104 0 ]xsh195.485 192.202 mo(AIC = -281.9)[4.896 1.91211 4.63965 1.6958 4.76807 1.6958 2.45605 4.104 4.104 4.10352 1.65625 0 ]xsh0.75 lw
1 lc
10 ml
239.897 195.354 mo
126.478 195.354 li
126.478 141.126 li
239.897 141.126 li
239.897 195.354 li
cp
0.137255 0.121569 0.12549 rgb
@
0.5 lw
1 lj
28.4077 19.9331 mo
40.5269 19.9331 li
0 0 1 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C7596B2C0CA5D427D1A2992AF5BF4D94EE82845832F4DD4400321814ECD5D3CE66072F7E5E7C5430EC469D5F7161571A32A96A021C1AB03ECA050447FC0A> |-/d <1C60D8A8C9B7E7C1D822193538A56B13640F1C3EE80C415BBD7C96E2BF73396DB0D9C9230D7704B1D4903E1B0E823160B234020A503047A686661C34B5004CDCF7754772CF263A11D6B8FC7868BB12CD6A915ACD880C8B0638C394417FA37BE535ADC2EFE334704B66B55FC93ABE48255DC988A5DFABA294BF5BF2E02BE2314DCE6531FAA5DCB4D56DF6C62A6139D41B024DA04272B4B444C44FEBCD2F65888A63654699808BEDAA> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 99 /c putdup 100 /d putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space 4{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 3{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /.notdef /x 135{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf44.418 22.1104 mo(95% Prediction Error)[4.104 4.104 6.33594 1.6958 4.12793 2.53613 4.00781 4.51172 1.87207 3.68799 2.64795 1.87207 4.39209 4.43994 1.6958 3.93604 2.64746 2.53662 4.39209 0 ]xsh0 lc
0 lj
4 ml
28.4077 28.479 mo
40.5269 28.479 li
1 0 0 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/f_i <1C60D8A8C9B7B07F53A1558F68652DF6013355F9F1E87F51401AE8ECD01A640086BEE1033CF3BB3831C899F6AF52CD0D02B6946DDDE924F27473B8E54A3ED8BEE9B02A2E6BFE94F31C79E2E1614FBCE3CB362A12E60E538207D3> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 33 /f_i putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space /f_i 3{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 3{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /.notdef /x 135{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf44.418 30.6567 mo(95% Con!dence Error)[4.104 4.104 6.33594 1.6958 4.55176 4.39209 4.43994 4.18408 4.51221 4.00781 4.43994 3.53613 4.00781 1.6958 3.93604 2.64746 2.53662 4.3916 0 ]xsh1 lc
1 lj
10 ml
[2 3 ] 0 dsh
28.4077 11.3862 mo
40.5269 11.3862 li
0.137255 0.121569 0.12549 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B74383E5F6C6CDF9C5C9B87417EDC75203EAC0F1F9428D2177D6066C95DE> |-/q <1C60D8A8C9B7E897EED043C74253B54ADC1CD15CC5D2369EED179E418749FCECA224FAD8A34EB9BD7877CC97BC141452C1C22D35DEC4354AEA53EC7F1B702A353EE3D0B6B3B48164FE3D7F142CEB2DFE49B221F1E445CD43E52605D76F9AD0357E0FCE05AB18BD03B9B30164C19713955B60B364B411D31A9471BA6FA77C647175A8A5ADCE0BBC58F86560C14B95155E265ED4AAA17097630979807FC1CE9546F9CDC26D3E> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 76 /L putdup 113 /q putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space /f_i 3{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p /q /r /s /t /u /v /.notdef /x 135{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf44.418 13.5635 mo(Least square regression line)[3.66406 4.00781 3.85596 3.16797 2.64795 1.6958 3.16797 4.50391 4.40771 3.85596 2.53564 4.00781 1.6958 2.53564 4.00781 4.42383 2.53613 4.00781 3.16797 3.16797 1.87207 4.39209 4.43994 1.6958 1.88818 1.87207 4.43994 0 ]xsh0.75 lw
0 lj
[] 0 dsh
138.867 34.6953 mo
25.9194 34.6953 li
25.9194 5.17139 li
138.867 5.17139 li
138.867 34.6953 li
cp
0.137255 0.121569 0.12549 rgb
@
1 lw
0 lc
23.1274 197.982 mo
242.37 197.982 li
242.37 2.56787 li
23.1274 2.56787 li
23.1274 197.982 li
cp
@
0 0 0 rgb
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF375EF8CD5D17CF8177ABFE55C13157A524A3264793E34DF67E6CC595BF4246BA776AF32A10AFD87F61B0A56EEC2C24F2F2> |-/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C64818087655066490C3ED2B909917C7BC0728B14D2333B4F2D4E6CDB7289552EC38E07C385447196A6FC80676BB9787067F8DE500C6FC7D1A575A85B3402140944D912F286F0EE619E6F139DB3EF4C05E3E0A0041D31E971FFC094FB694326327D937DFA882F7A9EEBB38D578A289643EC8BA4470A41469EE238EB0C3D041FDB99E682E3290582B0A809> |-/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FF6A82283623EEB25A9349C2751A0E315AAE13B4796C423913828FA716B5ABEF10D096130AD2A2329DF2C9C65ECC79B77A9BB791B3C887ED4EDF5DA91A1776E19A8D0D9ECECC26B8983788DC541C6EA7A67E7E> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 102 /f putdup 109 /m putdup 121 /y putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space /f_i 3{/.notdef}rp /percent 5{/.notdef}rp /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [8 0 0 -8 0 0 ]msf25.6909 208.422 mo(1.0)[4.104 1.65576 0 ]xsh78.9736 208.422 mo(1.5)[4.104 1.65576 0 ]xsh132.256 208.422 mo(2.0)[4.104 1.65576 0 ]xsh185.539 208.422 mo(2.5)[4.104 1.65576 0 ]xshWTDFTG+MyriadPro-Regular*1 [0 -8 -8 0 0 0 ]msf17.5483 183.171 mo(2)sh17.5483 147.742 mo(3)sh17.5474 112.313 mo(4)sh17.5483 76.8828 mo(5)sh17.5483 41.4536 mo(6)sh17.5483 6.02393 mo(7)shWTDFTG+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf48.812 222.434 mo(Log Femur and Humerus Circumference)[4.71973 5.48975 5.58984 2.12012 4.87012 5.00977 8.33984 5.50977 3.27002 2.12012 4.81982 5.5498 5.64014 2.12012 6.52002 5.50977 8.33984 5.00977 3.27002 5.50977 3.95996 2.12012 5.7998 2.33984 3.27002 4.47998 5.50977 8.33984 2.91992 5.00977 3.27002 5.00977 5.5498 4.47998 0 ]xshWTDFTG+MyriadPro-Regular*1 [0 -10 -10 0 0 0 ]msf8.37012 124.601 mo(Log Body Mass)[-4.71973 -5.48975 -5.58984 -2.12012 -5.41992 -5.48975 -5.64014 -4.70996 -2.12012 -8.04004 -4.81982 -3.95996 0 ]ysh%ADOBeginSubsetFont: MyriadPro-Bold Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Bold def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Bold) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdup 66 /B putdef/FontBBox {-163 -250 1256 989} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 489 500 650 661 711 721 242 248] def/OtherBlues [438 443 260 266 -209 -198 -153 -147 -127 -120] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604583 def/StdHW [112] def/StdVW [152] def/StemSnapH [112] def/StemSnapV [152 161] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/A <1C60D8A8C9B6459DFE82B30F7F103A034F039703DF87BD72CCBE8BF28C7F4CEADA1020C378E29CCE2EA27F132AC9653317E8E424F9DB7E229ABDEC3CD0002AE0457393DF8947D3873B7A68D647D530931A19873E2FEBA3B29A8A08A84DE9714A5858B3666D259828A608> |-/B <1C60D8A8C9B7DF55EBCF7C9E5513E6F8DF935AD746BF3E44EE0C6674A09A6DD84DD6D898E4CD6753598BEE46DAC5288B5F6A7F65DDE7BB564F256CF239C05FCE8A900012182C77F192053D191DA7922C0DCACF70CAEC1026EBF5F2EE1A344D33C77E8B0C071777636CA5B3A54F62A2AC4FEFC55D1492227F3056E70ED25D4E6773E192A076C888B3353A637181FB04F9003BB38C4861B88522A3EE7AA0CC3441E2B27E69AC51119DE29EA192FB37146903A38047B876382BF4F8830DDB082254> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WTDFTH+MyriadPro-Bold /MyriadPro-Bold findfont ct_VMDictPut/WTDFTH+MyriadPro-Bold*1 [65{/.notdef}rp /A /B 189{/.notdef}rp]WTDFTH+MyriadPro-Bold nfWTDFTH+MyriadPro-Bold*1 [12 0 0 -12 0 0 ]msf1.40039 10.0439 mo(A)sh247.41 10.0439 mo(B)sh0.13725 0.12157 0.12549 rgb
WTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf369.223 224.282 mo(L)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf373.307 223.026 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf374.659 218.847 mo( + C)[1.19922 -1.19922 3.37207 -3.37207 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf385.124 211.21 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf386.476 207.029 mo( + L)[1.19922 -1.19922 3.37109 -3.37109 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf396.33 200.004 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf396.982 196.523 mo( + C)[1.19922 -1.19922 3.37109 -3.37109 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf407.447 188.887 mo(F)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/asterisk <1C60D8A8C9B71C16FD6190DE274447FD2C10A0810BD45ADEB560E6784BADC8086C26443794CCCB33EC128CB1C5809BE2CC71B0815430AD015B26180F85D27C96A45EDE4196C0818DE6D2E88BE5B31AF5283B70221E0AA946627BF9440306D64F05DED7792CBB4B5E12A0DD8849E337C1AE12FBDACD7ED48825C3A1EFC1D45F7A> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 42 /asterisk putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space /f_i 3{/.notdef}rp /percent 4{/.notdef}rp /asterisk /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf383.355 226.742 mo(*L)[2.34668 -2.34668 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf389.787 223.139 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf391.138 218.959 mo( + C)[1.19922 -1.19922 3.37109 -3.37109 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf401.603 211.322 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf402.956 207.142 mo( + L)[1.19922 -1.19922 3.37109 -3.37109 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf412.809 200.116 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf413.461 196.636 mo( + C)[1.19922 -1.19922 3.37109 -3.37109 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf423.926 188.999 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf461.711 201.83 mo(L)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf465.795 200.574 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf467.148 196.394 mo( + L)[1.19922 -1.19922 3.37109 -3.37109 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf477.001 189.368 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf425.231 202.93 mo(C)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf429.925 201.063 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf431.278 196.883 mo( + C)[1.19922 -1.19922 3.37109 -3.37109 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf441.743 189.246 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf274.078 196.287 mo(C)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf278.773 194.419 mo(H+F)[2.76563 -2.76563 2.5293 -2.5293 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf289.58 198.374 mo(*C)[2.34766 -2.34766 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf296.623 194.159 mo(H+F)[2.76563 -2.76563 2.52832 -2.52832 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf440.564 205.38 mo(*C)[2.34766 -2.34766 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf447.607 201.165 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf448.959 196.985 mo( + C)[1.19922 -1.19922 3.37207 -3.37207 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf459.424 189.349 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf315.877 190.126 mo(C)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf320.574 188.26 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf332.254 191.162 mo(C)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf336.95 189.295 mo(H)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf350.091 189.702 mo(L)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf354.175 188.446 mo(F)shWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf366.494 189.634 mo(L)shWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf370.578 188.378 mo(H)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CE3F6788F74B615B747D0C4950E0757D67CC4B6F86A79106B4F6AF8262CBC77CA155FEEB> |-/parenright <1C60D8A8C9B84E0A47D7FED609B36B98A489D0C883687FC8C4BD7FF8A57C9949E56F26DF53030280BC0E024A6F3F65DFBA65966BEA7D55AEB539EB378E> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 40 /parenleft putdup 41 /parenright putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space /f_i 3{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright /asterisk /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [0 -10 -10 0 0 0 ]msf256.393 168.027 mo(Mean Percent Prediction Error \(PPE\))[-8.09961 -5.00977 -4.82031 -5.5498 -2.12012 -5.07031 -5.00977 -3.16992 -4.41992 -5.00928 -5.51025 -3.31006 -2.12012 -5.15967 -3.16992 -5.00977 -5.64014 -2.33984 -4.60986 -3.31006 -2.33984 -5.48975 -5.5498 -2.12012 -4.91992 -3.31006 -3.17041 -5.48926 -3.27051 -2.12012 -2.83984 -5.31934 -5.32031 -4.91992 0 ]ysh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWTDFTG+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD833E1AD6BC7D55692C9AE2F77E568D5881F872B2DD35BA9F526AA31403949B904F2FBFFA219269CB793CC5D4E2B92EAFFDD1A748A3F84A703B249550493724F424782ACE69D75F53E9659B9B2838FB0059CC29141042064D2E7FC418574> |-systemdict /gcheck known {setglobal} if end {end} ifendWTDFTG+MyriadPro-Regular /Encoding getdup 78 /N putpop%ADOEndSubsetFont
/WTDFTG+MyriadPro-Regular*1 [32{/.notdef}rp /space /f_i 3{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright /asterisk /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E /F /.notdef /H /I 2{/.notdef}rp /L /M /N /.notdef /P /.notdef /R /S 13{/.notdef}rp /a /.notdef /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]WTDFTG+MyriadPro-Regular nfWTDFTG+MyriadPro-Regular*1 [5.65688 -5.65688 -5.65688 -5.65688 0 0 ]msf352.628 222.491 mo(Non-Linear C)[3.72168 -3.72168 3.10645 -3.10645 3.13867 -3.13867 1.7373 -1.7373 2.66992 -2.66992 1.32324 -1.32324 3.13965 -3.13965 2.83398 -2.83398 2.72656 -2.72656 1.84961 -1.84961 1.19922 -1.19922 0 0 ]xyshWTDFTG+MyriadPro-Regular*1 [4.24266 -4.24266 -4.24266 -4.24266 0 0 ]msf384.77 193.178 mo(H+F)[2.7666 -2.7666 2.52832 -2.52832 0 0 ]xysh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/WTDFTH+MyriadPro-Bold*1 uf/WTDFTH+MyriadPro-Bold uf/MyriadPro-Bold uf/WTDFTG+MyriadPro-Regular*1 uf/WTDFTG+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Nicolas Campione) ()%%Title: (Campione and Evans Fig 4.eps)%%CreationDate: 5/29/12 3:49 PM%AI9_DataStream%Gb!R&kB?DeZS6]CJ9q:Nj<TSPF2g*B*,rat@:Q#<oBuF'S81@>XXo\BHgUd&2/E*iC3?I[eQ(F+COWZuNi1(hr9D&Vjre64aI"tU%L!7@E@Bs(;dl+n)2=ZB0JH0HJ$^2/0)@([Y,XRrP_3g:B`^9/uEAcH'kiJtT=cMY4[]l4(2VYaPnF'b!^)_U=PC^87cf_A/R.Kpc%BI8&%]NX`rl0Z6Tl!OqgHe\2eIQlCL'=[2Wr+\D2^"(f>fCLFS53hN?/^uFLkB)!W=U]K9R#aMIO]4Q[T?bK$qo+ZR^k)YSoQ-[d%=7NeSl,--?BBJC2E\u[7kn^@Q*nM1sG`*V2qY5,ehX(;b0IILqd&uHK+GlQor1E!YVE*K#2M9h-[JXu!*I$beH9U!/)!k3YkR0hs%0lnH;i/U\?5HsUlEc?AD^_[AKWNb&KOhP3[&ho(bP`H)HPW;&3$:u_a]HNr*rb"k'#@KJ-9p`KBp4ldiCH>oIQ.tXde,KMc%n9,t%1`?ak.4XU-"47DG]Y0rdS&aW4a/h."M_Q7-Y/^+(r<`3rSduApR&-"`?`$,5Ykb/?5]s.'*^M#gNY:\'^drP909%A/a:*%&VO-,h%':sCjiX8XPcl<J7HrMd<1'c$6-lb-8WMl5DiZTN0-]/q,`':NU662b;\Gd`3#V=0Q!Y!q(VVfj6g`)%PJ@nG\+<$u%&L,5&\[%W`%"XF177%$8a8\V.erttJp1Nri:DFZ?_a8ja*DM<NF_KXac$'^b9_J4Yk"%6_F"-kEgJEEnNjr+1:5CqG\CX\b%&G,qh=$(^9IEcJI%/F<Dn%/usF,Sg"8``%0c:U^8X"s3XL5d]#9I,HXe7f+4n^Y8eRe,F]sRE>KM^G0,b$ug-6+Hm7rc=B]MQ[^-b@GW*ac:;.&1k*p7%VjUV#dAo,(lBLO^b-[Rog._<#9AI5&^LGp"R'nMBgD/Uh`Csjh1u0r^pHhfBJ'YSE&&,gCNIM?MUhTi7i9fFikfk*L@S;an+o6uk%q4-=;f7ONa_"u(^D_)+9nSet7g0b,>hT#QBC(5dWqe,'sL*"g%_.MhBk.hMj>HW-ZHK*89r:etA@/FHnIp11mgVn9F(E.;nr_"pC%MnT%$dm6(`hpl=$TqSOOP")&[KC*>:7pib1"8JE-rGPJMd3?W3s"+-@IuWTC"o\eW2'!.gn,iX@"F,7(4IjDM#gGBC=RG8CA1)b7%+9Acs\je4-Y!GbXEssgE/?uJ[Pl*%",Khf8a\OSZ5F@N5`4/b6$e$L&-N)0e31g+*70LI0NJDe?s"rC;(lXdSRh_MDjqN:$p`&YH%jI]+S_(9lIaSn&UZPk%i_719UCcL(qqulO+BY+(DmC,>)-@\cYU*\4M*((SiIW?_=1c=FiR[@>qI%qV/kalL10C"U&pH@!bO_O>6%mcKXW1e*kdDPqs2gC,8AK@'nN4(ncPCbW^7_6>c6d3en>Iec.Zlkf90IKt81>1,5,BE7Lh\g8n+6hPnP$`YLj^4V3"ZGC"MZlH30%3>"4E&+m5\k'lnD2Y/$)a9_J,.l.aX7W'&aDS-n9h1+&K$.D4qK%t7*9F1UVQaJb-PrCHlZJrkt7KS$()u[5fbi)4I5@%$7D0Q#;%KE4CSD?-u4*['H0?VI,SOA#YB[$qQfj6:+6LW(jL*T:@D<oa,a,h<ZUg`b>Yh+(uSqZZp]0Up-ca:A=Zn[FpF7Jqcq]^T:p/7MJ+%Oe.2n7Zg!&WB_<u++!`WS#IN])UEuZqON*P_puEgBDuJ-3j\Gi"4o`P\HT?m1n3`INLiQ8Xna"Z<ApoV]!e-19F_IKF)/#W!K.LW%^t*43Iq-3]R5a'Uk4Baaq9:jcY+;$[FZ7C/q)7+@ImJn.bNobVVp9b&U\-_6N0(@%R.HgGp;broXlfQZUlY:bZ9RAV;>^A6A$k_5%bPNRfl,/Y9#4dnlD#7Qu$FEhU!?V5Ym_(:SKnujekt#LgL$/A)bd/Mu"&!]&$h*,ZgqO'7&p*bg]+Co<oLfQ`T$a(rr!V*%6GKuR%4TTIo"?-0nC&&9&?`cb\jF73tBmq+>ell?(1kERb",C95(;RF`XHE*hmedLE1nO.'Vi4i'%$:",YQW4&J*4F3iWnZ`jI&sm0u*7L%L611,Ma"=G>:(Ei6B$2Agp5bNTH6f+`Y(s'r5BY22(Vf_2uh]A6(:"aIqK,F,gAIubkEI$(CA(eE//i"82M/+nHU6P`P)[F`kiuO%c<gc&c;B3Is2(*`I/&DfraQG,Dp<2BKR"!@^9hml(GL%M!$t<Ncls.u=#RNHpiWg5mln*+aSUeW5<Okt&[Tb#Si*K&CCFc>MZ@6m%7(!6W,ClhI#&Og/cW2(g^rq3&5Gj([5\jnFjnX1@_];)n:$>?2JqIXo#,dP.8MH2B!J.iXJ(UBe,MA,-S[3D!U(YG]DIBdDrS2Ui%%.nComJ"HZ?cDJbYh@p2_2<66#NN'&Ls+L"bl0^19="`UTGd>7ao/SPYBI3P!t]Cp:Z0IoCG;u&]UnteT7ZD_UXab0r/q'E:c%;.%]9Toi5]5NPs3S%m@;4j]#bd6'4'dBUMC-Qn"*]N(J2A:L#+MlCKL.'Qo5Gfji7i44-k)FA%(71*TECkJ2Oaa=&SBXgkLIBYhQ7sA%V,lC2VsKnq/Xn7E$k[Q<gPQql#K&Q]7V02W\S^3*`j?p^i4].oJ/^MG]qG3\diir^gOnJb]=YR<s.WPh+7PRS1lFe_9Xq"acgK[J%M]IRi\aBDQfPD3DnN&bm8kGNO1RRXA[cmIf9"QAlKLZ4#d.;`MF?ijR"opGdNFqh8#\:H2(F%(%f/9)X^c?+:D*T']H?Y,\Tt`d2%lO0Ed9Lt86O>+'@.2"$u#[\CKs#2ZYr#`hXNgfqX;`%\7BYWB*(B:_(m(\Skj4aSi7$6R3/7t+ds4d>Nk469#.fY"Vdd?*[s,4;T%s"GC.kL7iYmBW+R@_PZl$?4jPg0/u>'^I]0@]nhmX:Pl(PV3p`;0qR)cZHhs0sW@=iW&8E\ASH>7K&Pr<rARr%%eQ6Z^QB'XQJF?%l.,9pZJ%'gWuY:F9mX*TG0>lHlL:AE"kk&V^!:B-)::G0jaUP6K9H)'T#-*9%E;cbSNDnbRIdp0Z_7mSe0Sjg?[fV`a4("(/0pOS%f]2"43eB<$hJtK:2"RCfS5*L)dkp9J\[A-?oZf!I?)#s]8XLlQ_ps3kp=[\PqS.2/##]0Gh/-1KNm?/nO64p!H*foXl$o*u^;4Q`%o>V]nGk2G_?N!60egSh`"gp[E4A#+\"p_?Es3ROsC1A:pk(DcO"$[[q&O&MaqcU(&hTt@)]Un?3(8_41&"u@Z3HUXd!<9lq2@n1N%*o;dl.gQ`WW'k'u>C-1a8()@T9S>CMmUo2^quNn]D^K4[RKa$hkP+l0)B*:5*tEu++k=AuR=tBWKLq#hm5BUYG!,ho+8lRGR#]Eq%5!l1%-/&c>LC[6J.]V?k&e2&!oU'MT>gPl_Z@#;CJqt14Ea9f:F(mbm%>N@-FS@GL23.)733>2CId[O![(3SJF/V_S`/Rfe0g0,j%J6;3,rHG<5jKXpt9!&Ri2Wh6HQktH*i$L5A&9ZD=r'TB0kIW24>`OMg!maa+>`Bi),N`Q(Xd(R^r?^Feq?;$*s'6(^J-X"_/9;lT%13n3VJO#mcZkO/DVAL-Pk[(i0Jb'CY!3@(%G<;:sLEKK,:<f&t[$/b#7Ng>#Rj]r_=V=-73;(f5mH'ai!4<+&$n>e4f0KNS$7edP%NS#_HR8c\@I47SFQ"J8uY97fmkj/67(W5?B3o?sT"O.aro=1XedU3cggshopEV5qM'@Muc3/S%\Ii2n*k(]O#=95,i.b]7*TEM%?%Z8#XFojK%olX<!h"Gc\;.ps3c\k_M%nmuP[&`-KXYJtpu.o9,.S(3*+`YCal[FJ.Cb1@T^KGEc<ID%p6@k6Q)hfVkDpO4juj/EG?%K,jj9C,853s!dEuZ.j6?Rr,uc5OQMYC42$UWRN;27Da,cMA2"?O`;Rnd@d0WZCL"E)mH%\.\'qo-rcm\_cEhpbA-aU.Z&3.7rG\:%%0nsASQk\CMKs%r!SNH2q%6K5<o=3tF##$S=j):3gXkY)$t@Ub/2!&M6R.0o^TO?ZFa?*B%p/uPCTrU5GZ)0<A4gbs<>%[M5T7u@%&7s-+':2;m:J6nm7',m@[PgUY)-=i5!5S%!9C?\pMqc'[VQI(Bdl./AYU-0Ar*X$-.4RnSL5gbMaB5)oBF8&%bpIg/)6+'/DL'R&%8>h>q@:%%$BmM<9F8`Q7@lia@YC9ET@aMtM1Z9cqKp%ni[^.&"?*IN#g.6bZpWa_C#+1/XF'XpOW;2ToLd>%tFEW;u(^t]gQ:4aW%Yf+-4"DK--qckRle@TOSeA%0nN9V;^i9N8`]fP"bF--2G^C$3p-nS/'=QFc_2'J\oG(2dKQr0U>mY<]]R?#Kq[\Ch?T-&Anh@BNN%SILlsnXrEdRg30i1RiSj/FrlOT,Gk%e0Y$XG4tB>DdJ&K2M522&^[1`1c3\;pL(Qh:F-*gbV0n6l4UVB]N_'^7^RHP6]D?5q;>To%4@.ZVdh-(FD"j\H1qhTUco_24$JdD2/V,GH0Y>k'(k0%Rn!>hpo&hf&3MXi@I@(_FV;t'\.kq#P%+\+^@;<__OEif0'3n%1!+<`2%%<+Gg$"MU&GhQQi69m!K^^#nc$85?u>K/iU\?+h>k)h(7kg*$bQSd;Ce8!B-O[e7s%tg9sgRC;#S?aLH0:mL*G43[g2jM?Xr-N.W%QRs86]eCK%[Q!0cC+4NNcTYCX\%tbNq/3slDYBhr\O>7CX^j,19b?(=Dt2RLggh(j5$'Z,=`:Y$#3@dHZ\bPj__nI_o&%uQAi:O&%4,%Au4Y$;Up@!X-Rc>HJ(FbZPn]5KW=8`$<#@G09gg\ghk%^ICO#nArhNs/:S*0_<h#;,q(+2LuW7]ct,W:KA4hSJk\cpuTqOlhk%nW.L,<rU1[\%[R.kcsR!NllTUZ=74,^HgQg-QgZsr&d&jM,3\,]>@A)Q'?gZb>oUFc+e'M@t/+eJLPLFTAQ7kpgj7Pf#BR?hAcF,%a`Y8J94eYeKCRf/NVtonUXCR_i$eL+qh\k/)R-dDGFgI3[U=S9([/O_rD^Q28W6,k)>Z14QR9s!An7(o%jIM-bu];h=Wchier8Fs%EPLs`c&V0%c/4p`e:.NHCH1kVOj,IJp4YSNS+&o`n#:"HinmK4\]q'B\n?#Gmr;=.Dk@#G&N_"Y%M7[q[,<#+I`^?/_s=#fo13Z5%XJ"1PAdc$-olJ4g$Z,nt[C>XJ3`9(.\s#qM[l?7XrkR?eQW@3b3paFI.!Z1bLEDff:?h]#)>:A3q(ut%jN$q1d6C1Uaqja;#)s6b%%mFtd\;A="%'OD3r7RVn-eV;;k>HqH?LX2nR*MWO<<LZt+l)=(a[6e!h^Q"+k>X2krk83IR,fV'rS?X(lmU4/?frg++\[E.UtVaZ%*Q5^H/GW`sK,Okk-5_1@s,M-UiifsRnMgG>K7WtJ+!*U0,cen53nO<Jm;f=ud;?$Z"T\G1a@G\;hAO(o?G81A*^gFe9$$XG-?L#o%q_hFa@D,Z\dOC/14JCM\e"+3J4>Rg@4e&OL53[O=#@HcXlt5k\(l[?9B/#(7U$3m4aE)X^q,Qc[%SH!&`Gk"u`#oh<A[3Z<WP,'3%S<J5m*f@k-$8H,g8V`)%CnePRb'!$^r?3S#Qk[B-6i>-IJq!$;*;f>%F)j8-gG-;+YcXIMT5a\81aJ6e,/)ZS#eH9nn.T6G_#pH8%an=sFVRE;pX,K$Gi@EK.,6N\p)2(I@Iu?ear\K%./kkP-Jntk9jhc8i_no=Q#F53LS9btI%e#jcf6juQSW_76A;+15pVk;!9#FI9%8L.^G`$G>p3h3=bh$?2iG*VaN0G\^WJp/u+,\l)aUbLV"_amsWhcc99\lKPHQ([0G"`SM:M9,#6SZ9HU\O"!f6&l-,WO:ujm/#a2%Y4GXHqPPc4RH\*gYD.,SgXUNAWEU=+9@8M2P;VSO9(+l%eg8Z-N[if#nJB":5#rTHrbU?iQpKj:7PNTRlqJ%P.=83\?b=8D*X5UU%J+d9GrT!J1)SOGEA/0r?mWh%ONS*Y,c+bk[;&LujEK[YX8p!>1>ja[*5Bn%gF-e_f<+m\,b$lGUT1Ll!k\V+adE8KMl&JXA`J8)6%m$AZ83Y`._Vn%g8].?XR%qDt'$Yn*A2B#S63EZ\LnPcf\DqC.dhS%0;oCG$%6b%FUpbNQ-9O5L$e'K1N<H$XQnFJ@NYZYj9Pk4%D%5ZS6:/GbS8&gpT\4cF#EO/%fqInQ94dW_(Epc%h&O+^sC^PKXZ4&+u@4\anEq#Lid[li,>0'OrX6Jc1@lG'JpW(@V412;hu..Tae%;564H+(c3DT!XD,5P[/97KPM7ZYAAIiAn\WTV!2['spYH_.Z^P3aMA^!d>uMK"I+s#YeH9;#HT4)!\@N"X\[GJY(k4A->^aNR?f(%-n`7J%m1+Y(nUXR8^U]EjJ=_2CD[X=1mk@"6nn'P?jV8AARIJh_3)U8'#*A.plR)D*)'B^0%3E<Vhl$ub4lXb.V;N9.mmg(KOKB^%:u`n;.Y1R[1s;sh'j)nsV3l<`E28.EUW3%#5a?>hai]5i-!M],PIRuXN-$r]iEc@\2COJ"JaYu@,Je+uTN^+f5pE5B.LCQY/REZU%7*;U-N8]T)2%"*G*&Qm`K,h+Vi5kY`<YBq-Bfp/P7tqj(%)e>,!-jOkE0PJ$j%g*Yq3=Fd:VI,@nD=5HpL:[EY!)SuJ6CQ-b7mFK%qp\`6ZQqOe=Y&&q+(,_%KLN>krkY$SpNKnE2F4]$maBQWPuD8N)j*-(Z3oZ!P.2N/13*d?o*&*t>ND680lU55q61l55NeN92\eos%2TrYHm&#gA!9o*jfKh2oUT6Ef.="(?@'Pji$]7HrpZYq0fm1eaG-sc\h=Ne):ZphUbdur,MRHH&^6eq9Dr&1`I3IK72@OA,/L5iI%%hr/TdZo]KNC[ONfZlqBlg8/0j8)[=+;_&,e8gQ3#I'EFR6=_dQ0g`J@84LK3"Kd$h8fC&5&K1CgN,X2"m7t?c6ACk&%YW.4D[+Y%C$Q5Pk0dUfZ*shbeXO!'V!8;TXC>g5TMW!P`l!8Ih3X&7ci(`Q2sa=6(=mE.Dd=X(,lJI7[)X[R3Nlg4Z"@fbrZQ@ePg"=Es!Q,:%m,I%+l/K2(R:-;E#c,5N:qO1QIb_VgJ!s-O=^4PW,k4<85k_pti!=rT'B>`c`ScM;"4nrGct$g],u2iUe=6kMR\=eR!F"#6GSYo0%0=CdJ'919#7KF8]G*fu?kub4=MbLo,02VjP$/Wh:IBY]gAPNS"@jQ$FYD;,ud9Qc5>qT%#EJ`X>m&;0L&7YjpB@8\:j/Y`Ho>>]V%/hQg)PVon*ZIhs!DZ"G#aJ`7f5I@`#QJUV]Fn#,gC[U/ao2I>'a4pcJfN0sT1><=D7'eUQ$U1jYk!6W*!&'%uG>$_^Y4VT2AUX=R%K>'g(G3]@]^,6LI2NAt5TD9@iZ3V!95QDB<0BNC8,'O=HY<oSu4?eJ(00M(#.G]h`GO9`rB:]<Wg]6/$2UU_oJc#4POnO3qlVtm=%J="c?b!'!<(^Cl[.EA$S&]mc:"-@#\TC![E3VEG>'h8!=5Sr6nWP9d8fu0ZA-OQ#6U%q\tZ>]^(\rVIb$kT$EjnEQkAlJBndTIX,%0NhoWnnOmg0dPY^bAj_q1P=I%&4[GBq3Rbk3EpJ?UcZ0C/"-b'hJ](JZElDaP`)5:b+7sK\.3jBi8om.D2Ph^hsCANGQM4"iVL:P%CQH0^ptbCt=&IfC<I%_T6\@XOhY#c@>4fQTZ5c!o[/Yp\r'Ko.ZBM=';lg+M:5+duVt,cC1h\V#iGf[XhsUZN!:'9djE?5),)mnq%*?q?Lc1PF#)h7jV-77:%G;fFu(3d_gCrU[[%8Bm)Z'1bc\;L/!l#*pUi;c)j2Zioj-AqHl^5:*kn9$O3NIIX[NUH2!0RVqqhX#ig%bM8?Y`:BZ_knYWnCWWooh<.,XgfnLBRQG*C&f[8:[a%.2`i^Lis4pVVgWUj"N-Pp]T6+U&hUk$DCAU6Te'I4\0`LD?]SOcN7NJ?'%5VYtL(b"j6jaQ400-?ENs"+5mhj3V9Ajd";&?b`;k]$Lf,HFT]p,>5kfONa,5B#5[ME,7/aC2DE$!m&s'i"MLS"D?i$.-l^24T]a%pTfWuN'(>`gCE0G>"54s/!juqga#')&-!-/]R#K(m+#Dpd,A-1>9&b#H1X-i:nGF92LbZ[`s<>MQiehTq\,sVb8W-0nM]"eB)`?T%j*FpsVJ`lrGhG+`B>Q<e_Hl+L_cqn)<kh%ce'VC)2JT_l_.RM,JG@H+$RcPFU$S^jR^).)H,gi>//!@rBT6u*EKck+^TTkROndX3%!-;i='"Yq\+6mZ/Y7T*p-(R!G5,.IUC$:%P9.b'oB$mdKVGlnigH)Q&pNu/rG;mAna?t2QG,8X(jY0it\*h%9Y1p?e,fGkFn_H+V%-l#Aj9h#D0?f+ihUj?<!j?C@Ibgp)cNYO_5&0E]=AfI6$9&3_tf)C[5^[_b7A=cV7JeZ$$\OoWcdaR=&1[r8m:RP?DR9i+1Y+.-O%RmIp5IV.Kfo>0;6@l<p#Zl<0tCZ\37EVSD<.'qVJ\0%Q4R.%oF(".hZ'^LG6L'#ub,.tpK0&gEkE`[GX>.\%77ug#jVAa[=icl(,%M"`H.Ae'pnpTnd(r\?fbp%8t2E@S_M_$F<?h<MI/M:Le.TkeD&28;&kEc/V(_Vn</]`@cR<aP^,i.!C<)G*/'W_j9IDn/82*9DFJ%IDmB%f`@8NlOTo9\TC#O?&+<F_;'>ZJ*&=1^uhDOA>ucbW*L-'>"TY\l.NOljXd\&"4!7NZGkoK_1d;*n&-X4SA5rF@4!Jh2W/U8%)<Wd'NI5bn=';SGpPf>CU?ng1Ej;82]BaLBFk\?Lf0Ks#ch)E>OFI]H]Z?O-n4>=<n/bmgd^_!ki;[OMl1I%O7mW,N'bi3JLIS,U%+cfpTE^<4pZ/jOI5EI!2jhN(KSl^jO?sIVGFd,WW:H9e.`@a].I>hFn7W.m?mh0tB>+CJlT(D_6$(haB^YrGuKIa&^kZ$Chf#gJs%k[h1=2;U46++X=V%5pZE*[S+U_qEe=n,=[`U=s_AZRWSWShQNt5qBGXff@o*9[L&l'>"DaY!7eF.LnaTW,far,rkB!1aZ8Xlg^e;%BN/GM,\(#+GeZ]Yk./cV4^kul.X^o[?X-$L7@$i[])La";U@(APik;P&4o">[rS&<,B]q]6CVG$1#7H8atI.Wo5ONkef%Jr!:Jmh%2F-VPgq6ZW2eQ&W@k7SX1gF%o3pjMekE"'LX*0b8\8<Dnc-_p"qT.I*!2cZgI=#+0,/--@.8hRX4s7,qq?)qnG/n<-/3\PBp6W(%%^S^V=I3(Kkn?bVJ3Gu-A6pZG$9(VuLD_#%nN?<>_]#.B7gRpE9h^CE*/?ihfg=^3VDWLX8XRS[<[Ad]QZ=`IcHAq(5PC%9A5spYJ%Uf\VgpH,,C<_:I/JR&X#.&1\XmW5lkIsk3&6t67H1]:<I8gueS'*!d6))t`Tfc)>p(IrIS>@3/0NErR>TDSPL;5TtWDnsBD'o@FO%4(pk"/]UN"\I=!S&00b_G5EaY4u`DMBP"eCB`hbieHR\[Xn1YSfVj;t($XfBQ%1Q)o7$p078MJW52Q7sq!d-PoPO5<%%OA5[G9Yf%Gfs5Oh9E@jX$8<VJlg4:a1/h\en_)9h_1*s9bkE1i@@_-n'c7PcW+GrVEA=q'/,Aj&]RBq<aTq)7a'pP=]="p<=rjXT\1))Sae14%=l4UQKubNl2/;&ajl]sU>BtLB=V`@q]=\^O'-m3\s+<'\lrYE?MhB^C$]"c'=9lc2Vi2>B+;a_IY)3n-pDF8;7rC?bh?mJ^R\XD*%%2lV'Vd(VA$'YihmX\F+54#,lT>:nqF9U=9B%c&gXF'Ig#u;`^Im&EH=;0F/Oh=nV!iQB,WOtA#2Lj+3ooHm]C?0G5:CZu1S'!RD%)WWp>Y\[/<_Tn3_pPnG<m0*.d6&8:k@OCbe<>tPo\&@2BC_M<_(D[lm9hV*35ECcc'<cq#r"X[nJ,<g@Y1kMBbPDtm,9M2t=Hu?a%B./8qFA=((g4T8Vdes03ibd@TZ'K<79AX"I)bg!V=+l!niPL)(5pl82U`CTMP,*IWHp=c5@Mk`6MBC=([><04`^M?_`;bFR:7:Pn%n5/o%NkNEc]^VFqjX(I/2AE3_o$L_.e[#mj?P;r?UXTHoBsbXD,)mQl%D/HuYZEIqq)&M68p-)@AFGB^Tu+"<m.5kaV@]tmKAQCr%jH^ZVX8M)STF`ol([I@n+dsD*GQ0Hr]<AZ\nX%9>XG&:eLuQHV"d'^=PgtV/A4/CcJ9S21V;_4BLS8gb:os+<h7@+3F`%^"*$N"f%Y!Qc^[e3A]Z1N2QqgRD;bc3ti.Xa):1GHlL2pE.Y8TWjJ\G-o-.n!j0.P>]k8ZoOAk1Xi%<55.I7oYAMg.qId3TZD68R>`+VH!eI%:^C/g'b:JVih7s,GS$4tihfChLB!)ZXiO.-/&W1-9^<$HXV]M\U,+NliXT*OL]2%UP"1Mn8;^uHELSB*(`dmZ`l3(k#=U$GFdMAY%3,GWt3@T[te''MMR-+7lOtN#F97O')AV*M\Vk\raYo<3[rU!56>UpQ+A1S_o;Edu+gN_[]1R0!/Ear5kPj>N@G.q:$I*B],lC"oU%%@arQen1#.;W9iS-TX(0&lWWn4u(#RUaH0!Z$H,J\[\(,K.9R%<fZ$DMGq(sLD\-FU>G*(>0q3o6IZ:-D]:=.?#$7+O6.Anes.Vk%)>dI(DkH1Qff&kdaq^.FD+B4=c1RpfmN7FVj$r@F<[e^2B!g?.JJ?i)7)c0`<;F4pq6oM:;4TU4<48LLB!gO>7?jZ3=mg[t\HF49%D79<b[jn4BnFb?kVuNIR)KXU.L,`gMZcSC0*pfd(BWZXI)m,DfHo@]gRlNLG3U*"*K[=W61Dlna"*b)#[R)hu96r+T_W"Vr[J&ic%!C@`)q56DrBWt[$1s22)K<</AEJ*f\eC%$8?(6C(isgNK^Dn+(#e9P8\`Ad6<N_Y.Xi++>EYS),2()"8hsTWs"CEtX?\W0R?=V_C%NE5K*GLg9B;"LOB8Zg$f4(mKi^Hk?>PfsgV1&L*\&Xm%L*@E1#Z(Q9`NM&*P+]Ti/ZlP#2cnq!;$C;RpW[h4.`UaV[\0+:`Pd$<f%^`SdpA.LNFl4Grh)&o%3#2A*Y[hrd43GQ^Dfc2'jU8Te:\<qGpNb$_..Vd(0og<hRR'mc6D3-&'cl!lC:-`FiX>^*6,nH8AfRXV.%V4tD,L@`5b?bNf51fQ52DtF[5^1`IT(k%2X8AM*bG5u3dl#*Y&/rH,"9-_&SC47U-*M!`seZ;rnbr2<&cLl9B.c))$94h19M%'^J%-BW[0d!2HkGUdRBdA^fE[N=]S@"=`A>GJXT=W;%uce:Y=NQuMLdag24VIEf42j;ciMfH!n_j>F[[KGbA[7-;j`W.m1OUDue_a:$X%[h1?J9G^/*Biimnm?lo?F=[_)pF9?RN5<?Ak$'G-LKm0C#'.*G=%i5n%9L.`XlFN!1qMSm`RP5q8dd#8M@S7[EA*30f/`P<V\B!l%l#J]>m_IADOZqab3(9DP2]^+dTJ/oZ'e/Bk1K]Qq*`@Ti]X_Q&R]T_=;+H8KZ)EW:_;6)eDpWSUS!LplKT9IkDE6NF-qF`-":Icc%W7Cu$F'.3;WI2P92V<B'#Ug!6..s#MKmuFH;5M0OfZ#-i^,2oOaUEhI;&+5W":F@I7o!'>'r?etq3YK+q6K+d/rV1AQ8.cJ$07a8%ba*pH/bS<P+JTI=,P$fdVu+&#+A(?f6<XRt#EEP9N.h=2&8?b]+CShEapEkQ7un2_E^Cms&\U+KPbpB\.H)ZY>pQN]MVGp$i\hpF%&K6&@cW;A:GZnX\1tEsB8jnX7D3'j<e5>9t*C]8C;8c*J6bJY:GkL9_3Y4tK;UL.4^N'HC;DNjR@jXgl9\Ruh*N*8C@n;t"PHZ*6%OYXMr2N&sqe+(r5?KA4]m\FjU9--N`jAEij9$(-FWMDqklBl>,:bR)b]b):M-)K,7g#BF$b`(u=;EWtp-F^hCK-ed7P^-YS$^[DU%YMMSJ0irChbqSRR#p4pHr^H@%&pHD/'ldlXL47#.^3-tB5J$pl6j8bbnGrUIJcCBF,QaD%/mk-e.^SD_4#JE]LgHO"9"@mfn;kO+%W2;+P^V+Ki>28@Fdc.odNEJA.diXM.k07?)gqHa8JS#<3VUj>V2K88<LC\"b^X>OCX.DV@MrG*@,/)+e9CCQsF0STKFL\6fRErVW%<F]Cl9$1Zr4m2'Qf"_/Y`]mY9Z/TORo977W;.&1jY]U9p[<]%Lp>m?WY$>KTZ4rf>m%?j"%3UBAB4#l_?nK,nMgONk>!2cRS&Ia[%3u1>/lTnm)8kVg\S]Nb5]=qYh3G@S%b@MI]L[ieq+#N93Kl+30lr&jGmtM\68A'n.!U-$Im<976Npb`fMT$@d;VPEYgLqo&S@G0+%f?,)im1iJB*jbM$G-abV?T0'`eiht&FrXsZi'AmSHgp-pktrGmj#^UJ*RnU/;nmd>0W]BCiTAVXIT@N^0(6H%>gJm3K5RkW_g,Ze%P>sY[2>n(h4t.!\FM>6uU\e976*JG'6.J7q<hc+&A6%2!^:m`fS10^hH_3]OEn=/0ZslV\aEkUZ#;oXq_\/4aePuc,opY;tiB`%!%LF"BoT/Z69F;#,KPRVB5_Rkh7i,)4M@G'N'!38hG")uG$QOOi?/c'7j62R.4T4JfLMN^27Um)mQ,NTkBER<%U='KOgl:o'VGZPg5%ADM'bQB1G+&)C8ilSeT9E2NYQ(/:Vkh2-D>XYOSbqYG.1)Sq&pX9WMMp>1UG,M>s7oW#Q[=bCq;#Gj_CnnM?0)Ur<:_qK"sl&%6H%K0>[%4C#WNYOq7NYg3/B*>gW=Q8=N6dLY8%ObDtE*O<)-raq]Z1MH$$<gF0jRO4K2=9&fq3`p*=p(n%t1I9]eXL'7AM[@Y2ol/:A%D<Z,?2WuN.5JQY8&)+8&2LN6h#.RQ>X[M>1&5aIT=U@!<.YGG=M/KHUPRRtpYf#mQSS$t8U,_?MZ(%a'g84995AGi%Lo4$1)F\YJ%c'\IO@CaQ0%f5O?ZDe?1S9#sYAV6^SfO:\rX!dS>4Qp(1rj@\i%`L^uL0(jaK?iItHQ?lVV7"$MLsOCP:jLE7pXRt$4K1=(=5_%@%)\e@M%XZb'FSV1,9j0*;9t<,KK=VS\k+9`,YG0,N$l]/0bG7;3HigH]L7Q:gZF0]),E!!PPd72-<N2j0\`9_r#n?/[jOC?iH9])[%_k>[7*YbuKYh%7YRU?BVA_]%<BI.Qm%+A#p]6IU2*Zg,8l*60OouREom(]V;PLWDi,!?dO]U+PnPi)A^%%8=Y?J1uQh0PD"%tVr7%ZRHr[g+=mU@5gN*&pR6#oGt]tVni2u9/5[_60f:HJ2`s\Ro=7-L$YdmMUa&R:VjIJN+u\Lk?rhBjr.$"[Z0QNU6HXEG\L=FaK5K;%RB=2CDa,6Jph%.mf6B@U)TeRCY^^GVJ#g>4)nb^?5J>t#IT<!Amrt@41%i";5Gc$hdr'MTYPN@Io2'Q1@_G/!p_`hehL:eI)Y*H*%fW.5b^1lEESk:.!*.E*F]NtIbW]tn@]t%.8!lR97NdLH.597QVNMk[+[-CRdmch(YZ,>b@-gs>!m?DP[W;\Uq$O/I27c'sD/+pC?%s5F@8VfCI;e^o>=`TAe+\EEgMS>U:CdkgFVE-oCj6uepse=ED(70-j)cP,]Oo^+LO8?BiJoO&?;c+AB^M/.:HP^-P*mn:=<<4=h3%$[I7#\Tgj#42m/jduAZ*[QT#<['K\%]hj0'098C<>SZdEd)!+q_3_n0:K'V.OMFj&=lX^o[R=A=XseXsj^m8=Vd<$'de%[tNZC^2%fngO%H@iBphaWrU_Ol/-@qQ$s0hD^u?T]n'K/fhk-rD<r[jm#^ZP.%75El@@ep+Fn/ds6L'Fa#E5^h#%p$8C<T_@*dpFYV-b$;U1%Ur=c(1t]>N%2s);.++\tS*aA^?@0U;&8=BH'O0Uk+/^@T2WrX@*Am!X:`o>04Rf<[MEM1V<sE2N7D?[+b+QG^`h8TdYgT2723*%h%V6r(5"^!#P[6`Oci4Wng8bB`5XiM]K@eBpgp$eTdXKgkZq$j\5)VYK(KRoH-QReX`cjh"0K!^%cpO\pB4Ch_ZL/'d1^%oXsT8loX%$C!\@e.?!ho&s61;t>bD'YLRM+('7HYn82T[4Uk]J2QD0k?$D"Ae+=0Ltr"C*a'79K&IeUnC<8`PeDtoJ2*^b0UE@<61\gDem+tF%(3^pX4ea"'>(o3*[:A!'m;6!b%N<5AZ[YX^6,HIrPk4kr\nFN^Y'K6@`8[.g0!+!58.KP(<??["\>Re%/,RA.]/&VHWk9&nV(e`]%ddp"Ud%<7:]S;snn%E2'B,mb&*mjGL_+RYpad(En\4JNGZLop`PH5>o;8Ah-J+bAppd=uTbf)1OO%?QCNi6+h9jejY+$)%BQ[Ut"%=R)FhoQKr0e.l@uTA69]^*62lgPQ$S''RJ[(m8JZ/)`Psnlg#$D`C?Q(\5M?i-SCV]?.&T/=G]N]r,.6d8Q3d*e*b`/kj9hdIV0"%!9C%/'g6Z^B4HlU-*AdB:V<PZTDm[WZMi@l_p4qW]?_,_Z-P@>@U#<PR:r2/d_&XO/WGaM8dV9RcGUfB[6Y7OS2SSYC+ruc*#@J6%$UpMf1i+`:'o9Qq?M#.A&>J5QCiQi2>Dqa9B0uurgX)S$.[l/"H.?E,^2j:LV5<bn9Je(HqT$o6SI#TOGF!`<e[7J;mE/t)oA/?)%ig0.@f`9oDEue&u6Y`fa9E4WFm_OBT.>[^:'Zaa&e\@9@PI$K!#dlDn'a:iQBVUN_TGhZX$$u@0(Zr^&rF*L@1:(1WFclZqPrj,%%Kh8M,&0ft(@OsqS8h,-fQnd!@[FhuU](3UIA]:HV1EOp&/@nbX91UBOMdMkLkPcmq#tNnalmEQN;E9.2/=0K/W_\Jc;V.1:IQfe>%*A\uNKC6Iun@lr1nebGm9KKG?eZnqh(lVV*%>uJ#pV_l)N0j,tdkQ)@7s3rYEKS\?7(+o2EY'HK#r1_.&.>!50ifm4K]Y::>ed>X%fKL](AK;/"jl?8P[eZ8p[c@u;[*!E*Qa,br0p.$hba%'cWK'2u.sIDN,9:@.S#_(]r6(+7,4`[5LQ9WXo-(Ckjj51763#>?(dZP'%KXLINHMh4P9r]h;Ca-NgUc]C?YX>9KOTXA/,ade7.aS")D`G8\<>8D3'o/rQnI46Z&@Wp?,i^:jJApCQU=k!3^N[^,TGZ1o2U$+,%8EX095sD`,=%ZD#4?gZH_G`L%!&+sG?obG+FO[U)!V!@8fT,Rte^kVY4EYRBf4R,KkW_*H=WYoI/U7Y^_$Xq%9CO_&,:<-!(Y6#O%(@+riaas/0#/Z6EUVI5.#V=*c)[ib-=PP?8EA<*0orZ$fXKDue`7B9`Y?O6&[&?V8>W"jB'h\hf`#Ue*ZV_.Q.RltoEXQ26&7?V+%];T6:S]SH'FQ!Z^/a+l"hCr*?!Z[-0>V.$>h>fUhUF\:-96ns;@XeDY2k&9+g/0m89k\>;S@B*\0*%A2h!o\Y$q)CJK:ntRY>Ls'%5nlj6%8p-YIqVHX)cBU<"FQE`J2&Xm60?RCI6?l7YmWZ9NG+ZE-%#^)pk)kF#cXYBX<N=o`R!_6F[N/2:SIC(UQmZ=[4,CRc5R"7%mr1Q>r<Odt%^5M"'EC[-`ZHa0I<QlC_Q$uu=VXr-MCmRB:iq#0a=X\M%TFJ&XHM^a4>=OLnXVSi*CLX(&9a[=&HtEu:pqlh9])gk%(,l4YX3!W>'m5hrSLp%43Z$GE5Zgr`H."i>"8tb28V=@3mYR]fcK.="([rc*?Go%uOo68np[BSG3u,7]kmlZL8sJ52@'a^t2QoL1%;PN&rg72Y0lG`*7'1UVN?eqBX>Y8a-H]Lr;Pb"Wo:ib\G_u"KS>U%Re<eh:sIQL#nnbN)Tleftrn)C<=1n7Geoj1F\B[Bm\h)-nn%Rn#pn)E_\9cF/sD*\S\a!,GJhFs?CMIZBM'.^9B:cNPR4lK&(oYIG[R7$DH#4CI^\rrr@r*8-K!9Zr'SC`OSN-k+&FP(H'!qp;!c%GrfR?<i05MCF)LI.*E$m;_Am*&br->/F#oW]2U+f9mU7a3n&'e%>YmlVt>Fij!1C[Vh:cl2$p&8O.L'hg'ar3\UMh!J\\r=37NgI%n+uuR2r/VobGr/\\?kd9eWS]/[),1I#eupBh]ECYH0%9Jj"#X&H-qYS?*eRqLc/5RV_FQ6+cjI6cA#u<ca-:]SuBU.CWD+8<4*S.%k9Tq2h@%bcB596OO2Sb6bCqb!O01CjeqG:So6cQV<7$>*5o5DJGr[r,M-GCX,L_?E>q&O?111L&TKld_AR8hB10jXP)6kU*TL3RS%;TI3#a^ioSNratl@d-3\ZQ#I6JsNL'6Hk7rbO<,ZH:7^k+[4N34b^9D1\`dnf=L3gngQ"AWBeT%lm6l(L>,)'1u'R[--^\?Wa[IQ%86*'nPe![YmgllG6,4_4Mi%0"/s^>^>q,-r#^A@EpBGb02O]thO:8UQilNZ3"&_`Dq#!JTX^5Wi-3hU?:lg,L$W]Y/HBZ3E1.W!$%k)sCgL36Y-5_s)CPW]CG[9R852Mi,Tb>4\1J!Y)>2P6t_XFe`.]hAm+Fp4GYHC5[4m0YnE"+Pk?3pd88=Na-JkhMUAFGtZ/^P5Lq%Jdtii?D*&@E):NXSO0aB8MtVD'm-rhn,bIhMM(I7FI[JnD@N.["Wbm@]g*$t4QV1lA7oBgQ`6\-Y+QH]A%FO>Z@lc]$FA5cAo6kr%^oLN<ot2$7;ppKo_P@OmDZ-t2^oQ'[D+thh76ZP"8u?]8Uphc(p'+B<Yf?tNF;-OUNeZ"T?=fmnBm.*D<XdP^l3C1^H[Ha&l/Z:;%XH0hu%91Uj?Cs&pV8+a=JZbKt-_?KEjeGT38n1Ik=bB4)\nKB^X=:j72U]h.P7"7IVLf)dY?#Jfo30GrRq&eS?u\=3_(V@UWLE8'%X;ei^[o56b7?h%<-XnVX886gJa\1&4Fuql&jA9"]@+63ZUYHF1Q+YE%aNgS1=K]O^RmC3Hajhj_%EY]W;5Y458igkYTWD+'H;oa#%W/g>m5RF3j^_m,F\sG",oSUO3C4S0Ti%TBm]q7_P11T>)*@k7BMgCI`2HSJlf-jAB1V8[Hj3u+)2I+9=e#e*cV!B^2RO6:%1f@MU%(4i*sY#W_4!HlEO2nRJZJN'#d:m"7%%r:#2LS`!*]p]e'Y'>cE3n$7riM_$=B@!$3.E?NWdjjNH9GV#!%q6G]+\+0u,ha+IP6HDZ%ks'I\9`F-pX&I,Oba.(]pNg]mYWAgl<4Yo/QW'%_C)pRD=$F'!8Gku5]CR\*2qh#caf)OI2=Bh1SIn`L((f2*E+N,i8#)HQ;G?D@%b+4>37*3(5<hiDpC=4N:"Y+N@kC%bt*&qqQA?W;^A"ZFhWnu5V(UP<M,>\*i;42d-@7Q2u41PB@CYDdnV?8nXKp$4AKm.(1P,,Zi%X[#WMlDR`OQ/pZsFF3@aB/NN5`pc'6*ipi]NXP<Sj<4P`II,b_9>IO:PO@F,$@\gK&i_Kf_bTI#*Z:<N*>O^aQkITd7^\TfS.%er%9^62/P"?Z/Oc`=/IWe6>-8tHg,;Sr86tB!B^eOalgp"blXrWWZ*DrCq2Jaa1A.JNc=;km<HYKdAN&8/aGSusD*,t<:Pj4TkaIj_6%Gt%"4om'"O1)`%=#V[D(JC-$qWO$69*abM6BImfUXe![<7\rKg]tA>0`\Q1ef@k!u;No`m4-Msd_Q=bi#Bfg<3V7?<N@aJ\"EjtI%&q@,&8mTdo*toN;>1J4NF`k]fAlUWd;-f`1^7HD+!a%-FkZ8,W#!iiC,).N!@&fgYd!1!'(f5>&RWm<IOYc=^(gfsC&U3Jc\5U]q%40BW"4U_+Lol+PVW#D[k1Q\;VJU0;W?OeRF/mT!cH6VQAlerP`Tf<[p?p1%N\YGLoLD0&X(t;iheAKD.3(59EQ`Ps@n\nJ9FUGDf%MbgMm]3%hhUQ?.gD-Iq#M0q.A'5<!kT2oTkf:sh@mEC!e3IuNSbmZME_oq[n=p:51*lIrH>@W_@Onm8e3Ulk_c`"?Kr=!(J%_T'*%kMH&s%H07:66)!lV76IQYT]XhE4T-Enq9KC'H968*\4!<a&La]a\Z`XN\ujTI5W#g*U]'Q.@o1RdBdC@]N:u&9,'^eC6#XR&G;e?%LG<Dp1S(L`]4uTtMPi>c'oiDd-!j:d;d._FQ;s`ps'5U:jH[AuiJ`Xno#ac@WNh=[ng\mElbZYt%^'L4UT4fge6Spqp%^ohWQuB[%8:A3K7I%5LA"Z89I;8FZLW;YQ&f-L!11IP,ljCcuUM?l#D$=Nf',]U.TYZ@!.ttlEbXb4L=f$*&B0fn1'FncRcO=dS=f$)Xqj"(D%_B#46o\WLQV]&RFBITH`I*@t-G&W9,TdW_s5?XcNl-pC*Q0bd7p-K"aiN?#P=?iNni8P&B]d>aqr#?ZQi6r!.WWjg]WmT4;^J52*%pN0_@I4.s<o"%m)`Qb\;)5.>"3j9Io+;dN1ei6*=AoW>SaP;5K]ZZ)E`Ui_)Z?UGA:Q)\'.ku7C(XV=d\kftsraaEQicU0WfIig]%kX*SI%?F>TCs))l8HIIU93OcNm\.$ZMVWkc<'7$_GF#nIBbe8U]OH2L<S4jGeG"St<(O$od'_SGC;k(o>1^alC00%^mQ.A#U2./,%C4hOHCU*AWI//e9Xg2CpFO`34W;I8cFO`4_;YbHT4cKe1!,tQD_N$%bLc^kf_q-j7"neiu@Fru0YhKB4#H`6bSl>q`2p)&thoFp/%)RO3[*H\W99O!_cAT,VtA3[_4$!-:-2a%)X,/RK-*A<AYqqNijiga>?QJq/EcdL"MDNCJ5QL7l*M+WfbF#$*^38)r(GbebnYC9--%JWsBL"fnjtoN'I'p>9Ot:Wm(q5<I]RV-hre/Vc>flB@AL_8fONM7qNaga'p@Y=YH]id4+TN@l[;,^2QhY%Tpd;EGs)h2CDnFh&4W%qR#[=;b<Q]O2@H,M4El-eF.hW?>+buG7>BA5u$QRQC<i$Ph,eQ8+B5=k;igdFB;W,Y!O]\hFY@n2;L94(us.g8q):I$?q>A3i-"@%p%)TeXeo$S$**L<):`g1c3;,c]ZNa>gXmk=V5rhp^d;_)5B^Knh8q$t**#_2R\P,TC-&2>)VO!5"fggOC?ZFU7aA*4;i7n$S-sOa%24[XHSW/_9YaS>/\.M/U02tZD<(j-N4*kKrSWYa;Uu`o'l.#94/mD&JKKmkD3>\]m;o5/A2Uok!F@oj'h^Nqh24^U]H*M+q@j-#!%24Y)m/mM+p#/lP#VGm&ij>C!$=48T5>4K#N(TXE3l@@4G]N@%^dVanN%fBJ[F@rr_$Jt*:eT=FF@u#7lSm+pe<(j-b?d>^L;Z_\9%2L^*4SPh&1_Tr%HeT=F/("-P@7Oad*k\LKcqUc:+N#!(3^tOo@2lY]o[BrK<Ulu2Ne<sUi]"$gLFXkt]L$u(kZRu['aaQqI`$s[^%3Lo^N$\K_oA)P)Q_au:P8RE/K^0U0*dTH=0K^91*.6S'S.%KABX<V/\i7&1L)\nbb/LL.H;EMEZKSlf%d]?H#?o#Jpq4bJGCXs!!%\N;e6b+M=Tgbj<0&r+*`m`_L2*BKHjL'm2;'-q\kPAqc%\_#W1.SefXm`rQ/c=fW9]PHp\2N6?YG=HA5<3NhGf=i-I"4iD<2<7Ve%;pMoTb>dXmJ)bYeJ]qWB5k1n+'Vu!l\^.A=JYb@9d&0IMOA7%pckq26)b`HqH,oF7lfg6[XN?PTauije<5@cuV):*Y%Za1*6Uc`b%Tg&]Qf"GK"^O]pkrLf`qcrVIsos:@Ap3TV]i$$ul@o=`pWjT?=2AC7U\SS4q_I,9dG(IZ+Y9%"7Wq+Od0CM%f%2niud_if8ISSO_%3QUPRrHKs#.ab])7]!>?bV%D5O^p9@)q\_U[Ec\gOI,A=:BcEscFq;$PgS;E.*TW@9,3\$)s'#3(U53a@78b%_jDa8G]A_U^122^%T2nEUGHK"%:iH?n/ID+(2acTB8B'_7VO4Z6,juhFH[Kkqj8%g?mR8Y,o9atZE(U,ukIfQL\R&)r^ZquU;7W\TRt=HG$(S6;CKJTY%5a?QtFT<HrJNs*f4%WC;iJtM`fhck0h0J`q)nk3*`u6U9k(Yt+ZMs3>[-NR/\gd+/H6V$:H0;N-iXL*hF\)f&6]Se;cG4k3Vql<)%n5OI.rR<`ETT<tV(77+NhQ-1`g1P7Ya(.&8k_M;^[]ifCo'ld8[H*TS<o&5I3EN__US:m@B11[,/lBsZ`>KNh^6ie&)VZ08C(7?,%1/PuDY0/V%hlaoF#\%g4lu*Be&:Q\cXsL^Sm7m7])2T5=TSP&b+>pNnFr?KA7@4+bSND6pcZ+`cc:Gs<EFjW0-qnKNLah`t?coPT%9Kj?)5hi)?`q6")Bal#9CfCF0b2@tnL($F!s3gKGL*8L54?;G$s(o2F&km]0`K<$\4epUlMU-k*WX,).]1#24C]oRm)(8-8FPUI+%ALHAQ3RrlK)85H8fG2rH.IZWh*q=Z#W+t6W26JVZ[1fDIWh)(`>Qoa#V:RW7$KJCg+"C3p\/GYdQfsj=W3EI8nask-MlW<TUJEJM%[]e'h&cS,"KN1.6eP$B+0"N=1S8p%._r3WaHk2^=&49Dp&%At(XO^iL-b5#W0t_5He?6>lDO_B^A8)q<Vg@_P;9jsc<<`n>h^ekd%^2-WaqeR/,Vag&\`=c&jZr5TLpd+"1Gh7H(rOWWQOI)hYeAF]sZJp36V57no`;EJ=KSLi^$Xd'0fsOkmr2lks&,/es%SDsMWbkTA%p>D[WRK%!"2X!ElRQD]G)cV4RgLg=g^K)B)npVU.<!0<oCS`nX1p[RoMHJ>c-\+F$(ZOi&L>(Hjdn9#3*0[bB\kcH;oXNTKBB&Mb%d$bK(:6'>a-m"-pWhL4U^2GN840>m3Q>M1BOmE=pU8PS*9^3F/X_!f]I`dau8Q+,18t/WXTfsp]/9fp0/hHhUMO-o:6;pcU00P91%)CX*Tj][tF:oAIm9?V34"\l0s:4DcpkuDG8m4"H`Tr3S,`:_6Heu6O3BZd4/P^IfT@_D!O=I,8p!1_R!`(0BV<h@n@UN17R9O.6Q%9=_:dA'F5'>fO]^c_Fe`D)_`(]$.-n(h0,693!50]N7]u4)UC_FQ,m!ZC42-RQ1&s7T?!,pR=r<f=H'OA6C@*'NG1*I0_ET`GiMX%Y1J7d;pWlI&g*<;boWGk=#O5<X".T_="gS/nf6m=Qd=O]jr1"H]>L.!@5m/T_lh.N8)_WYFs[='hX88aJoO6Re-3*?Jo+02lF,pM%1508+`h_#)1Tk:f4*okM)QTX9HGrf\XFI4Bb+-&3;U`%nV,NQ=.@jWLLfD`\If7">;S_CnfBUJ!HR]4,Fc6t9GH\9k/Mfn=VK[sD%6$9;1B0H&"hWI-tYEn@-H1a*4KUCVE3_)Jp<g=7%jhap]:]dnsWrS,_LWj%<VcEg:XT:8L<<['C#*?7h:94Lr^n5'FTJT%/fIB.]%21VF"oa+WKE`&`8"/q^pX+I%/Dq#FCG"NLB*1gnc6a=YRE##%CmjHj)4hV3LBFWmNO3Go4E)l(+b'3K;CaWN2G?C"(hf1*;>#aId%Qh$OQ#`\F/jl>FSJ+'4]r(c7$l_StY;7I!@b,9GJnmsH846HObdkBgHeg7"]8R`uDgR4Ih:2-r\XaZTt)bU!.5NA#6(HWT$N-kL5%QR9Gsn&0%sK7!Pla\t8"?9\Un']&%ucIl%RHi:=H6<\"h*HSEV7X\k70;NSGe5>u:BneC]P^M&qIbFfG=lel/Hi4@REa@lI&ER-p%V#'3FHi:=<VAQp)iEeaFW]T5<)aIs.qIqSgBsC=dl_fUem8M8j][orKEAc$nQ9scaK<oR_M:AsrrE_^*7E9[FkMGOFQ!>cql?C)O%</UGHBtLr9+6EY!qPe%#0t7!bj?C<LCYfNWlY#]N^,,6NF)0Xt-Te=#jEpj4$YP_T;NJTE:Y!t5\,%-+?(?/CT5n?VGH7?T%`oSg%@_]:ni(Z[RhWq)J:ZIc/^7BPQT6A*E5t1'qp\JU]l6eb;k30C38#%#/V@25GB7T_0E3Go-Xa\=Ia*65d*f'L[SR(tT+5Z:,;De]-%Gd!b5(9r%kXmpc:Zn6PU#(,dOIPNgG0d3\m]"l".g?(N3"6'CVqJ#CW.qK<_Ej)*5RA@WOkM=0k1eC(/5/)(Ke)B`T]?%[7g:jr!%di/ecoeUt1hk>]`j'FsH@LF>X6X2?fcFnZ>niF;2n'n?oSbdJsRDVGOcG.t,gWVs]RpP)\5OD\RNk1;?j=4EfI=*F"lR1rY^pQAr%5/&8BE##52iOs\Q'Z6\MrClL3)kKmtUirf2c7*C\n+G/DeW5QJSU[i8G+t109^.4WrD_TrI&im%F5[PX4DE[;V]WB)G-BfnIcW$Q%qAmXBafU$TAe/qVqIrk2S)&)X]me[iU#\V41[aqb/r5d-jO<Sj;^rm<bj%=T?9eCEi[+$c43!"8rEd6+9_RR.n62B^n>H1j5OF&)%"'(kGme,%0%O+QfNXm;!X+uc'[sD%5_mkI>+0osa#^.fJd-dB(BNHSO?<Xd>QHCod-:/.,b;tuo4Yk^c*+DAkZQO4EZt;AK=pa[\%a<3gWDq1f<@b[6@o?S3IXg;UYp$'>*PG7X4a,ch0@U2HT(42Q">?n5SK8#2,DV^.p4RZ%C2Hfcaj2XoZma_E5*%PTWo#F7cW-J#Q%YkjfNr#=%2HQ<^-Y-!cK,jZ\Ke'I*3a5>jCGd8uPLo2Tq7m*p>2oKcL=<p)uB+<j1kBeBK2=H_'Ej`$f=7XhNg"^l?Rr.R<]\0H(%[EUnLHeVl1o+R><(MH;4Ci/A0Wg+(K/[pdd.i!%4lu_Ril*["p=`4.K)\q_sftTT<kZ,)Uo")HpQ9G2.Ur.)a&C=a[hb2fse+O.t%EL0PUS(Fs6IeZW<li$IaNQlkT[MRP^3iDS:`B=_q8?RJ2pIPR[4a/[GN@P#;!s9YM$apXS[uL]i[0eF,-UpCHS&hC^Eqd+<<3B<)%br5D\`g*?IEG3spnpBn4PZLOQ@]Au-CY<O]<seNb[EN/o\3s_sFD<C"2e'u;2W!/HM>(NjiF&rp>T`&j\f:6p\NnVbqtsoCGR%<K%`3t^*,g`BV/W85!qa=gbUY@]ad7'KY1cZ.P1Y)uJb=44hEf3q=Rqk,NIf^o44k>&7;6ABa"'rR+qp)YTn8p=:/<1Yp@DLk$](RnN%;`aQb7:6"p&.V_-r$M`\_/G?C60M4;Wf*kQ"auBV<<uSfljj8l%t4-@0DaM$VjAm%c[-f+[*BJb"$]BPdm44'd19^QE5]9lEL60F%/:GO%p]9*P9P6N*,>`@(2"sbu-[P9es3,KoRY:/q4FAIC6n<D;8$6CY-E@,0@;L0fp'M>771I!hrJY(P=7-B:)Orm.'3jh]lQ_,[%G(EoO`RkZ("ZL2UJNo8C>"bpYjeU"i.:.V`RQfL4?Xj1FgB<\l,lAOTY:iSYJP::PA+8ZonN!jQ8GINhN(Fk_5UL`3p$R6QPX%DN%LaM=]kG7S\0&PjTdHd`e,Va%r5\3!?H`rt#L]6"V=aqdaR6<_H6BC*G<4n<>ZmEEn5EWrHf?Gn>0fOYrOahG#1A'lP]hGbhVI]kj%eID$/od.WHYUP[V!*I^ZJD]'E"<n@+j)HiH#$4T,r!>XFET%q=CD7Qk<"ZJ2J<Z3S\`T)*3d:aGbHZJ#S*_rZUWRm3gH4k1*Pgi]%@/G?lf@X.V*bV@N_"R>'F'/iDoc0>C?thV+V@l(i"DWj32#'EELcmHi><rMQh`27Gp35U2FW4n[*T]$)^GIG3W&ep`/rCA%YOJI!%_>j]t1Mcg%\3R<WK$T)J:(/]RoO[2q*9jFMm`$Fa%),VF.3ns#]5')'_Z)n4*at9=E*,0\`(1$6`52NE%fDc9F&Qs1;?qIMBIs[c%8D\X+;uU5h\K\6l+@<sMMD7%\;3OWO0+>qt^4ur;(h2h=S]pJu,-s\Tm,0:;kD8_ae(m;XmJ=Xh!mTY::I!WVB.+9^'tnOrJ1Xo`%i`3>0;nW[!]'JE7)gQ"BZ-="<.Gco.Xa#M&1fg,`>6fA])5E^?6kpI##2j8?(!-8RbZ_M,>jDc.XZ_KX`ct>-GXW83emP*AX:(ZC%fs[W^!F$[Cn5%O-3Q`5"LImQ%SKo_H$a+A-eI/*3#-mtQoqc[#jU+]98;S>B7/W;0q[KWHZC3?k']WLDDPK<.&5Xh]?Kn@P?utEO%r'(j%L+;WK^>++H41M?OU0K$"fcC(HkV*dnIGI=WXYnR<V=7Vgp3fBa'oR9fT#HmmZ"=4kPB',`pT.MPY86[/VbGTD(9L8;#Hk%(%Z3sL1]K2a=RkbJMX4pL,Lo'$n]`aibaKk[ra.V#LT2o\UAg:WuYu*q@Na&sPUo1aOYgNIq:^]NAUabIN'@oW(nmCIV,te1$n@).Q%pZ%qJe;=f1%teR]fR6e;pItat"P'^3'WD#cN?W,f&XuAE,"-kR=Amn[O:Kte+*2+[4:Gs4!t2orir$'"FJU<7?>I>;>'P1X`YkQJ%eT$^l=W4Pqbn@Y]:IA:#mmH\FHT[K3[XjslOsV)9=&a*7B-N2h9`\e<+mhSK;,e-BHr.s-KuQN3.L#7e8s-+\Pq.F@`\M"!44/[t%2j0t/QA650c'(AR\'7!Z>=X`Qj5Xsk[e[L)[kktE#]Pp,!:YI)*\2mQ%E_6@$ke)5i"@B;/.fls7h)1VH`8"qMGjL5!g?gL6F^BD%h$%i@!2X^^[KO"kJ9?6<UV9?.db+\%J9(+@05<Y%;^]i91-dB4*Aqr,VYLWoo:71_hhqi16OILV$hWKh*Xmp934GG]5i>cYX(`s+%0oE>;I+kTc"0\a,97&1?pi?[kMPa+`oOgo6]I#Xh@DQIm:t"tYW>$]EXgYsTJX'!O`rm5<gG17S8c^q"@1J?.5F+lgZq&#i5_n^G%;ZJAX(R.oF6@,cjO:M/<q;S6b>i#fbY=+mgNIO*P*l0*E;d9Bj*g@s)VRun\*O+MpAur"RfXsEJ?+QF.KW_Ys1s[V"j>7gq($hAP%#?f?Hj<bKBJSHjRCdoIJ5u".ajfre3Oorf]kdr/INPm#P!6M5h7_8/1%$E)K\_#F6Y5qiV%%qK,1._40J-51-&3]iF[c0%3W[Dii%B'%i#b.s#[:aZ?'kP^1-HFJ,b]akngZEfK\85J,LK\sWUG4V.)1j^jFP'SK+jF)o+Ar/5$h\:%k[\CChh]^pb;5O,mgRPKQTJ?BK%F3?/g?p&Po=R%>KI(?CF*S2P5dRZ(4W0/Z9-Q8$6MF#'p6]@6VX-n,B.FBF6Fa"X!alo&SgaKt;>QCf_)$Lp'ap@3TN,>[M,N2EY%#9<b<+EK^R2TfN9XYrHHAWW`1'sR\PDNS?>+c"<^"VfE4CCJ3_42?)<a8%EuSj5J_h87nJRY%gLm@5c(TPNJ$%td9`(Q!\8\1VL5%fH``8M4b7q2";>NqWn]Jb5J2s>+hd=&$5eU)=OX?NPZU@_9J^oAipp'A7TlFa_HJ7+ZM>EHk<kEZ81rJ`@;.*+@@4Vk)Ui?gsT_W%GU7.=7iL\LMi:%OqoR=[;#TnniLdPn"lt>`5ejtmM#);XKfQdGcJpQAeN*-pr3MNH*3L+AOHH]<q?d?TjRDcQGhO-b+TC)f?Xc)-%bi(8[>j73WoX.-ENpMNX:n'BJI`]0SqPbs4!W5bPrf\?l!I0qs;)l8UbUTB<J*O#p_3&g^E'.`_?16daVIh4Vm2e;:Q(=Y`P-5>A%Hg<#.idk3WA@Y!Cf*B4bJ@U+.Mc.N;\:q_6#CC:@`^FCR'7U&)fFB`G.e,K$or]f!Zcq7QSi?n8-,FZFAD`I?`.8GJ1ZZW';e%b'%NOrt.M1gsRk4d<Xbica33'r/eE=HV(&u9b':H?JGL4]<+#]d_='^3UY:B@CA*I#N.!jUp%k4L=&2Mb$s&r`;j*+WTlKKR=<oLB$!%/0t>3d9TGg!d9$Q8D[POFl?p8"h2q@-sY+r1+7;HR)W/?P13$sK?[A6eU.U"f?bN(<7/<p!!V(*dSmYO!F=Mo%/?*?&"%aKJ>+2Q%OQ55kF$d9N+BNrQlPq4*`5CW::7`]G`'?AM\`=?9XB*[Y>EjYXhd?rS$s$S80L'@B27)c[^gO\#+?5lLYYr,i(Ve`jiemjbCs=sS%6*dssKZ*I"!Qo.p_*b2d1J6A&'bV-=,iNIKJ2n%r0RPDplfh\8K1I*n:uH965jke++]3h_NH65sf"pCg!okTfTShEl1,<B,A/3;l%C`R:XU4EM#;pIf<c_1\88JW<$^hZPV%S.r4@"WJ#-m&i\\2==KHRg>M2m0N-N;%H*;P&QT=8CZ53-KaLq@!u8@!fB9:tl5s$*.b>%OP5"LH_%TBZlr<Rpc$CAZ,I`NXJgF1TSoJDiX8e.$Y!pX(,q`4asH0s]^)'Z1ANkRGF3EhH3"&YbSd/+r(RcIJ4<+iC^46rKG;!?%b:aTnht>:$3u+_9.[@SN!bFN\n4#8N3&m;OrV#l=J&;i`D>_l[V)rX[9Rbs14H?KN@;6Qob^$]Q$aWEn9J"nN^YH;k#;=;UkM^]j%bZ54J0a*^==,M#k:50eI]jQ)8,OhfMIc,<YhWBtaGX*Xr5p124@lIep4Xoa2\eCk9>K$F5oG-3jQCac8'Hm*Y=nt_7RAQI$mg[0k%57%$)XNY(+R>k;[P%u*AT6O/%#6OSs^]WOq$j;rY(^RJ3RKGi6+9I*OC&-aR&G->Q0Nhrl'/Sg6CBG^nT.N&7\?&R>G^0k)K-Cj,%NNjld!!I\u/7tNf70%lb\:(\tdfGeRa]-MohT.bt4:nM7^8p-]%L>8%.NPa[!&@B0P;5JASqVV0^U-A9$NhD'pK0H%klP^Y\[;/5%j$eSFOC.!2D[pcB8)VP=\g[?d#1she(ptub6/Qs/G`;NFBmCUo9g5n:;5scU=-??#qiBbcm[!B$kol?fT``F$fnR+pm9JgG(bc5t%DT+4:@KXS)4gGQ"Le5/hcf1T*I.jp*2?q8bTnC/8S;`@((M&r)79"Nt=/c:ceT_nr!hfuoAHq=6(bbYe\;T`SV4-SY#[b4#2M"*?%:mLsNPAOD#-&$Nni*GkGgobqa1-f>QWrhJ[32pDn*d$r:PEX(-FC+bQapE`p0uFul%."W56pbD6S#lXkAQ6?S7B'e&)I<V-P2qI@%i+T3\Bi@(J[Rp?f^5H`FkBfm[jtQ_?W_4?u,ATSSq!E6s1C"b.\0fNHWmOPZX%a1.,AU^tjA#H1(L5r0_?KsR)B#W+_B0sB<5(jX%21e/DOk=`rr'lUJjW\(s*3aq,\RWIA'E7d8rmBIZ8UbdM@d[@nGmo0(0=YTg0)tM/Rsa%fgp+Y4$'!a[B`.'@9$&r!-&@qXZu&Fi%@(4j4_Jc'L5a&]R;>X^b3u\./:Wt'%'mM.j3GI4\!I/rbGij+NPB^qt`kk[P2Y$HL+io`<Fr6YYC/<g#>f_tuqQ&:r2mo9kL7j/f%!6MYSb+?<sneFNt"`ppV"K+Jn./ES[Ys:n'Fsc+gQ&F@9`X\@&e69-1:+nC^dfa7X?ji:Fo5U[4+&8Qe9BDSs@,sp7=^4WA:U&lB%-4Nn:YTe6)Mc90E-TK`&k-m)@@h*B+[nClopU#k#f0`,A9\LXr+#@4LjWZkX>)`)55)\cGK0PF8;5QaQ-m"(rN^+UhbD3ce+mN[G%;*FhFl3hbZi#=F*)-k^3#+V/uEp(C,@hPq1ds-Eoh6TY2BG;3rrY>?t[ga/"BSLK+]0akEPjKgB=(B]YV>4k._QXnn#Pi,"\.c"5%(6'+r0b09EB4?i'EjqZD-J=F$^d[2k-3\QS'/?:l7ec_SUe41&'KIU&R-G7cq14=^ji76jkNZ^ROTC(nKbU$BpbMHV7")Urm;%s'%Bn!Q`+S0j>'5#.E;TP[K,*WZPY2j?tU!BAF+tn6[>k(C-pb"<$eC1Kr?cCnFT2P$r)np"3+r@bG(E/Gs0GS2O?`?LV.(KkAU:V\F%kmY+8,Uf;Bq$"/#?pdLpD3Q]sD*!IK4#U#+'F&(2AC(i;d><fSE&+ANISn7Z)fbKdQ[oM2k[?0"A)j%+L'3m.gt@r'&ZhNG*'Ve8%%2B3U6j4`-.hm8E@me$8?h;QNUZ+(i%7J\)=>aRHiSGd(?juktJqQE5P>lI,)U87jU3@+3QW78<.Rps2kK8\op7krjS1C`bO290r%*Kai&g]ce'"Ilb#:)$5oSs4?UOjnuUXVYTl?Vu#.h!0_eJ."al!h&Hdd3;2JD>if2G'Uloh<%Nt`>pH*$PW2=XUq^2?QV[Y!@Xo_%B,HO>WUoMT46\.(G^'o^'+/mq5\'9hfd8*dpU]=V9$,[HoG[hk]mC@#(&86"R:HRGfL;>\B!rss"sh^gWHgYkGc6M)l4ND/3]Z:M%h:q2l-%NYL3&u;5$OX;ILcD"EMBJEJ;1`V2P>(g3cG6s]"OhqWk+V4g3;+E_;\rGeQe$d0P7;*L\13;B;ZQ7hiD0,Z4*$RbTo1kd%<sVmOm?YgXock&<+9pKY'AFe9/TEf-)hX%Q\]Ee>U.H$'$AnJkCOoaTY(QH+d?a`L2N[h48teECWalV]jZ^$/D;rue!,BKlb#7IJ%V.U;<p6[tq_:>ZGQ$nKYP9i3i*7qn5jg&FD6'T\*@R>O<:CZ`4d?b`,OWj[YLtKm_<pgqjS-d<^4!1fjd(FH!Bf_`[MQaE90o9h,%ACX2'd=XJPCl!'M4@$+XN6A5,>i^KRcsWc2Z_4uH:*Kh3,31J$*scXEo3qKTr7\2#BeHP1m@@>SP/&t#4F!k/rPI#0g;bZSP>?:Z%RY2l(U(G36&t^ET+SscdL_GX@=G1C3iSM-ScO@a&fbRIZpNJ%EjpeO,.oTfXHkkg4#')>C%HV<E;'+O6^c7SbjF5Z/YgHe(Y4fTS%<\]3I'\=UN!m0K=.Z31.5&ZtK+i?eh/[/p=L+spD\Ej\p*b+qEV"!#=ol,cn$\b`&kinpo%i%Nu5$7a;%Z2e@Kup320_EKDA0d`W%DU.92-Fc5TrOU)6AAr^J-qsnbi@QsP\:I9T\3'!c$]XfJ""]rciY&63?o.`;[hst_k`)P#N$Y!"O7H[aJQnj4C\n*k0oYlgo"*kW%LE'iU6=]cV:AAOFNol$<L1b\#\KOI,=&T<#T&ZRg&)PIE>gEnE*I3]*Sic!<F*qP:OjN_#&_aUM0$T@54n6QL32u3fU<jHD36HlN%aX#4[Ig),ra<NA59o[in8d*7S'&l9-lsd+#Qpb1]>OY*G<YT,58q;aL.`CDi'bQ`)0J4oG'o0$n=XWLL9.tBOa>+?P%p(jM=ehLB%!j\rapcs9Bg@iFaLI&]VbuJP3!#.$?o15UmK$Q!(k\;+Q6j*S",`rVuSmRmh!5Q<kCoL;Y=$DSYqTaY7OXD'-[j!.2$%YYC>YZEC%BdDYXpQF47i[bDE4Kou"4C[Yjp[F1_#-]"jfCHg!0L&C:7Ln+O0$KUN'(ltf7Gu.pS"nNs#=`Q?>*\*$dInVO.ZH22>"V+`Af@%q%(^J9!08cXCaqk8])_S?9*LfEcQ\c-7'ld)SBboe!o,\0W<_1@-*#T\md.Zl1dKXL,)4Gqb"6c1-0Pt%m5Q86J2tm/[,R'B^5qc:<%'S8^UA\3'q<C44ST=+t%\[ee6+G]8ASAJN$U_5p86FAVuUd-D#_I-i0J*3c6]8p0^SO93*0<3I),T)c%cR_WVp)Tg4pZ2MmjK5bt%0uD[*+(cfGZAc9rqg!km"S492\>uZH$2O*E]VEm:dVsoni#%!bNcAX9b/H(mh;aHrQuLb",:]L'2Q4nD#C[KV;8p(rEQ3>?j1H;8%AB@^A4t)Nu5_81VrX&tt!,huQlkpCrEE!5.EH1+%]_E!jTW=N^`mfqM!G*N3P,^6i1-kDQ\\KDjYQg$Gan#IOpSDYB,gDcZTR23t%_5s@\CWGdt*OFEU[V95:fPW@p[#L]!cC_Z@M)QWf.S1`hEPA#ic:i`M<E<XB<G#e.\Kuq=83_GOZIRU*f,U!=csoLsFLM-"8.#MX%-8fW;l,>[kp9\k36+.b=gY!B\g@KUHmPGG-592CHbF`ub3"[6PYb$s6krc`Y3'f=DhKF6koA7rdjlG"aS9@<JHCh="dIO:j"P`g'%NV0(K@)'d.hP?u2G.PVC/%X^VT7Lq[rWQeN^t[N^$%MokRiT(WU@j&C9WCd,C*A#]F9CJr%BPO/Ys#^sF=r%ApklDQasTQ.1m"8I%@s*:L58V2cH,u*e*"!*L6n@H]h&^VF>-;4uBJ3+GZC]h2#Rp4`rP)/nATQ(,3)b;_;tdkn^^F[_9N3HWi3.bk5I@ikYr0*pb>6-D%Ao8E/er/Lpo<k3'iT^3>KtgurSZKKWRk3!qZfTGREL$R"?aFr,kBj!$NQ&0'\#\u+B6G5PPKC6h^J:6_VHoWt@HQq*aGK@@]/:B_%Zf+Ykc6On(jOX*+WmB%IKk.2m&ule%^egB1+<3F`@nl&_Oj(1YqA*`=>PCNiR6Rob^iB2JgeSGF4C-=bX>4GD]3(SiBA8(nK3Po0%k1T'3V"+BI[^aTrYH[Ec*uf(`$SU3O*fA3$^C^k*nS%0@LU?(aqTZ%r=g=(TQ/p#p6=Lp^3*9?1)=:%!H/piS"mc,V:4qG&:SQ7V%`H+elkC6p,BD_jVo(1=^,m<hCk5hm'r_W(@/u8h?cR'IKVuDKAIW)(6JhT\Z]RN,U3-JMh2j)Cm4>FJL%ML'cNV<@8q'F>KR*C8S%eP?S<I.#O9:@(#Efi@(aYE";o+U"hl&j7L7FmA=*<M!;V.CMgJgH=PQI+>/+DqTsE=#fr$Q6&,n'JD_Y)P>5N5gRHAc43);kP-9Z%:lOG?pRU7l[GF12q=a==i?*uq:E+S82"aeh?iOVYq%(dZd[Ki6Wd!D`"!2,r%lZ]NC5?0/CiG_&+NDTi3$)sX0A"@60fcmHA*Un"%+75#d4df3e<,Q`$=0<HZB?abr?$p/X>j8'?HM3m%"=X6AC-%rqIO?ICO:se?mPCp6X.JHVQgC>ok&'od>D<5;Ki[qmBmn9&nbTUN%V7U9aq]ns`ZfO5Sg(s_VfB%rI?\t>gZg:hW4Os>piPfcrk0$Y&gE>`)UntVE$X7aE>BAkkp@3)&P@Ok:lu<4No)+nZ;kN2sSVU9s%eBil<KCqW-5\]0YNFC7Zs*4fi4]9at2`-W&0-S&+K>3LI3BK+P82YZ?7q2CRC0VK&\C*:*$O^pl'D&kAT1-'UOu=Yq.^&F7pO@e2%?.DE_M,D]-)bu@\8#gE;4Z5?,s3qqtc-G^1OgjVtpRBRP,)PJbHs*&PR;4@%4FX^$A=+nb=feftXT%a9m::5:ek%2L>OXg25n9bR%l=Si=Kp5\TP45?1NNT,<WZMl$@(?puS-,f".>t$f>.(jNkAoJKfpaNa:S&G;JfPi*PM.D,Q,(YcS1GqjhqkLupu@@oOX4n=VF5oB%l(OVi`gVUrFENW%p!0WVBT&M#3'c3eUpeLITtn]0gI9i=)19.\1KnFFigYO&Qkf!8/@XusAGKFu`56EcBX]!UqC9e,hm\F7$R)5C%K4H):4#k3D)ZNgAp6n*DkMraY+hhK'oRO_2bCU-JQcrc#IbH-n/qPK<1;i5?!a[m'Am\Thq/A_d$no>Fm:$Zjd\#-XSN';t4Hi7=%]s0U-%`@NTNG)93(X0SjCq@6[*UM[%C[\c'BPEGWO;S"9O?Ho8'N'rc[YC]hMmM+CJ/8c#[d^I;kSsH6LOZuB2?R[U#_L8a.dq2s%Y>2U<?^`^<75_I2+k"S(F"3^Vqe<r:U9MZ#a.c])l<pEU0iPd%EYE!QYZJTb)N%rU:S-f]KMi7.>G:<YdduDCVn@@Z0hoAf?B$l"%Y.kuu%$'Kph&`t7Prd6QnBG$c^TV7@r0j*;If;-/30*a!ZZfJ\_Fqr,^)Y]Od[O1s<<mh8oqr-9`KB'#7`?n3QBAUcUC^e(pWc6r%O4BkBFE^CSm``d269P7#'r.GJ35;E@fm75)*Mks.6\14L/BpgO[UGq0AN#DZ&0@CIO_J7!]#LUC%oQc"Oj4)8fnuU&Rg(cAN,XMG%0WWFi_C!-X;\ld&Qh5-]\EV`q:S?\n@$L9,.-\>pa');dI\!`>'m/T:8Ndep8q5--h*OM_Amh2ZGk[#2QSE]-H6q2urJn$maqEQH%QjYhr.5%>Y_c#.2U()9?OJ)<3AFR!l(]<O]"PfHTR>?>1#!TUogp244G/tPq&5SEI)6LdZPt!!"_-VA3Ftj)Ojt=?2CtYW5<XhlJ%qf/LO!(F*9aWoqKVJ]+)XTk`]C1[=daNHCY],;h2mFs-(fd7(b9!/&>qt`7$Tlq37_$ai@($4@-L!$Dg/&CrFbH,Q"(eNSjI0sPs%/mM&g`QL63XN(-&4QA2I_,st^;+QR6rmIin3sIY@l2.gIosls8`Mk`bS)[A9Ej(SMG$F4<2*Z>mFH)pH/^4+Q*Bh--*u=[lqU2\\%Y8UVHo>B/RqW;p6NpTojM]`r<IJ)./2P!Ne5;Y:]&at/m`rn^=69.7Kc2C$L3F+co$%Cpg[a#h(h^sM6.D9J'#>a]#(KF7<=FX&u%]p95#g;r><5ru4j[o@80>SsAULlSa"G8[2T$ILl(#WM(e/"?U[epCVp?.;aH-oY8Nd[kY\Rb+IKEP_17D.2AEFNN&Xh(PgofAGg#%I>kSaHD2E)eSOm&f38NJ#r/.LJn7nD>u23RB"-DI4lXppCGatE/Q+_r"iU5n]d!"Co`j^!]XWepWG@2o22T$mD^u+5%5kj7loFrF%7hUQl1gJeUX%;Kr.Kn["Y3;eOgsGo^<;38p%b`Ahbej%%5J4(bbm.o=kBP2DB(Os@lK\Ur4qVomR`?_\P7?128qO`$^p6&1em\c/%L3T(l9^-C&kn@>>dSUU`]d\B(@S0,kTbV,<dtt`E3*RgSFLNF,V3eegl->Bnh*9^5dWL8*HVE[)7C[-R46;AggCKXO#R%`0Yo[3b%B]9o?\M>HNO0l6fI4h.GQSfj:s*5?p%D%0YBo<808u%[!P;QDCa_YDcoh''LprHLfkQ&qA_Pu(DKlCf$C0:mE]mooj_%s+ueYe8Y%>@ZJ+\TL[BqQ#Np9_pn5Pe=7pb1-/-90\-7QNdb7Vpk#WkrBASgG&L](u9$]@KfP<R'nJNeJi+0K_d[8XnV5@cgMm8mJ@B1HFC3o%=0TXYmnnUGOo<@-/Zsk!f!^F9h.=@R`h[ag5C5pt/R.u(ks"`FmYZ@\#duB^[p(E5ci0LaS\rtbBr1be[f7?1rgVHW2EUE3Ft]5o%J$l/nZXB9U!spB>o>/JPf3DU"JVH0fR+OK-q;AiZ"8..FP`P=id;>n[^.23W7"9L0Xa3k$1gO="KYqojFm<)&IEWXdfoY5/",:Ga%m_OEn[^=\N!JC&nD$cN(ltYY!h4%u3B1oBs,98l_opuR/grg_(i0#*_4;E:sJU*6_ZNO'Qn&`Zc?LI7,L7?lUCtY02i"0M2A*DG+%-&[RHgR=n(n=h%BldKl6p!9seWP(iLFr@p__!ODcmbATG5_/0)&rF#QFH'4PLd?FD.hutB5R<9mhn%LZlH/e*XNrK"[A;Y"2a)"d%Ypp19EEq>:Y!RJ:S%,(BI#RnUI6)GF1ddVK7r'=OFQR]#_Y0:`#<?kngVU'IMOcX[c#iYLBa^hS=CY"n'^+RFF;fkKQ;E!sAaBS,%amL!W-VWh6k"Ug2XAG.JUo;^6rd3%1@8d?;K+g_t0EZL8r)rQUGd0F+-A(s[/`Gul/cLp=\"pZN"s6(LQR>$I2O>fT+k,aqFX4nr%j$BK`=VhYncd]S]fkk"?YfCu"eEMDUlZ0R7`tt-HNNbGACTUbj=U*Sq4@ks_iHle9HB/:sb`rtV!dtA+]"=?8)-$%aEl1<pbkUh+%'LTN[!h7X"rd6Q6[^j@#@HALh:HS'5`:Q"S;q2o00uRp8YHLSp9Iu<2^:oEeNn'8jU.l.Fg7im;GDN\p^O86^CK@RH+OE<S=l"(b%LK_$!D1]?H`Omj>ep+l;bn:N8ARO_H^"&RZ^5;uj$b-nDkbncr[9WC*$?oI&9,U)-<J<La_H::g<T2cUH:\jS]H-GHSq7ZiaLCZH%gV"dY:SH!XK9kbE<)KHDSZsguLp'uK"P?VEL90gUDtb*SiiU>]dE.Z[Nn1:(Apq(!`IP$m2WCl;)1lcM*1/SkR9ZlfXKJ[.?+Q]1%?`]e3lJV5Gs449pT@H'o/`Q[mpP`bK+=^G6J*];f!El`UHHkGSHp4"!`bF.ik"CS$aJIWaLTrH>&-'?m%$0DY3H9Tpm,--mO_RT\%p!8I@<.S?LC=PsD%nYI%o#/IYY^J2i&WK71Rj82sALJXcdeisTKi>S!#p5[KZa/ns^CU/pmSp#c%V(r)oCQMShg$Elrq!<SO\<op%5QB0]6V_/emI'u1"Qs-,,:E5SWmO807]l,YNNPCd^0^V$7AD5cH^^e@#Y.Y=Vid7p@hQ^5f9*-5m=99A+Bd%.7C@en_[+j4X@16I%7>.4X0_>+br[O_%k.XL;InStN0"p_eS_XW;T_BIC,'&!42%E]o.R3^cNDVgTQ*:r%=rhnZhkVK`R7i#jnsIU8mlb<8I29q,WHn_T%NcDW9<=n+iaS)I\-u8@XFQB2@+0^dLN3[dN3MoASX@$eVVrGGi9;gV6`ds/^crl^QF$'$dl5U-mUuBhV(L4)N1ri/sdIR)W&\F3f%2r)k^XP4+gFNu0fg.:T*ZCp(1Noai$OQ5-R)Vth!rg?M%7kjjK:cXjgBtU4mC%UT5eA'RLD<9N%L"3cD'SNn$#ZJe&>i/RtWBXUu%:$E@X=5%GLiO#nYXTU`L'WBGlQ<:X\[W>66RH'OChp-VG9.>QUg@h[9o(O>p*5\OY[oX1$@&nY%e4V4'ALD5*1l^,5Bce/G>friM%6/1OYpFg9*a>$k5p0W*N^XQnDI8kIHpiJD!QMKOV;-`L!Cfl%cPg.o&=-i+qospDs%p@"k@PeUuqc8dBfuf;2Hp_eU:<18s$dN?]%kA,tpiPn)X43)%.DW-a_bFp!'+j50EQ^(9?A'5&+LohIHs+u?pYK)R4b/O2#=EeJ;&drp@&^6"48e-5G8CUd.-':2m`\D'g9l$9b%lrOEA]c_!lE:,?^Xl4Rt>`Up'bEjk6;59'FYW4JO.J\Lke4'2ecP-EA].:NYK:UPN`NYb)YHoL-+rYN;r$Y:Y>?s+.E>15Ydb!f2%]=p9CHcUB<ET=?5k:[o'kYbL0ls,Wp+PTn:7da34+1b`P/a2UiWaGH3RjIsn)*_E?j)+V`?3B<_ef`&1&)"*H[c]9,oDl<MI@!\J%[`@dHokZ#Nph*E&[OZ!TGgRN`YK1T_FaeB1$Iubs@ED9uDqF9.\Sf%YK,`J^Di$b:(9\[B%6MAmg2.>gfl]LOlS>Vm4?NM][APC1%kkhj2+rSS1SbWA!IQ0B+\#i<23X9X7O+h@^ZZA/VXA-tGCalFSn]fCfcP\a7>o78#8;BUi-h,K4=>AS"m;uk#@W'\mL4!^-"S2Qd%...nP5MM]5Qs(@pD6oU>peWX0_De"X?Z=TK0!qXn4B5ff\.C<bX<b9RD_FW3VMan"P9];J;`Pe9C1UY`^J5H$)E-7<k3ETXRF]!g%4Ou#/>jj1)h9#5$W\h&=_AXA5S_eF#l!F0ds"q!.d/:E.f\%0ll/%WN1"YMM#sOATi+9Th`;P/Nr#+#Zem)YC@4L0M.;XF3B%(TH%;;`M(#:uN#Q;;AY_$fJpC-8"qWm?)R)*XRMIpDq6?/K#bQ9WL)pEXjrlM8$T^OOb"T^bb(U=i]oIfFkcrk,Dj(gW00(00W#`LkuS%IJ(;@nu7U2GQDql5#U137Cq]dP_n@lGO4/n:VL?=G.2h;i)eaJh.<H7gjYhGmp9KV/*/1'>X"I7otQ$gL^9r=h!9Mf<=_J.rWb;\%QBUdO9^mU!GqKT8&sd/\/6on.mpo;^3[ddAqs?!nf_IG^SD\_J_j;so,&o-2Fs<Mufp*kbp_dV>9^HR^loLelGAJ$1P+Ah&G`3Rr%J*iKgJaBWCZnXJ0]gOMhYDulA9q,%b=ZA:N^OR3KIee<$ae`CY)-hWZHt-gY=*^/B,h/qf:?!7qrnV_"?cjH3j\4:m/X!=8OkH*u%g.7EmP0`-2eJ<Def-rJ)G9rm%I]-rPr8UYpP0]_dq8;UJ,/P0m9%d";jRXYK]?nMC3()q)F+TY9*Ro@O9U.eN]g+;9Y$O3Cjs,2+%E4m+`Z,no#E1O?'cM3CEKlBmt'V>'Ho62kSP&,CMA"SeDE.RBj@Q@Ldh\0=tq+4ZLbYQKpr)m+]f*/<=Hp1,[]iaEREt+l?r64?b%#YN(s%&X#uj4*J2g(pNfe,XY*k?8!o:4;jRbMpQ^='u!nlk6<?m<8L*s6/H2r">IY.Vt^%XX!0W."2%RUK9.aJk@Ihf3a%(EP=VR%Y[s!;2f;.qlf.5+IQ^$aa7D%#k53m\:TV^K8]tRdNd/ZS_0_Z=a3l0:UZNaW^8n.^oM0R+7/Bo6ioOAi8K?t$\ML4doX?8L]]t5S%EML;Vk8YpWX\q-39:,LL=SeJ4Il/8&?ND&Yhq^QEg4HbmgP*Db'kX<AL9%@OSnZh>Rb5VSfEZf3GOR?"hD0FfDj/]2iDisGh0g8e%e&;%"UO7JISmKZ-IlUfhIE:"neK1g9cenW+3O63Y;(B!1](`%ocT1D"?aWVhg]6eLVX@N"dgW-oa&AbP2U7XXEoeub3o]UTg9@`O%5!3jT9BnMJXM30Y<0SpCm0sD68a3Jg$Ec/:I0KlOFM#-qWTE1&d^ML!KfBV/B\*<6gsmuQD8^_$Ym1X.?&8)W8afE*IUdW0:OUSm%F0n++_=jD2ea_'^7V.Wr?g;l_CJO9U$`K!FULQg_:6Xls!+``P!(^tfrXb15C&l>lP82MLIUqe2.>[TOXHA`mZmkZkg3ARIQ8Al>%n`B2iGfQ2P*dktcZ\S3[!^IHj&6HK*?lKnRfk:5_I(.C1\?WVO@)rR4Q=n_Bk0:J^9,=*MNm2s#1-(8l:#k&HGjirC<DqA[(X;6g%8[SEkj.EKE?5Io&7mhFKXEG,2f?>&i`pVLg2*YiKjP<S81]&\jH1<A5*_qbYCZ+?C:ot21XfLumc(0#H2'#JalqPF`;SW?P>@3S_%_gu05]kpT^$T`kLY4b\\1ojld_-0au9+oXQ-!]3/c!M)=N;"n_T98J?aA6b2XHG]W\T<Ojq.Ao=X,q;*DM<am^]*J5</"J/(7]Jk%"e3i"ir5J47E^%90lhPec"`6=4hI\W4Ee/aF]h5Art_TeT@Qj4$Y?4JMYQp?MY4S]>/-5upBmqP.Un_0ON+J*k`(">[85uT94H\W%T@VDT\pN+t75OhAc(\os5!CrF`2<0_AY=12k2GiDF*r4QiTiO>-I1j"M5ZIpp&=69@+-pX#^\Ya^^kc?X11s?2W#"*/RI'!lYH@C%kh5IDV]Q0?#19>=b:Xd_f_QX8*-,e:jH?QFe_91=N.&9@$F[_;::8DQTY8`O(l#3HFbe(Zj)DB#c+@0d#I<GY9U:rHFZ<i9^0',W%G-la_jiFoG"p>9.E7s7(<F"]I95;lEI'>DM]ubGi]8Q6%&MgJ(G1iPQ5YC%`p)03il-Jsfj6\?,lB(80/jcGoI=&Q4E;q*IasGWV%k17ucXBAb604MCqgrekmjUmh1Uuh21nS/Ts\nE8c'TKj%Pe\pBe.a4Q;m'gFVE^+kq3`g<Sb"uoBZK56Ppq[%4mZOUZZ0s/CTLJK%L]eY6W7"rl0=!IJKBk1P#eAfJ7]rJ&>iZ\ol&a4!qjVgJmjsM^TjL#9KpR9"n&[.$/#.k]HqS'mNt\Xi;*&hjn,/pK@N)e'[Mb(M%D<C6`euhi<@=%6<4k([c4.g88@em[7Eq[0'X\GcJrm[>tm>S`]476)%Pm_N-`u_'Pd!nlAH%8!Hru:pUg'.?$?bgVmI/To;,XCb]%*Hle.pK%q5:.roV3n?C!nLt'd7gV9.40t'e?07p7$Qcm[GP6'7*A<4D2m*s<Q0(;+i*BFQ2a=E4UF0uP_t\rO&^h[WI[VTur$cNW%qt+ZV9oT^C=&`Z[g=5,"^UEZln<emElbb`R=4^n%*QKJB7Bh41pG?].1o-b];X.:Q6U?AX-`UOE:s61&P1A1KV=/k:-COmU"!or@%;BIRC&G?Kipm5RAm9VQWJ21VPH'\0<I@;[?LJtftlqkPFEoA4Fk#=K)PRa:eS,K!9DoA!lm;6NbB&:l`L4\;.J1a?qL8Y$]GtAY8%o\o<7q8`@$jR:b(#djKHe+rW/Y-:OuRX5#&iV[8t[*8=VrjmAGJ8iOS4P#Z:1DIjIO0o@LR4<*4LSi[M`?M@,%!@\=?S*$"!TXdq%nsB,`TjVO,'7sYN,:AguXj-t&]6&6Phns>@eSk.fit(jt1&k("fg;nVIVQE;C$#$TF#YF7+F-.@aDoFR8eLEDY?ud"j_]g!0oN,R%/(;HZmo*/[S#^!C.^F/ek=goZfN(ia#@Y\%20j/P%UT=Y.&,kZ`Kj*:3aUdn2_KY0g`/mELi)$cRjdLl.,%X[X(gAKX"r2X?6ghE%n%$_D9%MsI)K,95Y%Sa\fo<V\O+`HFB<n)=Djur7V@r]%d!]!#>F;%i<Ue=<Z@6GIQEeFf<YmfM33W(R$?p#?qYnWPhX>t4%aLC^%JuAI(]gJBFo<g\]ls2-NI#Q]>S!>lc?V<IB7/7ODXOoTfK6oj2<kIJ2\Y=N(7PuO@&,4S:0Tj7idq.b-9(Y9E8ZMBqO,FS&eqp(q%YG/\O_VN%83Y&U%RV^dbIu.KWIndBI>:oSk>upK[:4qKHE]&_^c&3Nm$XKl/*53,&m.oF?K=&5s\`.\mo2NAU.cX\$n\rrdR%fnA%Q-j5G*Q;!)1J;@:ou/H33*jH+%V%es_-aRhHmco+?_r;`Dp\m%^F4i.`q74o%CsTLbQaV]]CYm:h^bb^r5uXg^F$Q&rX+-*2-td@%>m^NCH0h-lYBtl9(0)F')uHoCho9d&,K@pRS<iZa367fT1U`3ml8SK2pt/k,:uU\\23+tL%gW.a=lC-gDe-]XS(Hse"CuC_>u/0/%-QjbKe\EK_oep0LjeEi$rC=HVq+f)&JMtd+$7BM-Q*^/:E9!RI/KId![R\)^\rkb54*W6\T3Z[kSB7r*D=S53<"+gN4oJl8qW6]X%1qoAj8+9[J5)QXYA$$hQflQgp=P8&Y[cY_?.^$S@o;Kf<X0#0^^"&7uLFRY7:>+s.QJ,l-Z59@l1S<QPfi7"hcK<h0HiHl@DNQm4%SYmQ-+-aGL#HOe=3"_LB]f"h6GWr,G^JEf``MM=:k:Z"J/.SFWA/sBMZ*$Koc%2:4pTr'omlUHQ%(<U`M5Rk6mKIj`G%ZeQCA*N!%o:P4CI"-$&j-tVZ]"].A\"_qJXRYNT[G1Oe(Wr>/JZgPM,T#,!G<.bjI.@&VEUn#A^`B\!"&)d3\\GGJI%tjrORI[/4ZE^nEY$gf%%1c*VH'n&Cgg1'7H\Iq\=s\*a]SrOJ!h=QDDmJ5Q?3?^D$?+qf5qMb:".XZEDrM%sIKH$c$?.0eV7-H&NPj05o'GKB,j&aR#^Q7)%+37d;Pu&9CCl@b4\6NCj'0:iR<@0O]MNFN+*$`q',$s\nQ.jtp?\h1t:M^/2j*G2%^-Ei&-LV?W\qaFH?9+rg-!#n[[^Gl/6i"f"%!,(';qI,^mJ)S:Khga_V@8q+/NBLl4?*M?VF#89gZH)r3;sHRseON0'h5-g;#+KGr3D^u=]NSCs8&^BV\S=TCi<ESXF1dZ/B6\I[%igeur)3W$XWl7!oWYtKtf;DhSIDifCrIUc#(#1qCP&DtE;X@>A7e[CNBQR^#)eJg\+\\IHDK>[lP(;[oA*_edJkL-Q'heZb58G@c%dU@7nAJYj!*54p@Q#=o+gh"C2OcH:9#3\g`NPM7?*$3l4kI.9]UO"Dql`+ZaA\I@d_<7#h"?rrFrOTD4hh3r'2C8=SE]'d`m>e('%;EjZho5$LAj_LGMQpg>%qQB?k4MY(SKrGnJ(Z/^RIXfgjAL2Z2PZpkA?lrT!'mFsfTS*4[l!bV/MfAU/qgV0%iu"_$CB&e?f\Jf\%i7X:CGBW8JR>lVU6Pe]0Qt28>?-D2Dc)8;j(JI-%ie@_6kA,u[,^XrSZjR9+3[b.)CW+(-$hg-"+XHtjSuu$[ff'_.]Xp/(_gMLX%b?EQ"&$oVZj6_)q]eR8E[_B/+P9!PhM8\,[?Q8k$!edQ@b^O;o-?C]bo(aFJ>sfH/B=ZAM(<rG[BI^K$+-s?DX-Ig:jib4nrq'2r%\Plbj4[j'cY9'd%&(L!h:04WFG1l7Ds)W^f5P4NFDHCG'a;T;&[jt+MiYQr0\*JH&<Y)3F\N.@k?)M9c,i)M/Uo,`pW?'B$)k.55%8*4EOB-Gl8V/dZje@$CQ>tjYaIauT)^"gR@s3n+-%shffkHD#FYJn.o^#:8]9HB`XPH&uBeh4!,Srs"4HC+PWP!/8B6$)uagQMN]%5-T&[0Wk+AgdA=`m&Xf--!LO(AWCrqri2QOdCsa8]j0"^ia#)!HhqM\I%dC$Pt<6409G0oUqDrU1qZr"pXAlt8\C!?.rg&k&_"FL%Lj!cfhZb=&gPC[2[p]\19Qt]Woi$57hcEUQs8:Q"6Tq:2Xabc<FBi-q/Z*k9.jM"Ae!6('i$PKMUFgLPT-`3`>H=^l2q)V0T5mEd%?t25;B8><K1N0JskUi[,)CTH),2t1[239bhVs)+Dm79*r[CMJQ)Z7'/M5>#9W!5#<R_trWls?gB\;rRF3;_#Sm'7oF8\(WmpB>sT%%Ke>bbgG0Gd5Z3PgMH+;HfkpHnWY<ab>0e@qqjmMD8V=u5=YS0nTHh_LY"_o2,[/?Y0m>o`Oa3hHG;>B'<R4bc]Yk[Z)Yg9?8]Z9%*<\H6qo`_k35)@F#Vginb;tk<KFG^/4$3:+`Jqk,oM`#\2l@RPP6mfW9/F%ugDi3+P8N2@&F\s>4c8bMKQoB'c6<?^kn.$GL!eLA%*ei-cGntT(HTo0H@M&Adoe9dC;MVko\11mq0aKS8:MVcP0D'@oE7"4d'&0^3m.^df1mnl_&%6er("k><G&_q_YMI4o094TK479\`%h0/U2$72Q.>&(N`ma!)_+J[K\(S*3-k*GO+N#Yo:65!=;9WfNDado+pgA\_pP8Z'8mPMV89"Wd#k9mUZ3co1IDO"bqZUJ@r^9cO@%k@h?U_06C]Jlu\DfP+#t\#i(Q9g`5^8uXu*VuDd5(Y?l9-?G\ilPp.[X0b`45FY$Ar2I*)T-BlArR9)h@Z^B[W_^*`P^A.-2q=)F%6R'7P>mscTYDDt6_haE3*$.0^+!.d@hGr)CW0%&Z)<^`_r#T?=qR"6=5)[If`QS5$>m>3HoqP;e4BnrfWd#F`&\(Peh"tNEiB#[X%[,qR?VWWB]id81FkQ/-enf:)Y@#HE#FN/KkgXfo/@K.OO$gnT[H8eT7p!]?`\@&l<2.E`+]7&DmordZ#G#M,_S8=gjH28o`n,at?%if,gM[o'GZ)be"A@m!u3aVI5>LOXDh<T7o8(13J?['pWb/o;ZV/k?[C1R@k#W'&6NEkA8UfMR!Og:]R[pYLdE>pS,gD.MO#8L3b<%[(3*?ER.^R[ccgO+f#L+hH#s2QCl@'I(4CnDLTl2c3E34]pkYc)]O<Oofnqf2:En9CCjM;g',0sGSA4sJc-:fDkfkR7L!-Un,?"`%LL6"BWY]1:b)s;O]-r;;]bih7rk,\9)V:I*D#B)YkCP"CIch3qL$b,+U]"PYD8UPRf@u#HBV.^HJNLOp;K#=?Y4XqhY]%fiG<kA%%N'&!5+0m`,`d_@SL>;$9PR;q$l$*lAb6"4pDs-qtE$cZ`)t14Ig"O[5K<rg9o^gPkhJuoVPGg^SUO@NTBLWq`Zr8%0"q&5K"l$Ln%'&6DdKGukb2PjO1q;1pBYl46:X'I/V(D#!g>^ULq[OlgbF;lko1:_=I'l/F]EON%$`\5d6`S17D(%h/PkF\gFV<Jdop\0'<=G-)8%kr$Lfek,"+h$c5+`A@.KTC(X0S4.gXLF5HWQ/&2p/GOJ`AW:Pk4[h=)[@ga`)ntadi=`[;>.7daL[0,u1t\E8NAQ,:d4t3<7MbOk%c)W/&M#WW^pMom4QUNk-[<7_bakDJpG:/JLf1?lFb6#>g^&-\mgLAkh_uUM;,?uBt3OEq1!ad)kX?AdEK/S\")l7m:N6]al0T9V7%X&r?hXRGI1l2.4pC*NiT+I/[Aqn81$nlW(S?>>lM1FTA%221t"H.)Y'c_*Iu%8n-On+7L]eZ%EE?n\a\\Q#cml;>*N&=1)(cC\HD%Gj-Zjh@I*^:WFE<XO>6AMUmUn*A;thVY&iNOI('0a;7hi+5>u:e3iCp`tPL%HFBopdoeeQ4;TTq7F9^?'1h/i>:]1^m@gR/g^*Z+%EERJ>g1Gc18X=M(:+Fl:f'NeQBCYK4bGX6Pa/70Y8fH>XAUc[WQQ1;>XrKtY**l:>X!FU&Do6um87>R0Jqr.+6(m]@B;"NYSZsqD%la9OkN0%LacQh6qk-SPqnR->4E'&3^k4*Td$k4D:Jb>@\lGHn=f03:YDPmr1UXU?YLn9`n#-8?EdtVW_Nu%u[bUN9t$k4Q*Z8V:3%9AR1X+lB.$d3Bo>H@5&[8XB,$@'#@C?\NKo@hnh:P:WWAL:l[_Vd4T;E@TUD^"sH?A,M/4<HC[RK<g<G#bp2"&Nq!V`!6*4.T:Lt%L%0QkKDZ,Er,X_42dUrOG;5FdiFY]kqFondc`c)m9-/O:Qd2e9N3)d-/>^K?B.)eL2W/r4=00W^`'6cWqPicR@]oFMf%.tp4aX4g%?9KNeCjdm]>'ur[5B3TgDOcZbo94*B[]-"3rqed:EV;oUo6s:b@3c:@dp:Im]\0Qn?lga2lVb!S0;W/sf0-Ued)T:VDWc"g89l-G%Ec=3nqJs)srj'F7kj@\CS3^Lai0)C9YE,`Dp?;\tgR@L&ldI"u)*Z'l5PS8\n#tks[9S1,f73HE>!CUa%R]:P>&X<2rCq\4B'/]S%UEtTG9pEEl,)XW%8;DLQhu20)-21D&`n,_;,ZKch`Jq%c13JK5/)<e)*]CLi%Q.mKqKeETHqt8"(Oj]'m/Q%,/iaZ[g?s29Pms=!%HRDh*CY=$@_@^QE>p:S:D6Kj1q._.<?.<GccI?@^ZT5&2DB`d\FhF$B-"H/dpAVNK1F*N#HYuPB,_?\<2K-e1oCr5>MG?&P_7/J&%;T4<ilI&.K2-[WE/K3H7gPT$$h]9/;f*rM7[PtgH\Gc/HGXprklWr"BC;'*/0ad3_B@6OTLI%2'f3Zij?gV,2ioNq<]>aPckYXQY%8m[4hhM'n=>.PFng"=[lD2%;1p@>]p992tW8_:=fJ(+q/&@mc?p4Ul;OQQCc_[.8O#lZ_Ur#uVC'p8Dq'RY9MD5bJ=dnR!$"?4K7%>)Nmb-*od7ml.G:D.\g-M,_d??^Wq-%6%=k2T>5Hq=SERcCqWSpG?^3I%JKHD5i\5Cq!ITpn!pFI2(@ZpF6N[a9KA-lRdO;0!\=n%Bm35-TSmXU.5pro[k$$p#M1*`WlW1C22Jn+gV"BU#eg-OW<l^5[5=T9[:o2CB591i2C+0QPBo?i+rahuDcbflc:'XCmuncMD!3o*%,]!Y-dILPRhHFH"&V[PE[]sIP:Ne.lOhsrJ+J!Uu\u!Kfm`dM]#km,gOIYf1$gb!?'-sgVG^+=Nj_THu]peQe(YH@TD.'Ps"8h*^%p-,Y8dKi/$2NrULGiF2oOSe`/^F<_u<EF$(X7j`BC2D`h@d]`L'2u1ertDq]LgO70:$q"e3VTYlH_8*:qGDN,0sQ=>'=GM#+\ltc%rG=E@\6Il(QrQ"M+)XV)0o))r?(Vep$_7*4NY`iuUXnl'F4*@g^#V6SCA^-H#X5Ct/En#+raQj'\*UhJ_u)_H]uMrhl!i!s)uQ'-%0-C"]W.p)G2#Kl4k%GFY0\KZ(K;h>n:W3E;['4sP_ZXEeSrbM8Z^Q.o%@sMf5P._%E_Jj&hsrWf`AC-(?)OWUdh<PJcp"=8!\k,l%]8P$lB$2n<#u!^^9.iB`p8\>'BHq$-F)(X:fd_qAZ_a%DER]u=T3%#Kl*QA9"s'Dk[2*bCOl=K+oP]UeGRPgLnVKK[=*V3:!B1kh%kUZ#;aO"D\<UXg<\,.s:b]GZs+;,<fp;?8]%^;"L<[/NYO[8<S*NM.1`lR(KR#[cH:.BtjbFeMG)*WF2?3mJ.NXhjWo;j`(?t1]j%e$O8<O&fjS)B"X3Z\WAf-S7fBM-pFS`AW=+0A4E3F6TmtE_f/Zg'F/ceF0RgEP#DGK/#-#/DM8R49oA,\0q;f5XpK#XMTU<nEl2D%bf@</$*e>>5e";So=#`UH-3/C$'/0P5Gu\Q)B%8[;]<0.6#Oj2>g'Hl,K"L\j,=E6m4cBM5mR\"^<gV*R)%N&>H<S553ZTg^pOmL%$nPM>%."idAqgh_a,B6]Bs9L/,D0>>Y#C1M2\.f%e/jikeub(.Ua80-M4iR4?i.dRgtl[@&qg$91<dsaj:&GYHOZ&mSYZNN&pIBk%/;DC]3n%pGs!-B_g0&$4j?$8IbeR(7'rg0\gO#`NS_7dV+=<g70T)eS1Q:J+IV)G7Y#EY$JLG3(\V.K^Gr*)qP7+!U;St1>R*!b`%\iO]kRcl.Ugf"ll)qRJsIR6BoSX,$$=nu1M+Z\9MmehppLL1IbkOQ]\o't?#0)#,#O5#XX/Ibb@Rm!kISj1%h9(hmgm:Z<-/8E)A%%f9S=Q,drLg3QADdjOpe[c%YGQdh1V<l[pEZa`%UDOWl<_B.W16oI*ML;D0f2/Z`gfODYtECpn`*a]J/=89YG5\l')^ZG(k0nA(+%'Q(sSEA8DlIfB$gQqN;eRo_>IpD(uho%52O'>bX&'Qj&tTTcB*9VFAmIo99,qXlJ<cl.,u(^UfSRd/RUs6?q"#<uFpSdf-(ofQs.%d>f'^:qB6#9e>`2DoD8X^hG6Dj]J^oRbga]P'+AT("Oiei$O]E<SV9Wr-EoPna#A:_ma>ZM.eCX<Q>:AE3gIBT"KEdg8+=4T^HJ<%Cb@<bU6,$dZ&I@]CO&;k]/b%_ZG0lc2bdQ%%5OQUC3c&2/,D_b/UMgH+gPQ%E'h9O#h]1H?+WU5J"9%MlBJX+Tk*+=SuqUeZc9Ui%XM'Y"_%4Y8iHKIJn=RWUQ@?'EMZ;0mI^1d^J%kgQ6'at3FDgMO?GX[gV,,*A\`4,4-Z\_Th#9.hc+l8ZmS*F@*/@VhLV!N'VtlDI%LS3-)M7J+_2H.g7B>fMC8da!L]kMt`p4'T?%=hS[`a0e>`b_Na_NX_Yd(VU]Z*Y#hV:"C!#SqSCD0b#;@a&=1*-bSP-I$WI!oIE?%\N&18M:,o3V^C,FHQ!h&bKQIKadEqu^IBoU9F8lf6.N]:rouuBXL)<u_D?lH^7'<Q`A[@?P5chuH1G`go(`%,FQ#49>L))2NJUmr%rq>HX?GCDRPs(8Th=?/'n#MlOM76G`@roB0hrR8W2ptDf=nn!=I\Ql8m9&V&rB?L>>%GC_[i@62+)J=E+Y'qjemjq&)ZBKo-[iCI%$r2pGCV86>5]$CBi?.hK-ah3MecB<98^2>6r2Apu[P[ob2PTrpC42!5h8,>%pNpdnk4@on3efC^imKAZDLNlLl9#:J+8GqD'j3ot%5HM^+Egu2X2X[.5mtfS+hcUjO6f*sUL2C%2ZNFhYgN,R\H=Af=P04l9O?;El[;PUFa+^Y+KD3Fd=f>n#OOf=D$A\1?-1rNb6Sh6I%^O>mfs7>i[cejMTC<pZOb?JD"r;Gp$qTfZo?@DV;gW#<:n*:MADhhq[AsQf,DJeK,j$WFYeVBhI0k+deK0TnfXdheMlnEg'XY`3W%)dbOr*6hhI4pGp@>"T)iS+D%!B5IcqJ'JLan%C<-VuH\n\%Me6jm^cXf8\bRi.^.o</Q.orQT^^Vf1&M[r^$]lT_\=.(H:5G.8#o%@K(:ml=Os]BrCa6ODiF8eCT2_NW38\q:FAonTOlUX7c;Mq'LSZ:RZ9t5tA6p:MAbDqJVhGeDFV>%o<.L[RPm6Gs+8JIIRR)[uLDM%+.cf!%VXFgB>`c%^F]jiIm<i=\""4qj[Q73kJQ[bcD$A`/9u*Z_WKBgnauZ2g!_3P,\7)KZnWErorDV!`ZES.)ACR2S[e1e_#$nX%(#ICgQ8iul/[c1UmUk9=39)9/g)r=)qWM1?a4s^g,COCZr%L4km1Jfk?!*Qd[h"<A]*mc!ot'n8]AI6ok(hd.rSVn71!:s4\DQnt%OsoW-2<jLn/H4tam^:IN4JqMYYre^@dDgV8iGLDs>$Tt5T>ugL(9%hRKdLcC3lsBHHIEsP9tQ(jhe&o/m+/_0<]CVM!mVLRs'4O/%f0U5jVfaSb5HU!96YgI0>_<]jiH*ghT7t*cGajiLM;loV4*i=.h(Qb-^tY-po<YL@a.pu,=9$QhDO+W]Im;oJUfL5<c8:H6J)[dt%N$GsIcMd3Y\N=@efEFiLFZMQ:O2O):>>N9#?Pe4iag0H]FnD=T%0V!CXn`ARCFuEhM62d+=fq-$+LTsq2a-lKh=ee2`k^E=ogQk.%?T3b<`YW!ig%J4R3&!FZneg_El&JD[P<I?Fl#n]fkDs^m]&Q\ANKs[qWX-87NBB,iXmCo6K'Y!g"03U6RBTe"%St^%&eaGhDW.o]%V!n2#Y3a2r-7o2!iujfdNp#k=D"r2?QR-TI+b3KBT%L!^S'0F"e]@L)c_'en-@GCi#@>ZK^^r(DnYhH_D^'C5&sb^!*a*dB0Edi>%'a!T1A]>r,Y.rg!4U6LR5+K]5Z'*Okb;bZ;+'9Wn]KQeuk<B/to5j'crqAu3Lr+F3MoEAT4mR@j05QPTIN=Vnc``DfX;T"gYOTLD%q;M.Yj#uke$$X7>I\4q:4uG(e^M>&-9.(Ah[#69_kpKe:#=&!]nZg'^DskSp:QN[XLpHu_1r%YWko9O1dHMaae)pW;k_O^r1iM0i%&]K.Q]s62,5A&K&iZDt..c6ceHf@f@/tX3`78,2fOO<ih.sP4i.ld--JbjK0YCOCepfmbEd!5JTJ7qXT&saa9&gg*1L<n*pLhGKn%^hCHn=+HsGBsWsa^4aJYYM[StQl%9Sckk1)($JEg($JHQ^B-%Cg?p9&#qW.WpTSuN_ssqZd;IOOip=L`?J$dg45/f:TB';VO"\Q9%-.JhSXol2CSsd&I)gZGM?V!A3g.2U.0-A2[,1/a8f@TO"!==kOScj'/M0:u?mespR5>*3uA+Dq7pc(>neW)n+=5HMX[6EFD2#Lem%0Qbhe2N?bM)7QOo98Zbj2^H\7JrV+f+9:HJZbOO%ZFaO.)S_aAEL;)D'Xn_d)oLqHY"re&U<B`kMsR>/,nSDP7d_C=*)>Dc2(n%b%*.d>G>F>9jc8&O#r5SS9<%Q:9].3L1D]s,,)Vk3:mQ0pkTa_(<rn,k.ESN<t13*.HqT!ACK%7AK\c*msm1?:?m^LsLj.6FkDsXVC%ZZ/,$+Kbg1jA^mlf'P6Kp_;Vt5\LRMXg*kTf`uL;e7k:iCTO^Rn?m=CEh*\UCbslV+7q$A(Q[(Z-h>T;RF%,LN,S%&Eup1]Z]X+S%:2QdfMT\eZPP;_HHcC"<<k45NOh6#Tc)96:mjl7>O`Bu.rBZCCRBF![3qo8fm$pkg0t$R!gu8Q3UAN+g*FqD7k00dp0>:Y%n%El>%O]p(B/P9GGXMVj<@8p@2i1`9,r`;)!.[O0RPAES`.i3\Oh/J=fkckEOk-BlFFn=PfN7E[c?^lH:pNu3+)>AV/DQQ!p'FRA8O*,U3%@./G,SRio0:G_t\2lk5l;peQQG2)W%35kVtYkh>@ejg.j\h!L>EpXMpLd5bZ[*Q!&pHh`KC!5J]6_?7Df)sLu26Fi#XY`_bpgHMK%BmF,]*6r4.bMj:DgS#tK4?R5]oUdLP:Y7RZCkiU>\XJP`BO5sJTRO(q)_(gMaJn2*7%CmDK3\hFl%\3Vm_#l0-as=V5A[uZRt"Uj%q>9F>[C93Bn7''<SPb9HOZ#AubunSCf;mQuVCZ>&Z(+L'LW\R*fYbgi=nX4o\]!YV2!3=%p/V..^EO!Tr1OR8lgGMca^CJ&+es@@%f*f2DU#cL4I<i,ATf$iR4Da(!'+5DO+)D('2W5NZ-BC'Rh+cA2G'L2B'H?qQorL&p`_D!IqM`^V3?K9H:/VR*9==nm`Ge")WrKt$%/Au$p6gGHhZAI5J3oqMp02D*seE.s]s7kp/%U@*Sgg!#B\pT4+1uD?JrUG<LlIRR%S>bcLD(JEH5]DR5r:POTC<q`RD2$sG[I722%a.tUK6HI=\\%ck.+F1`miR?uY],1M=iFa_^P5bpRs7"pI(^a8,UlpE18:^,7f#G5e:cLYGqn4oYIV/E=D<#^/p@F@6(I.q4BGSt\%(V@^lNM5#KC&=LU4s(]<d0/p;2>o?A2pH[fiVQe4ZqUN"ombA=NbUjC/b1#6L?K^^S:p[pW)-nps2a1Rbj^ZIb'6>I:k_JEn3<)G%(jZWX13b#<5P2uSrSn8Os"tK$]bieY(CXTCYG5887eIsdj.SG-l=$1m>n]W3EDA;Jco23/9MtC,-7i"k4it"6/_9&]#JFY%$tqE$%b3M>-BABU,M8@=d_k<S+=^#QSYYrZCTL%X)kdRp$\Rh)XUEh<He53\];W,eHV1o1)[uA4N:;<-!)Q_^l`Um_oU=@V!jd&25O5m04%dpT#<WX.ms6up&=`QBe.Rh_d!>7<+:c\UCDlSo`MJ[Z4t7p<%mf>[E<Xm]=5rgWnIe^2O`gE/Z[`rOG$2-tK.[<-(uI-C5p0>t^n%&dnn7N4.^GM<0@8Q49!Z3^@.hOMml(OMmkZY-UD,;t1ueh7klRES*Z/WFnV,8>Sa<O$[Hl(A$3OgJ`-/3i#\!aGP'Z_u9E,qkp-m%Q'LGXS^U(nDD0Af4"#O,l+DC2"5eUd^b9A_=^=H>nP_-]P`Hsmd7KFsMR[]LYo$>/1CE/iaA0u(bo0].Ol_GW.]u8k%t-b[Ol#.R%$PdA&O(gq+4UofBlV8[LcA]k'nn+U&<T_l6IAD''aL`D<8'gD27S;3`1ec+`B.R$31*5/gTn?8qc&6V[[%?GLlEG;%rOCb3UNg#o%o]eTB0'<6fN[+nr=V-;b8`Lr3E'0)6)?f:9O<>\fbi`YE-pm.99p>aK[C@XME>!Lu>ibRZ-uqi!6ZdNsc=1Kn"c<F57u:PGU(XXk%%5_kWQu"!/DG@'PFou%m1+poY:Pef-)2,r:SAZCp92$amK=',\U^[u,(94aj:R;uG'^o-E"'PA<<*(PB9$GRis(5l0@L(;TLr-_q%F-`UR'\$XHGsh3^lZ&5"?de#PN4;B8mZQ?K`-k2Mc1.9?7"A/\4#fP:dCmY3)P^$!JYO)L"Cs"+]\X&`O4c7u<bC!=:3C<(k&kQD%H:)"c(icYX]e^%k)'ru0QWqm=bL=gHjd,%S^SO`tYno5mKMF(J6!N^5]V%',K3>";:QWH7DpVp<4c/ES.*Lq1_LYDD+Isba,GA#/%6YMTn)'-YCaP'[o-t=;EMs100SA>o!/C'qT)G5Zn7@nl))$J9R;7T_>jGm,\IY1tXDI@HIa!#Kj@<>K1TfJNT;F-,@kI78S*(@-M%at:m0IS6<q@kVUR&V!qfm,,IW$bX<-<a\4f+L)1\grI8WU"*/)<1*o`Qo5$8OWks'!o_<F[*5I/Z-Lj;70LJ$q34!pqig2"7M9!i%9.N^c-$^Y8IX`9PF*:NkPo[E3<1Vp>QaI]5X<MsGAh/WWC^L7TNK=r,N?CuRE^O[,,'0./cp$hS/5^f]7;\p\05?FDM\gM0@W'D)%$(WVU_8<RskU;AsH@msD#8S`OUl=dX#RNgK4+iVo9WEUMBe3Sk:nOSEP!MckGg=3aJf(P`6jIWK8"nP,61CB^Q##L+7T6>4Dnq:b%%4n8W6nBrM/>glA8qjHXRRMadmC/$C5Vc0HTm>F/kYlli730FEZA,1(G`19as5l`j(InEqW*R8Yg0pf2PO]@8S'8aRi574mA(("n%gapn7q1_0VqlP[,VB-WRVsXkP=G4GR7fp\][.$0*#bJ?>Z)tZABM-g#%=0b@JJDXA^@j9rR>"g-Ue,;1fP=X>!u3'kX0gC&QWe\l%++$#G$(V=>0)XgIZ%)@cc=>;KEQZ[Ac[ue?Mhf\g?-m?.Bmg2"/.47bi?D@Q3_^V]X,O8*:kdeaFENrp*$G^RhXHoOk\q!jAB6![%_9>dOh.[#<fg4:lG2/B]F`rCDe954F^aD^Bo'<W7--\7t1ukEHVF;Ji>=Q!t]nac?c/W+tTAj?6BlhYr9A3kTi[#VaYnkd'gN%;.%q3Y8T$)'4'4?HP"4Yc.7M*jhBNE&,BC$rGSFZnbrB.8*3pP7o_7N<mMESakkUasG^me<WAB$D9[D.Q4T.95OiBNa%!9S#O%=_efa%2QXqrU/aUMPc,">9,q8`iNR>qo=Wu/Vtn);k`&/acNCU1PBp?8h:]\$8<h'.#RQ\]%T=QE1*8=F,'F63U,82'la<Jc)PiKkaWe;\%4Qg-A&X/1<-l""M_?KB(dn$h-NQS^#AtpeTk;R)"B*UmePBK3<K8iEh:tge"P>ZB9Q<Q\9JH`u"jd,%S^SO`tZ$@Ftn2Mrg5)Tl=%pDIb\f9q<shA7cbZma(f=mTM>eIu-P@1nC-Qc'2WAfO8ADB*4T$1)hs-OC'9=:Nro=enWMV%T<W[7]b$Qud?XTKA@8(a<NEMDKNK%aKS!%bLUfJ&3Qg[j;OFP4$qJs%GECDa-G&9o[Wo$%]qD(`3?EX<Y-BMq^lkeKcs83XPD5dn$hq'r\$"uL_SSt`W8f3@_ba8&f(\Y%fOK(?^e5H\\-#dVh@#\Q$pkA'&RS9&d;1="`564;q$?^BcY8=JJcH.KUI5>Q!g2"*VibT9)jP8O7rB`_b\ti:h$ttZBf+nL.rVZ!%n#<.fBpt8Wm!_S]L0-I;gsS=R\+FAu2FHYaOH.+m:DKRoS14]P%>O7Y9EfidQ@E:(_EWX*%PcrD6!0p@:(JQorfAL6/=o.P=J>)T%h%^5t>l/uh6&!e:pOk2S*4M:MpjZWBiqEu`eQ(ZS\*Gqe1!^TOk@iF\SuPK1%ATj+-&+eAo]I$*RLK/H:`,GW&kRDj<'U[>ET&1#%i,;F0UAa9uKVkC$HfH&Vi%FeD$142^6Dl"rY=Kmk1_T1HLBe/nl1S=do^pt</^9tYT8XO?7mt/"c8Nr\`qFHr,h>U*M+V8#8NdOs%#;k\M=;s&$,8-)jYXHQ"\3"t2@hHtV#3eu/I8(:%SHbN?DbRU%*Od=oSR&S1;@>:,m<KoB;$Cc'/7H)`AK0'qbOQoiL(u-U*tW0'%4+p'hqiN.1jg?9X?l@Tpne(:cT$nO9[F!668i3/,jaM[tU$(40Cb%Sf6`FXG4DU,[M?oma#r1ZqLTRP/Z.oeA<>gT*EC%2[,^hjh%hk38K'KHqHP5;:o>X;Pfj<<;#T!K7S$TKk'8gL"(8a,oHO_2iWQ#1)&DCJTK-f6sob72aj:o4)d*Q#r/J@L,E8>hf3"!Aj=kA4\[%#[Y0DX3>Ja%@Lc29?0EH=0q$T$(WQQeLd1WI-"[9)JRd8!SLLcba(qJ>!1=PY1GWHSO>1c/n'#n]*1`e,s&=^6BF0[S^dUtXd.H.%\D.;RHr?^!+l&PLV_M1I8MV=W.$=K[M!e";h5klHZ>Js,/Y21^b`"?Zmmt8bb/usU@s\:hij&lGI]+ZQGRUBt7LkQc(Kn:K<f]6h%bn>%^./"A\AL&S"nldl<X<%LImWYN?RBdlsD.SK>.9.`C;i^,l,3-V3P".WGMa@8uOs(qn<!\YNW(Vqu(`tgBUS+0DQWo1:L`i=Q%7<F%MSAdf0%=*U>3os?)GGgR8bo;maj\82M<G0?nVIMA6+pjN+d[9j<_e@H5RRA&"(ls@*Uff#M/`+>fo&d9ce-b(W9i@%86ZdhS%M[:.i1n7&bORP035E4$2DH+'0*P%ln1-_?fIJ,M6lO%=K'l7m\YZN[_/<0kj+s:2(?t3XH&[QQbNC'Ia3\-HP.O>r8lB@uR&`''A%B/,*b:61R4K1IH+5E.L8hPb6@D`4%^FacI=K(ram_<27s)a]?1@<D2T4!5e@@:N&R>,S`HM\*1TrL8O,8/SVGCRRNN:.eJJ7#<M>%_]Z0p6QVe_]o9*Eq7Bf$7Uqn>!?365=in6Mn1O7eBsfHLWI#J,.AR28j;UMFV2ULD5n];IYg,eT.E\b:iZEaB.9T(5LZ^cN7)"aQ%M70BLFFP3Cf"=l5<o.Z0(.@mEd[*cTl%DI\:eP.6,:t*:,/ZfW/4X"r#\8]5F,3@S!AknM$;sip'HSQUkl.s=-5`;K.MD$8&fn[j%dJ[cIc>u,ugWGQ3;QA#<Af\\L.8FUma"hE@b@,V5\?rgV`A8;Ui$](f@.\Po7Q`H\MGB]j<'DT=iVr>:`A1V_,U%Gt10Wd*WBZB`%gTj9KC#qg%.(.9[B2/"i2H(Sa=Ch!)*EL7t#UGAE;b6]j"<jA2&:A%#N.O#b:i:u3SYANo,.^!ac=.ADTqd:S,)GL0+S(h0<3DKF%S#?M<rN5R9<cOGrPDN2]\K(m[FMqT%LfOY?_I!`pK\P9+(^'uU4S2iD-7jO*#1/p_;Z^C%1d$g-?:Iu\9I',*A43kg*OI+lSXL.r%o,nUr:(W4Xia\s>-p`[QH.\R5rfci0aB&b*QlT`!7^-0s&g7eEmUTsFN-_0t53,Qbk$,c\f:<+6eCJ-8NU4/,U$CtuB2\*[*5dt#%EOh#e["lK-8D?In*0oWiW9#?F;.hdhTLk2ACO2Ct,LUEBkR!927<EbESAg9p81RC`"s<?Hdf:GqA$V*,\S+=[fu`2XJ4\be,E>T>%4M/Le"%31SY@.J/%t'.Kr.o@j5q!5.6Z?^*_CW/_i-uO>PRM$t_fHk7ADG=(U>;2IWSa=6n=1A]CZWf1;l\,=AfXDf.h;#-%bO2/%YaiE..5,+9d('O>($I$M+N.2fLHptjmRn/gXWZF)ThicS\j(I8A#[DKHBcj(Us`.j)SpK<<2Pp"\Y7M.5?Zm>BbrboBMfO:Omr4U%=>&m+6KV*q\!l=t7Y22L;%CF"M\3m.poS3[V>Qj[A.dXi4D-C;RC(D,;Gf!Yr\T5im&4_ND`4%^FacI=!#Z_P](,hu^R2B\6?p;@%+ViA)O#''/PmA!j]G!.hK0["`=DjD06.@,i!9jn&3@$/=I)o1,YU!/^08&1;1EtGnRu!q@R@:5EOL-,M'r`qhr?[Duf0X$+%,+r)%_;(.ARRn,3-jGgA<l>8jZ)n;jN*f)s7uY!r@3f+nR67Ar"lc9IqU:7dn7>S-Po[E/e1s7`AC+pd4An5p@]a0CXFSWM"b!0e;$3b7%,5O*F[YQ=?EJDeJ>@I/,'RH!kK_s5:9/)n[i_cGD#\*\[Ls0%`b-nT#\!3oa'883h3<?M.87Q/tmBB93nj&!M$UX\-&=OI+%Ym<c%1Z>15'm18RYtrIc\j(I8@p1h\-m^'qHMqQR=n>*o>M5-C9%EaZX;,^`h';f;Y0.Y0*ep35#;:K*GC9OG2JE5BPsI)2>%eoFiE?i^%N/A5o%uDR@c,8Oe`jR0`.41p_7t,q+C"BpofiE:WQ;VjS4R5hKK5!m(EmZKl%oXbN5s[ke@SE[,OAleYe$97=+q/QqX(t-SQ(%Q6%/>E$*k;3D;"2o7NM1,fkaR;nLc'gR@gWGQ3;QA#<Akap)TpMKmcD4\pTS.<H.M.<,IS^FD#Y9Ucl-pjn78sds\Wme?Jk*pM\3CkE%`cCmJNY7s@)Nk"-d]BuV\Q3n7Q;VjS@M6nI^a_fE>p-u$EX=#pU@LQii^,qElfti;#/m#L,iqLW.)QZ@Ms0TI(Lo1EY<5-n!bZsp%noqG&%ELBrjrm-m'9hZ)JPo]6P=Vs4aC->A`Cu4K=ISJjj#@X(`1>O(1^6ht7=VYG#SF2b;K@T]:S-#PcKf;f,F%3#p3RGQ'=L7`%D="2YQ'SDkW\-hKc`nR"LurqI%mudcNjVF+?_40Sd,H<cQr=d^%`'WIOBHHi?)9iDP!sJBGg=2n,]A$o1(cpfr\W')H)%[I]\-sj%ebP&A/;H)`8U_qJc*#5l&^n-[Lhb5d.n-WU>D/)'EZ$_9>?.]pO'O9qei9]N+V.D4mcIr6)o:NQKYS8:!F0ge_/jcr[ZqlBV,X!k%fl-pY9:ge__Z=!k:d_@RNX\r%Of-AA`&A[G<n\t[kW")So*blVcRI)VN_CqV[+C^84Mu_cA-ZrX<MsFK3'eOBKg&'`j0I*8"Ske4%<#epA,_\UM]dsc1@Z>'a;cmp+N$V/-T9;WbJ&8fS(..:#lC(U!P,['*7YH9U;;"unjH`\dIPP]%@5:QZ83,tm_j$B1JePf<Gkjd3%4b]Z$>n@ncT1Tlc)b'Cn<Jcf+FEd;G`?OFHNY8UrQlREK3t7"H?B<2do&cYQ<G*\#NbR%K"c@t4KX>+`(eKEa)!^U@6Dg-6+sS-P%N[?]@$m)Z)IOc_@Ouu>PdJ`#a&*(<MO&@BgW*XtIM-'@>AQsGdd?L[&_lQEh_/<?Df"rk\m>r/#bC$5oq&QMp2BERI,*9!9JS#A^%L[pm!qLEa#BfJA%e#`?V#G#$Bg(E<?;9%O.LLQ^^_$c+BAGEJ8E90A.Tbe$gqmlp,.6^1^E"rf"\:cO\LN#6W`:GNHn!KY2//$W:%YeQ=9i=YVlmS0;%(d\ApD&fA`Rl9m8dn$h-#%\aA@9YdXWQA;eZ:_uHPmTLbY_;+7DLdfKPK9.A85dd^:cSYkUI7e$NFL;p4[L4,%h2.f'0fkMl*BHM@++i1WhDEZ^H"4.^m'nX@lKi',`4@aiPVad1'>4VlgFS4Fh$?b]0)4F?:a'qfaDV4#0(p#.+#++e_i3;Z#oV"/%p#blo2^[;%NnY2Hc;(`9/0\c\K]XE_rcqU\FAQfu##ZkZN_(25Z7L3UBQ7J'qQ+O&HmF\LT9;WbIsB8V'RY!DV-&ZV?@Nm@3jt!i%[dn%*.95OY1)EM70fuTI\1-)LjC:3e&qNT`0+#"%G_KCen53U*/Np(R/%?!"cK$C!Lsf2,_fFCgiZUeu/e=6Er>A#!/fBpiAOgVe%<Tba\+?K<J(,1Y[q\Pfh&/.5((SV.rqV^&A$8)_I2hF,`+7fnT(,=r)LKUC;+_9tD[PuP/A]J=ckttY?ja"sQ'CGW_>&]jbHei.g%G"I33'C@PbMc'QY&UAB_&<%a_19>7+RIkMmaWe;\)7dS<4<d'3$0bbl!]4]LE(h30MkS]NM'u*p=-8@+=!0oog;dSiVS/U`k#(%W%7>Xuc!YQ\Fg`fJD3g-l*.bAh]9?71G2gNVVL^*P9-nZ+mFX@)0Z6Re7r-9u]QALI+?I^88M\VaF'I>"nbleb*YV$^C;[DLl6j3iQ%1C.g[oT"i3q5rRn9er?(LTnP/6P>6GpZTOLJ*29!)SpK<9X^3,\#!&q)p_UUDD/LRK,,gt/4Vu23Y3#1$snMf'dXoOE3-!,BFKbY%:>r\!?rZJkZ:JTG]+W+MTLUFG6.,!O2<(Dj.bi+8NM][G+4$COmR3m,;Hi<ee0QY=Tgf\.OH`3?@[9jX<#)5'K%h4IUHi*,Ia5BR%VT?_/$md"Sro?)!_+(,&BhBXR6r<S_Ii<%P]MY(tDWHOMbP[=a&;7;@O$d,WWt$%8,[Dm':(ljG?!38F$BT=jUd7BPTX,g5>FG%N%NflhQIhM=L0t7u4;)pJ09M.HnrFnZ!'g4&$b)Y7TWm8rC1/l\5:p`ho-k+>?Qogu3!KuIc_F;P#Jn\(3g_rRSP!rPlV0)!Q-0,*^%RlmQ&P(Wq#N''GJ,(V9$Ff,f`;"^Jt.m%WAWB**Snto;u-(^sV@E(K"H\8-Kbd1_d\&;J,2O5sp)iVqAYSWSq.9XSl\pR3<;i[$G%@CcB-V9=k@[dn%*.95OY?Q'N]-t\t3U;L?)0n)tCf18TRp)=cu+C)h',$NucikfV&0/s#CFd,#,fF])mlSK&=(XSCE;<,@h;JSdA%UU%#ga=X7Rr++B0"Hd`0hitGi8f4%NK0h%:_TX*9J0_\X!mp!>8#T\odO'_RR<hgpJ@guB"G<_uQ=!94f8`b\R6g>4)3JcI#Akot%9[0fHN(kpd]lPg=iF+!&0IK[OQd_*7?5=G(;1W,T#jlPffLhC]kNnh0Zo3(E9HaVrUB%,6/9RWu0m;b8fN-kE25TS;G_1`aAO.k4%^f8VFfO;,mOR!?DKK2AV*:$Hfk!>/r6*QjBm:I>'C0Te'C:'3FUAL.i;i>Wm"cj9JBS5OJ1t&INUGAtLfr,ZSpUA!?^2_('m4\]6%&tJ;s2TWDd"9q96AidRd;F0^^0e$_)%,kCOP/6*Sndt4b]2AbVI52#)EKj!T(<#pE&IE4'UGAt,a:4u3q&*O[O@N3E,a#_m%gtr0%.LPn1-=#=Pe5:h)?:[sj%ajQV;JN#[d,^<DJF6'PC5/r5$cG+F.Kj^%:tLsun<=uTCLi1dkYrp1NmpM49&^[.(=B0\YnsBt^(Eor%,%hAE8*[Zd-3i(!ZA@qpO47/X!!QEh.$8TaWl"4#,CZGkCZWf1;l\,=3*%@4D7g\eSJu1G9M0"!iA^tc>R2"b(*hC632F[im@l#<%8gJQ#UL]M:IPQ[),(Y$(&sC&9d-jaTiXO80ZE<K7/Z%b1KT.E@aLUf4PR[8h=@/g6W"^coV-unr+XGPl3!KCf#t:6N=p:'.kY\XA%mSDJt`F-K$FD)d?%TV,M7[c2Q9X^3F(T(-%Rr%4RD[Qh^'&R;pU`OMpT&S*VYnm_.CGW^k6jAf[BcCXC6?$HDTY$AB%)cjFNXB=?%<;Bg66k0J?O)<r)Tug8GAYb>SKjmC23b$])7dL/@Q[f2M!D*G(n4Uh2,P)J/+L7`k#b$nHkr;**-BD:<S'dBrr4cQ>!_=Gf$qE8H%-NOi3PEMn7,iKl3'66sKK-<@YLi`niRMHP*&K;ud&0YZtMuX#VMSsEJ#kRU8GmO/B6Uq8H0Kk1F=@rT,s$FIbNJQkn7qGoXO]tH.%q6>gI-HNEO3);\:HlSKW/:o*sO:WI+c<QDc+L*o9/OCp;ij[nmnlpZ2-b3$p6b#@+:,"685dq@u=LJ7^68\WYUfhc6EimR,*Mr'!%Gh*`6,^:#We8)Vg0Z;/0N$]*6HQl$:%NsM=0_hD2[m=[AKW-6ArDnc.STpA-@f!u`(.6^Y[ka0R;5bi&qD1[Kk!nH9g"BJ"ebQIo%%?=Yq+\;op@VsMJdYJAieFljHd9h[PUS9+OPQdM`!fjZdRog;;*>K+CT'.=*l(Xl38g:P2XsXZ8CMku+N?,3r;Os#if..!+MGH/Z%q!+7[Q:[HkNke]J"X3&K(,0R/#&&%o$!Tr+)d5X<OuX`ChqX>VUbUB+L7-YU$)I"(f9\rP,$tl%[^&9/Pc>B1gFZ6T2L?XUO,5!L%_B0)&Xqd7$N.S*/4-:FMTiJX'+R,+3,nD^S[DRqGlmN`[g%FMrC,[Wsb)Y7TWm7eWZ)4[V/1t/.M;K^lOuWV!F`%b-7Fk#OA8POR%CUBr!+l&].Z\AXEZa_S5PtTY(f:P?VZaFX]7rBc`bg34`6pG;J<(1h"q&!HB!$k+CU<64lW%N(a;MU&HPXjh93@].HP^J/]PNOcW%:FnNKRS][K;Jg=R1i(s0F;m/R9r2E9idl[W$4Sjakrj&`5RGU9V)&qqLo*^T7tM(\3FnW]Y7\m1aO5)ZjN!$%8feW1co["/Ou;8s%8e@]"r;JP$XEgSHXmF+\V<[tH`(\/B"*olEF1Nu6)/<i)">?j5m&pjY^,?b5P!qcsj%'ie<@#s?*[M?UrcHAi?qO06NtMaRGole[%BgcEkor)[W4*!un3^:Nk\MO;lM`B8]g;bC/p>qG;Ce]I(37S=1.9?h3/O(F-#g84#TW63`A.`BjnL.gC'FSnTM=q))Qg7BKc'gR<%gW5kB-<-P,M746X2*e9XY*S3Y)2)AJkTrKb!5>?`eG5L&[tIFJ$BJo;_=9\q$g<'#+cD2TcB1]:bNa5H&[<\HiRh2f/:nX*pErX=%Ote.+<TsWVMpYQ2=MZY`c3[AO:s=`t(*W;dK*_(FjeM`S#h=iu:WXfl5Oj,*N!mXOPYt)&nG:Ui0Prs&e&n:WfRi>d7((rf2(\[g%@Mj'O,0>Wc9-Yn"Ul%^5K+RA?R%lr),,2f/b,n!4SkG;!&m>[:O7?4=*[Mh?lh..fM<i`fZE:dmBM-hN@Ff]I&L/dM3<B'36OHBb%k7"Fchb&IX+kYS88fc9[_$D*Hg7[@kmSgB@F@=H"84\YIa:WuV.Y-qX!uqE?#@lJ4'*tXhF@8H<,lW%I-4T`N5RS/WiO_ntNfXJI%A/Y_OeeBsVd:@6%A6t`jU1kV_".5Z>e4i;6N3H9CW!k,lp1+/LaGe-IYu<>UWcR1G8Lll$np7f\d^9>-$OXECPa)"G^qoKL!@'&K%hbDU@i]=!?8L@oM,@U]0&NsYJ$%7"c3(V58,Ce,DFs)CHOU?Z*amc2:Zsso=d>7VD5tYs2=9?Fc(gsZig_r_Q[fEU6/kP0Y+9O4i%WE:9"L,9,=@Vp0c!ec5^?;DKt-*'P2+ZE_%V.ECK$B[`AQo2BYU50gha;Y/S&?Go..!-H'ptlM^o*buYVQo$9N`S3C4\?KPmN`4g%6L=:5#\h>Pf:>AV$rIPX[drRT.90u8.?hIoQX\qfU`>T]6`emMg=Zi!"04U'#ram5pW2Pg"@X4"%F^&bUb)(m\A,QrHGgrYS+I4]%6J"#5h#p2"E'l?slsL9fl@aDJYplu>#bqMEej5+I.<na1(s!+FV(+jb'CQtOn;tPXq2/kgSe7h@'as5skTLHDl/N45.\TffE]n,e%hkqNTC#_oRW)VrubQo@EaGYb8)/qp:K0lhRk;lQH!1U*3*D^0r-9)hIh7,?_Q_QYm(=5576NSQ9ng$D%.LB-<0i6Vg!U([_)V`8j%f2ATn8[`B8'3'$`IW94P%mrB\-<l1g%7*lXE#GfN*.lFfE.i6^KIl118f#hQa`AAQ7urY4Q;SiK(pC]i>SQ4Xb-nT#\!3oa1UA^l%$ca"m`&$[G.B!<)TmM=;KLHMF-o:K/M[66>ZJAh;>"Fc*;=Y8SFphl%gR1P;Y'Z/lmPH,/eq:91m(b3Lb3ZLBPQl0e*4qT@I=tm"%i;Wf_PR!A?N\n43M\S:&SHL#@8@E@\29ZYPIrdRHL`j56O-Tq>lPVD4(kBpQ)2`9@`bL</B#DY>%W*N?;\J](Bau>=BeiZGS6$p#%V("eGGbr'ffd+Z#F'KAXc\Xb&p2Aar5GOoGD"!BT-?\lq5Pf;E`X]sEZ"#XZWq52qaMHjjgRX7eZ`kF6Z@`<,.bO6YB)M>4@Kc%h%qJU\n#mn'0!gj`X8\RLY.+l:W-hN3"E?R)-"%=a"`9TkpoT1)MC#b1ZW)T\4F,Z)t"d`I$'9n,kaCc!d&i3nC&8=]Ej\R2WT2"fj%/^p+'8rDRf)A^]un3\+OUme]d,2o,j)u5ELM]RZQh%%pGW(ohW:OiR?OgQuN<Qej>$.($;DSSBN)C\e"["$O[6EhS:YYC<dV]$C%%(,0#OCHdD&'MB_5^hhbbrj,aK,LK>%![,lO,MnTjP[hE.0JUP_*L+_D-o,ef0LLIgL-sm<A/g%XQjT%uCP*"8e&\:n!SnF$&M1k4%.7Y\]?Ne_=Bn3[h*fXmo9gMb[h35A2q8Obq)`<P5CYiM\ifD_H?A&rR(`=T,>F%R^M`iZ$!^g%C:WYu65Fi30=<`l+*i29V!-%mN%6k\q[W,*tGE_EAm5@\o!(C5.bY06@>69G$@BKosMBV?IFljll:LPXbP"A[PU,+Apf8f#ONe\oM<Ju_BjP9`Ar^W`Pm\l%-]hJ>$F%lMO?$;8Duj3?ei2UiVPQQHLk_S.Gea$qM^9/7p/c88P0GbH2sCm!+aGUAL/%CFk`+n/eD?eOof."OPgc@B#5,[O"kCS4m(@Wpn&[%A*M^b\6b.Q'WEc!06&TM,ZeLFM8d7E'QVBQCBYN$*r2$O@eu;O//H+YjX>-9SP4>-)+56rN68R!Ag<ODk%FTu3e\m?.PTI<Uh`T?%_3?:?jKJak#pR*!<[6V<P"9]L$=Z"cX'81+Om^.5BH[]7E.h,o14%bj7(ciP:puWJ(JUka]<XHt?a15^Ll\gbiWO2T;_!S8cOJm7%"0Rn$oGo4g;0l"t%&FB-aAW<L#mIU4BuF'X>UqmV9;ss:Z&te40J>[;`>Yq.N/mg(;SmOS/'>qDCs,RN@a>$`nE.ACgEtE/0N]e7%:psE#O"&Rio]SPYbS.`INCZC)%DLAp]SU;oeZ$Z'LAa.G)iDA+b@/bpf^b0`@Xq^J.F,^S.5ihG$fISR]#K8;P9OVUVd]YTPrrW_%:dTaC*U$0WVIDVC#bEgsEim!2KI44=4>e]gL0:C$o8F3bAHceMpg7f_6)&'sZHaR/2:capdKGEgLb,u&4@#B1*2H:ZNf#a/fT*%]%`f7qoZ(j0EW\\+0$Ps>X?Be#)b3K[.RtGRq0hgeISjdoLj:T;PD?2X2.i.5@'3(l2*Y%kQY(::!<#uT<Yu!t;HJ*G8!O`[-JXA?=%W.mic3b9fkE_ocXLmgm%,A4GYja(*Cg=1Xk6oAh_J^dNd!+Do<M<4.W7g-e#Zcq`+"254E6Z0E&8p*W"96.QU?sMUe\cdkg+%g3'%)kis3EG=353Ink;U.T86]*<^lWH`rrXmR<2GiU3?81aUhm3gK8cJ;<=$ThB`TfO3XkfJ-@`%.M-R@Y2:;qgNX[ELUd&rRl4JqS.+%!1gG6Kpgi>6teVJ*hqX\5Gk,B>V[@o7*5qMhD?@3V0Y\@OWCkV<1046&uQ=NP]2J-c50CR&8.!>mM^er*&qdlK?TXY%Uc%YY)i)+%cq6VB-:c#W\0nP7$:MO*)kWN(8tR5DcZWiLB$Ch*[^!a#7&i'&[2Vc@E<X[3b.64iPeq$:TQFflGGT7>!51&-d4bPV#gO30D,@:*%h-,Pj#B3K:OG7k*DbGcu;m-+3HSPR+O3)'O)`q@nV)ftf<Dp(Qn1'L0%_@;N818L\A!"W`^GF[CJLjDo0F]/5'e#6J9rq>.9>gnC%,C[^#I)DSO&kTnif96Ek+<uLn9tUc8<BtcHLM%kJ465k7(@Rnm!\SLQ+]8@9mMghrMN'n(I!VZ0WJt^G8&Y>-qr($R_Y7qO&dWGK%ZJ9S4!'WJU.(5*oI\BZ1&C3+pi`;Xh_a3!,O[i:nbPEeEShs#n4Pp>q)biqA6Ib"P4=V,N*X<crYCr[Fr>)O`le?BR0l=QP#aO\F%Zu6$_>a/M5Jf(,5''l(Vg!J-ScEe*T\?#)O86)/gq48$)pmqqGXA?]0nN7c=PNUUQU[^Gc4C$4;;4<S<Lrm!).#5K<bf$S.\="Uc%5qTS^-W5EG$_:q8hZB)&EhA!g]W`1_e%mN"N"'I*?$Tj3FuZpq2iF=4EFCMoQC(8F+;V:l)l]&'pHgqSamge`J=u%(PkhFj8\OXB%=i:[JnLtul@4BmV%bmTl!+JH0>C!R&PcF=2=[6etk6gs;\8cmI&!`@l$ft\#P`\k6Pf*3:"%Y$TgY?)(87->raERu7-BDl"4r=@K%*$(TYjE7=3aT0a6ZE<Jl%AE(:9Iq!cK2iN,CV9A67,B,<.)L.YrDO7E2mB1g,,ulc!dh$NM3m][=X814@33GGetWr$p\4NBr;863%.bi+j72)[p:)f9pXto_-EN+S+%oSShLeu2U&g5X'#qLi7fG7.VqeZrk3@KrG"a!NQLMe5F3&i*-%r9LQoHSjlSQZOm\+#+o<;tI>%XGG8SbD((G!In(,U_89t-A!M+BK%AhO.08scF?G_M1!/a<Gn)</Za=l(?+*qB@nCPc8n#Y/I\A#dtfnd,c+Q@9YqR`eu1q,5Y"e,%EGfSd#0Z9(LlEhj`;:GZJu&S>`?<mS'U2fN"JQSo,nJu6[#IY]N*$ujQ8qPTZ+W9mqpUA00h(2)G3"reFaiK$S?u*jl;!bj76E,^%OT7WPW=HMPL`j'h1/jDh%a9&a*"V49+X!4,<j\*=7-Vl`*/;lmT`e8/9%5R?Y!7n&CYl"+.m%c=WF^N*ah!91M9=rhMeaCBjj!oM%`,T5r'URUW)#8,bjq,YE<aiNRm.r4*.9RoM8KK1:cYQ6&jNM,;2[tR!7>>@-GV]p]eYsEbU-?g/H\[QrU*.gT9;1,[:4OJ6f6;5a%3f6oS6uT<6e1/CjTW(`/+LXL[c=6@T$mcTKOO%M7Z\U;Z*gP@"Rn_Oe\3"6jbp0'C7d&e1EYunN]J6-W@NN$%1iFFA:V%fSU:1t[%/VA)E5h%TNP!sJBnsm_XX%'o17k*"h#[MouOdo62.bi++get/t:Dd4[7:s*;67@'!3%Pl2$A_eW?nE!ZBmY_'^fWopB(oIPU5nOV%=@s@NCb8YBdFj/hV&gp^e1YjW5E/4dMB8%"AOgVe<Te!%TgX9$"g2"VpD3UmgboGi)$^ScnBDh!89p3DclkHROP-UK`>,I!T9=ts%HOCi0lIuL`-%5Nif:POND5Kg7>M5-C9%EaB+Hd"cJ0uKeTaZO/Khqu1hH,7I-Xk'=;"'obFHk)1U4rj`91+83C>7[0a?9*n=?uW1%X>q\p3eWMc/?+r<VqC':]$Zm'G.`Q%F\ZN"JA8$7As]7b%G9cWSHI`C[b_&>b.7g/-&[#+g1#4S>"WtKgA\`RD+A/Afo]K2ebR=g%Q(30e=U6>:g0k/UBSje95un8SiRUBQIN6%=&.+ZDj)QYhlQZ!N=[`!3cY3f%4n*t`8dHYR`:g)@O_+0`Cb%Sf9;ss:[RV*R;]Mla%ER*/=3N*Lo4tEuf.OcWRPV:33PQN1Y3n.oX[)qB4/k<k^\gMqt6O3sULE$n$FRo:MFCc=K']$Wd<E#hk7u*@&fc2tH1G4XFTMR+V%&g5/:dSOiU_6"_M7u]8HSTCg5D3N/VOHtb+FAEm8/eIBT\-C/T8I>crZ99(UN?g7t"532_.P5_)-&h_FLJ!h=/Rf+&-6+Jn'n.`d%Uf-tFVQCLW6`%Z'OqI05I5QOVp=3]ulY<PfN*#[PG?1a?.O26YoT1Ymnt\[lb3GBIVhr(#CC`u^Yn)AB6BMea8>h9c9pPut9#=dD%-@W#68.:e^ia`>eVXr+B'Hd_;,8@]3)g-?COhqHO:puXYM'c2nR^kH\X.<UI*1E?A"H"M!)t=:K<11d)SrTQe32XkAP5W]1Oh=_G%<2t(o$kV*,b9"S*j#f)Y.hJZA3n&n<?0EHb<c0+M:h=5c1lfIe_7RQ0MKEO%`Gd7c,1KN)7#-Ec$]^/RE/BSY36I4Rg:B217*I\A%*l)'$r0N.W4qBXl>jB]/U+7=sEA6;[PTOh7N%*[8DF8TKM6uV'37eKdq_**fE+][4[)P64.Z,2ieiKsTmBo8tO!=3F=X:4+f+u9;%2]O8`.H18u0FYYo$mN[m)3nuK7d_[)k@]\:F+$3I0QIJfCEGpf((@8nfB!AX@;Bc%%Qo.cS@7m@lr6VV^D6*;=m/ei88.J6Fr2e1%\PUnB!g32hrW4Tg\l%-]G3"reFaiFf'>-u2I8'8oHUWM!i7VFIi*?G%Y<-^*b`rHoP)#E?TH.XIDg%Ah(!j$IG7h2$Q#1)&DCJTK%a0Xo9i.A:sdmOVN(.&!Eb([Yr"n+Y4(s]SkE0)g>(`7qG^mrMb6O/UbAmCNSJF3cj3%0;B@#;fG+F"o@Ufm;D@p?K8"B@^2Kq)US%K_,G)&UqIfYuF?.iQf:SSlEFS!SP1P3*49IP3'kN>-A[*3L0K+/>E$*A7U\=\DC;i1"VX$()WD7dn$h-NQS]8,I`o;o.uN$*-C>$%)a5U#!q+nWemN$F0U.)G?fE2ecMg_B^p#"Ua[;$2i@lK.3(cZ3E;_ej_i;gIZ6QiCWq/#Y%^nUs=n=g(\aD/."[VG8_kZ2q?Y8V8%bt$\;5q08a@Fq2Ka[^0u]Z!RI];&p-iE^pcCYk&n[^%-ePcF=2GOVl[J:$kX+Nj=&HlBm;0(A)_3kGsrlj,%Z6QRkrM[M4,K?,?d%H*3dgXUsP5jut)Lkl0X'Mj[&'&?]t$9&43W=n;i/>BuDej"AYQfQN.B\_LI)Ep[B!q@^$[>aL]S^ZBn2N[;_cjV-EnkW]1u@;T"E%eu/2!!\HZq&\P0Q?in>7TJ+>@NS>\I,F[3<Dk;"o,9j0Am3\;H72UXCl(b2uN*BH\&K,RT,u,4\c^!T8(ID7?<K]sPfRFnfCN:[-%T`irhQ\;5:i[!6967C53Qh$`[VR([hhkcSEO,A%1[5r?,e@lp6,uq'-N#S#aLl-:fI-RO4/(tW)*/TPpJ[IOZTrHS2MtWkh?1c:9%]]ZH^CnH+)X.0i0jSgT<Rr4i93BuIH&(`,NB_6Q%oJ]$Aj6c&aAh.O6MB#dt,a'koS@BcuQqh.+bl@q8>F/SCR3Fe,gWZ'C:PWCr%<`"Z<,mXMdFZ^YMk!f??!A)+J!<#fk?jN/EhM0D:J@3=N*#cu9oPi92fIHsYOo]Zo=`9a&11<-Eee11,8NQt&9:f1HfedB['cl^K%/N+&hfVEU+UP?-17#p2P>=-3diK=[@XJ+sV_as><C/Er!at3q0?;bF)9NWD`-]?[fU=/Up1KIK!-Y'0&3?FL2IiR2@!@`_Ra+idf%OmsD_$Af&KPVjb?mHHXKN5[Mc1@E34hWFJeUK:/>HJUJAZ`g"'E'bS)h_nnRFH1VILK+'<A+jS,Suk>ZbsS0R+`+?OXU[>pdVK(o%cZJ7$b)gMLE[dWM>gqB?G)nU&Ws6g&.'P"-RKtVBN_Nb&/6'i_^7?Ll&D[R,<ko*B>u\D/.3iZtH:_6;<#PBMR]MTBC<mIg,h/kA%'g6K(T%Rbm=fS_/)R-bSE0`kKROa1/P?Vs7gt/@?$3q9'4mkn;^9!ImLJ:>AfFXYe"F_*jadJ=g[t<aG3t5S2QMTSrXgbIoClt50%S!)sGCi%-SLO)n,Pa#go1+f\&`l<S'(Ks3iPS?-@P-H&!'Pc7\C"BDsP`+pWEZsn\.lpnT=1^!/#U+s:K)maE-jCC?<]Vgq:.I(F%eEL?MJ>%u"hT=7RPOTp$,lnZtjT?q]U`)j_!ah]G!uM/YSS9k9h59:E;7e\q"u*'P^ubBVTN/X89^6(R(!bgNJGS.d&=m.i@pcN@%*KLFS4C+'oes]?:NlcPXRV"u<VY9-fc5<*mTs2K-S4qDmN2,%"m2314Shdao,eFSfd<m27*QX%/muHVQZY[gNUaB,uhiaj%(=2p$%R&V^JU:JORhOGaXe#cPibis!R'g8lu?B7YtDhW#b$KVR&!@in!7m&$A)*mm%Rl!M8+e-F_\0FHt\g8d.As?&S,M!p-93D/VUtmjN%5R"FWd@MN59Bqd8-#63'ffhD]&13*]Oh*C^5u@lh@)Rd9@9Gk#\.log_=qo!A&f2W,KeM/Jc?W9da43iE<dcq[q"p&LS@)9j/G%+%Y*[WeQh$0KVNZ-p>_(jBA,W02P4Knal\q)<<(Uc,/iD[JSK#Ebn_+tnZ<6pU+#9XR/j^an=-O<*G.e$e=CmiG6tW\Q\(;0;4Qo:S%+mX=83LOLB"kI',h86VTH,1Y)pHrd0H+F54jG90nECU8DoiH,?QRV''G:a,/974f'U`:)?(Sh4f:'=`n%H-?WHK-d;hkoLOPKF_F%?+P(OD.1<JU9B$*$;q)6OM5*PXBt)jlLNG1!B>^qcib-C4Y(Qk0Cf2!H/!O*KVmQX"MMA%0+F[P+k6?/MU'd1S(IMQ<>=sVa'gkf%<Yl41?lBD"73&ZEg]pQ-GBXOqmftW$P0bKJm%c$QCei:oL4c9bB:<e&>]OliW8Nm4ab@CbY39\-.p'^R$iDmfOsHV3L0G%kMgu:\%DJu+\&YP(OUkBsB=2f-9,decS@aCJ]db</kNg4)8Wha@d/XOB0CWQ/]]aC`LNG1H.8#quN\pO%%UT',m"_KP%&D$.LZEioq_U9`/%+LN#.Jn1`UP!Y_OUXS:[[AW2@iS6A\PVeB4;-HnF%Cof>=!?+?*h(CJdH]D"Gg3<\adktX0oL(\dU+fR:EluscBWM^Uiq>RQsL-d%;,^M[J5NJRKV:p`KNo%k(33mdn<!CCa`sGIQEt#"4L\Op!HShX^>t5ir(oj`?CX#Dl_cNO)%%#4)M2^CX,]A8WmuP,9aP6TGg<R"%KcresF""NQ?:43elW$K$cX##Q^/f/J*q+O(s8:AV%.+*Of7PT%]b=0q]VU?A]cjD,7h3$SL"#"lB2&\@H`FV(Cbm9]d"Jn>(`Vj"%jEcYhKiIA`BKFnGI>ET#1$oQS+\t7E_#K'e`1<0*ONn7%!%'(nU89#*C1OTU,_b!'Z."pK[\r9s"-&+.R3puIZt)_8B?9b/HKA&]%F4YNBYGI59'EM?Plb$?VW+.?9119!)pD[95iVc1Lr33AUW:u0c%]Rh_:5>^"YWZj!$q"k49"Cf*%]q1hB8EXt?Fc<pgbkYidl)P3%(GWRW'2&ZXC_H@8LaXb&V?"IM+Wr#"8.EAK\"46l>c*2$._a'$a:W2_cT0!!VPFNl[S(M`!'KClEhR$%.6:\2qML&#bKN)9>(+AC%OYI"F@n1/Q6ucpBFsT^?JpN3a53=,ul!mJW'#OA3S7@cY!^[Q\e2T]`H\PcYWE1_64a0V5qm8Ag&h4&&nuHBl^ec0p$rp4\-6GX2%P(F%Q.'ie."IfRVrnG`@UehkV+1!:aX?A^ZfI2oKUr`teVtLPH2Um'7;VlKHFLG!6]&<""I&MCKQH[lf445@9h1,miH'j\k[1Hbd%6V$XpO!4j*;E+dI=]#7eoU2q78Q\R1TKK@+g<d.9;P.4:]A40lD3MS^[JKTWGs5`tMeC^,X<Gk<%klIb;@&,)*W`I@QU4C#g1a/M%A"F44n\p9\`[N"s"nR-6b,)c6Y3BbpDNjAhJLg\NB[rh%<a`FF_8us(`g,j8amTQK?GnpWleP"]ogoK,78p,+Ofanp8JoWt5ftsd%.a+.31Bc$LY?]4sm[DGpl!;Jj#02Ip:^8i/jWF6saQG/QRnGp"/M!e*)BuX%]m*+`A.@[sV?*M>2eRpQcq2KX4\KP6&B3$j--LrR%VWMES?8/>U:iHD!dQ!25_$N1M*6dr*Dhq!%cSWmmFX3c%6naF>&P8u\3=h[XKWmU%k899U)@!(<\H\eAV3-&#?Fc<pgbkYidfsoZ%UB0+I*ke-X<k$EQ#<'Rol`A1=:-ofkmg(h)F$!sE<6Hd$9ath(iAnr?X[f?NcB!*%k4T^fmCITY;JqJ03npQ@>o,[aEXLh5P]n,"%B%b$9WN497[hJ4R0K!Zc\i?E574j0,5.AsSEb+jUj,DNjUS^`6Zll,gbO$0f]qeuF<3jM#SaC1n1"t8s`oR,`Z(67a!6T6dfJmbl%gG0[tiO17W5@c[_Z9jHOc6M4T_h_F=d"Ah_$\kq+$rJ^;ouNtm+f=L?RW]r$GpBP$DkQcK8e<cil\C'J2_rm60GJND\U6:WNhs*W%]E+V0d*A`Md,TYaFhM=AZj*3-abN78PTe\:G___e1.-B5G3SB(4C/gXC@5X,$YZo,)j^=<=8@Zb42A1VgN'Oq3-&RJ)/M3o:`XRd%=[GtPX>N0'(o&Ka&\'\q#Wu:+aRp0oC07otHCgNOHcod"W9rCYm$M"9bNQ6e0b[GW$AXLC4<_-A&]71TeARn73T@a90^EK&'\9Yb%ZH]LQ+dK,`9kX>;NP&K^`B5@`:k_4U>=@L.Z80<MA//!,51BUS7+'(*6lT%)Q*1WkN`^XScEJL&PGY)$ldVLLf1YCo96nihe(Hpe%;PTsUi)lp^GAb,7A)[eA*Rk5Qk[L7mZAfE1M2ekeEd*U_0;K.OGAMWSj@F&^du\(WJ:&Ei`-dt5\(;2%AaBeGWFV!&3nr7eWIi86%3)Gf0r@)4a\CA&Wn<t30L<S?l2qkog&R\7+l"!gpmKbBS=AsOgYep1oUo(l@XsO(L[EpsE'&MB?ibVN]en/'FdX/C<:ks_Mn7j3C%&0u>UeMa5pC:f^W[9Z]t#0%i5BN/uZUr]M$;KL--QTF5+hJq.hZEAB`0^E$i3\\KF@\id-S2:?c.=PfG89PSu<'1#5-:b/Nllohs%#th`Tgfc77H\Q&I5tE;;9[h\/p)S3aaF1q1bk<&=G-L*0$8urIKM!-"+h+:s_M79$XIWIW'UVqsJm;5DfUeZjbgHWW-9-S7UQ>*W%d<BE?E[gI&e+CjJ%<(GP-_@B,BD@]Gd(Fu/'*[fCPQN,\h[.IR]^$$CJD1fnR&'"O*2YT/Eb&j_NfKCbYc8U9'9F(d[GIK"f8KAQ%8QjB'VR(\sf<]>K5ZB<&b(T.O",Y7a&a9\!.RjUUHqMISE^[(m\oh8ae>/>+Ura3a:X9m_!cIWf1g(R4e=IgEO]\elb'WQFcM#B%%$[sBq#RKq,0Xlui3:3rOhL\oR'>hdTb-H(f)M/D5k`k!p%Ok5iA"!a!$#*gcJW1G8(7GG5=Jtj$\R&1;>fqE]Ra1Vt/oN'KW''_i%S<S"bJctgXa]BpGjK"c3nk0kLPQ!IP_h91".pq%ibeoC*pigpn@hRX&dr;aomCnUGk:m+^Q+$R1Ca06!DBa>R?BDq.BfEss!feZf%MlE.:$>`R!l\D?jYW_Bf$q#X+[Qc$3+;ieDp'f@:bBi8JhK.:j[SLBOeLEI_Z)gC4iITO/+>jUtIF9K_:HL5`r\KJdOXn0M"o3of%Ni5IiRN/U+1c??n7S:3<<.a#=p'f?B`-UNCaVrWM[SQ(E[=/6^?H>D.e3S2Q!%<U\S.*#\P@`LhKZH/P?eU[>B!P5[4TQB#C-^="%Elb"#2*>Aih.hp,7'8`I."kcr?-gVF>rL:J^cmeio8#Tq!tG_LAcrCt<.L.s5aDlBDX>fVUN?Vt^u1;\egpt;l*]"$Lpa/DK]+UL%S!5bG"gAEG]nY`o>J1BCf(771[]bCHnFY8e=?,I;%/'Kcg24EZ^sNQPj*Y?6'[YanCFn-6,Ya;p)[j^74bIH@G7iD4]!:a2\WljD%24a,M$hH8q4JnVAK\?>!bgOf$$6<q(;aRk**ZLi_6E7K$m9*3bIa-^l^Dh*+ir6SJQ>bHY7j6raG"$&m1q7BMc7:`9148@A<qNM$%MtjFeVbic:O/1Ga#GA3f2BGd0.[W>Y/Leh5.fg_oYl]iWWA*E[=t<Vl3;'5,Gc.$sB;TD._IkcAj1qV\Vi62U&VLngWpgXC,AAXj%61?50^TX0h=j&0\FqNZEQ@q5'CVl/b2f$i!7ECd!QIM9&ncW*N$qm-L7F+\,r41>e5_qC8KKj%L=C`gtZ,gsFl8M$63>ifFC:n2*%&u*]e8pUQ+>*8@a'c_`kbG^Z]e<D+#6*_!2<&0,aSt";%1WEu=+],e'bF!1m&EUMX/fITmj%dOUo*l:QL8F(F'YH/AadNjjmbe-c%m,fiU%<f?!m1"LL(VOi<n%!3pgXk(q[aAcTQ9feFJ^k>m*o`,%9c=le=ZE2UL'p-8Na/]&;(jeWfY,bpLpa/D%%F>q9k^QAhgVZ;%4[[/2A%cn3n%!3pgXdi^F[+&95[1":FUUHGn?RX[*msY7$!1&&Cp5-c'"kY0-5-FaD:T>LZ_ct6+=k,B8f$g&;G2aL0@:dVnd`:'%ZWXC5k=U=WXJ/(e&tFR=CY;9PZnRH'Db^96hY0/END?'RP#UiD@2ts#$*i(RS7.4q=[X3=RO2lJ;L=.3<3&qMe@P$n:8V/0aU$&F%W&P]OPmQ:6UuIY-G<=$EEhg7;G=&/JLrLZTEM+'HbQnT0L(^O1)@^tcdHF8f8Hq`/aeJfto5iCjfGb]%L;`*2[0KOJCsD&J%*2uk%RZ*RmBNc%q\6p9XT8BT*R[-Z0VeBd[];t-iPO\W1/SCQSGbIkI5(3U=O]R+5*,2q6fk4k&*$;mc#t"!'Lu>.Ka@[FcUFIK.GbN'1%VRPT\2nIF*;YR$KA<57ngm1h!l\9uL`u/'YOnBslj(tJG''Uq(V?"PD5:'iIm'X?d":PW(EsP4JO*\6K8liR_ol_7hDq&-YA6NnW%ak7kJ<NB/)SaXZkeI:+GJ<)K384>Q8;"8ne`<bi2q9]o)i\F`5KPt$6:d]WM&_80;-*(Y3BZL1:PZ_Xf9JSk::)6tM(8c+-]C..K%LW,o`A\IU7*CeC1!n^YmCCYmZFA*ti);K$J@qZ1a>2hmZOcIJiT]co\r4Sp2k]8qHcAtd[JQeYue-HZ.#_c*$YR!>pKEjae!.a_s%Yg"(u6r`0/Sn-4X;+ftJ3[*:30IP0]25IXW`uO-YYUb=Y,C-.iCCRg\U/)pIQC+8-Bqds3<RV&o[hGXEV]Ok/%>5.[@)$:8moW@g%$f""-+I2@kOcbaBSHl-/>Z4,ESt7`S\)^Q@"G\05Dm(>99Cs^0]]W#<1].$X*0gr]YG:Z@nVaggL%2cF+[^`>/sP4b.<6^!(hQIl%#@11W:`-<')8k[%98+[hk@@ad!Pq)9,id#YjIL>mais&dZjcYPidYVSNS:(?8:Rt.`;Zts'5\'L#CLRq]GUeaqh*(:=.>M^3SNsE%MFE8t%RD[B#sp`lG"*,qM%NRCqm9RhF$mn$2_X[$KN*@YbE;HS^tKF7@"T:6T%$m5=_c.l4P"i>6=GW53SDrmM:Munp]378Qd*$s%%"m;F&/ToF9Z(_a7+Sr"NU:Z-IQat>o!sN#lYsdGdSkm;3lE=-S*GBt[L<`YK([0\][*bFCt\hB%[01"^bXk,QL?[RjG+.QD<JXA%J-EP%Z[:M(c[go@_+I/-e?7VRBF7/PM=/2'3At-i[&M,Q1tN;d4fD:3Q#.tr&2f6JX:-J(!bL>MB82E]="IpfE$n>L.p9;m$P7$n%Q$a\],RLI@f:;e,;#kE+:C3Jtoh&sMKebMtaRt_-jAN,3Y39DamY0T1SeTGg,OSLI[R$fr-JBRYW3?ETTjhU)\1`C]UNdm'PbeQu%r1('iL:$[HS7?#oG>6`h$>Jlb`6s.fX,os)P\5f[pC#P1eHAaN[d[4VmAs3C`+2UoAQR#;(^Du6\om(KN/G<uVSt0%8dO0-L;V:$%UbX;@Bj,Z4OP2MOH:bej.IXf_3npRgeUb:5#KQ_KaRtiRn]fZ=N]^VB/;s4+]BHmJ\['#X'fL$19snl&VM)0:4_NEER$+8eEXG`l%L1hX4?Fc<pgbkYi;t<g,HJ"-0]k:^J70hE!V)UnP$NjpP'#P&nN%d1YpTOJD9C8bX&Xid+p@OkbFF>N2FI2F+4[ZB=e>jp]Xc]Jn%p9gAc<*:iTml@hGcNYitJfti,j_;QnooD6Ih-Y&-Y>%o;G1j/.s*IQc.7Y^"7o)08$bD.[%,mIa(2+_2*@G@h%F6F63cP;nVW'%5%fFqZ478Y>9)M9T_J?g:Ia8ka:D);%T16^84E%MN49c7/9_^6/7FZn2k-#pW'L0QCZUQA*&9[=8cYIcI''X((Y@lnQ>P@o>Y"g-U1%Db,(Zi)5";i0k96)')=W"XMPq^+UmDMG!7NkGjDG\WljD24a+jkNY0qZ)_s0:b,D!,1:Nb@Yb"#\eUsdiMt)]O?rB[P-m7\KandG%C)!,&<lNEiMF**TRjO=m(s[Y53X"J_RI,TYNif4<Tfeh.PaMg_@,FpPNPsZ_\<>U%QQ[N)]+F`Q>`/]*F/sH9LcU;_O7>Z8`XKCa%;NG'4).K&[VWini&7fTe7e926p"2l#enMCnACTF;XE'nG"V&gY"iEZjd&`bkUaRD2.h^L-m;HZI5Tuku>&t._?D:4=jSa6jBBr=b%gBU=9'Dj]QlB$k>H*2^[M8IrM*OuCOG*4UemA.kW\(0:,dQsrZSS5ZU8DgmMp2.l.O`-"SZGeYkXD=)9N`PR_+1KoQeJt\Ber6h-%+S<5F0fo:pS\fg@Lb@W,=dl/+.,Jg0*3o3Z$/jGm9Y+Ug9e1fFa5!70RdR7Y/sWN+Sfu[V8;\d#Yp#2r%Y2>A<RLjVf#E"D\6rJf%+X?p+NeflW\][QZ<8_*2jG:4Ak8]s^,8cj\2o!SI4[VX/A\E,`A;t:agXdoOXe=ReG=Z2&Vi7>A5V(SJ,E?o:`U5XI1]pVM%Cq@d%&[XeH7J`",2$IIVkrHdd(H?+IlRN1iFL5]%ooaX_;TThkH=gNn6uAMYS=ptk:1"\nU]lfP/0#*i99dW,ji=bS^iF]&;SI&t@7G3N%7t7H0WC_>A9uGX(ZgjFY\KLoM(-9funjrQ!RQmbELHL.p'1N(GX"ecQos5S"3GD(#A3YqPP7%8B%L_Q\G!*o'qU/oe[nTM6O52:a%'KWu$KidmIU$>8k6!dA.hmrj"?#2d+md;j4FLu=.@.hCQ$0!?A/Tp4ZNlGbSJ5kC=6.lBUH"N7GCt9>=dZh9smNeG-Httes$<\qn%/0MTe*Tb@ZJ+L+2m`l@]bXLkj*3b0>)(N_59L?q"+lNlID:Cs\RY^^H.61V^2H5;9c`O4[n<C1P8M"!BQ>mMRg'cR-W#B/5Zoa`M%?E.DD(pbPZX?C&IC`"$/PGUd5NN#'.Zq=Q+>UildRa1Uanj@_,k]If/mN'q,Y+Mu+&1mVLOo@X"lEZG$Lr>C(Q&rjsIie?[.?N'f%FTb`(g[IQX:"W0W7rHY7lQu5HV7btcdkgm^g+Y#H_RZ7NI"sE/bIn/d4n_ms]k$d-Cb4\.^sauN5"SWS)#ZKi%C,'fQp[nRjbc;m%/>P/TOR"2R'iN/>ko"NKo.MR%Nh^GXG7dM1L,q=;d:[#W<--tUPk>FSEfM^O\c!7r*(%9O\PV?XCJN29VXfGDC"S]:n'*^T%X[lj%KsE;l).Li>N(SdZ#&HNB;4B9E$=aTBmld^$cC9"M/EZ;T!i^EqStrS+9Nb3mCe[\3!b]?C(bJZB)38bo2EBN3FNLAlgTKdW>cV>V%lWFp.=nc@2.].sZ42GcO7E"d[iB&2\F:`F[@uYWVP16;>Ju$L#CJW8:2QZ]=6W;fuTls(Dc]IH=oua+o25]VST+2<c9#<8KW/+_/%A*_"ASK2Hb!SL@VEH/>SNmEe;l%)F]SYQfH[iS[N6J.lI71D'4Unh]kWp?821ITihegm*XT"Cl+I2^rf6Igk-p[aV(ltZiC6<Pjk%T*FP?-e4E"i(=?"ENt60+uP]^OX%IKOc5:S@=*'0g@Tuk\]mW8oZ;fM/Z.`J*Gk`>QP[RDK<#i*HkQ`EG\o.f2ro.-]HcMDI*/+A%JJc\gXLK!c!Hiufdk+^25[!U3RFJo$p=%p9(3l1e4-)WEgqZ-71s`[!X]l`8hik+]Nqir+MfD@@:Yiu0l,4.F+GT&+erWW8`3LfJ%&7Q*j@`Yn6cf&>nFCNLt&BgBjho1S7?a(#eep`W<lk#apOXYM?RQ*TYB[fct4$mfM5IS*DL'Clg5TW@J7q<#;#g&I""ojtT`p2JH%OB)2"8+l]>iN%``X<[>qrs]L2?'&%(S<qa_;/,$h-Zo\XI!ceQ&?f#4ecGb(n@o'J55amGO+2SF++F1XO4:`ug53dYZf%H#I3i4J%N0f2</M:q^'#3&en:h4OK/^+ZrJ%*>7On3;"+%)afi%<ISQV=aKh/4<%jK56e:;#"iJjaofa`XRCu6(s[+XDP_O/&G]3V>=K82:$%1iKlf*Xe]p2cQK>@D*JMDdJJD,4k)F;>YhY(q;<KRP+!LBRjt-U*br[%bcnV-\dM<La1b.&*V$t\#p[-3#OulET>Qk67.XAg=\EL%@M4kc]G8s$@[!?kEW$+\XW+b=3YWY)=O2<%mNK'6m5^SZD_*5$k&!)hb^Rig\4)'\X6rX6#*OF9hRM.I:YeCV1t\huEUkUA`lX"N%5'F.<r.$_[=Y-=[ciQ/CNLQYbT+haNq>`HD.+HMg_0m1o?iulQVDl(/Nf@D]=?ll/!\LbDc3)gD6\XeU/#)KNg=d=b<>uaBL6\8T%k>:@Dqro'OmJVR)UY8i-3Vtafo4ZVpJ7n/:0'0>6@J>:LHfMg:_+i-aB<rP\4GJtUi!tn*h,p%X:^QmX:e+=cNZ7jnPj!5L?0B;G%;$@\g3VGti<DS(Qak:mVVZA.uVRll1[l;mmX/jad.XA+ZEDsRu;Ku$;D]]1lbEPG#:sI)44)!t]^V9*>P%h7O!:Y:j=*WSeflA=j%GaTAq$ehC>DQ48+$c1PpPn:*7B;LFp7:HZI!au]kj:*jHgB488J96SPg7)ipTb]M!Z<>B77Z%E$0E?5Sj*GX>jlX[RZje8CKTYoQ%,+)oSiYtH3le<2WAMp$nnmUqgglW+Z/HTk"U28k"i`qLcTDF./B(D%,m`(J:<[_C"dCp8\1s7/-Whj.VE#P\[/%aS9O))U]!&9RH%OLddc=Le6<Wl9rhqrCL$N#&>!UmhFfD,FTOL"Kj9`+6)S\>Y?7N/455HmLQr!g*!r?A@5tKd2i#f**62iqc0EissU1VtGMS*\h'0%(1pB='&/]'?0DITX>b^`*s!g3bB1=8cToJN&-Es]5D$JgQ]WCmi/%OQMF(dsA&/2R$VCY%pgGN,nBRD82DAhY#:3-e'=R.ZUqGWm%?MO\r\e?L&R9XoSL',,-3JLDl^&&t$?s[.(!`u9(C_nV/$n]4-P9-&<cm+b=%7JAbP6Eip[VEfZ#W"OrqeiE/<RCoWUB1LqS/Fu@%2S_.V5M$be"dhj]9k)A=;<S#UB#*nM<[6d*o]lK]7>a"T\Uj::^ii_kSdX*XY(BdA8>n80>ndmd-FnA6cA5_l<14f]O/YiOn=&`#%`F`+pkAI&tqQZ>2Q=a:2`I(SkFBZmCN>91a=Nj9(606)@NXL+eT>b6#(3<U&;;mFY21"5>NQ$9ARWr/_-frn@`LQ1IV-D/Fh9P0%%HtuZmYN7?l\Qd9T_Hs9?/ES?QZ>BJK^8V$M\!Wr+*f"M^k(m*X9jtMuO6oB6`>i[:[.T@QXAUP(@_O<NU0GiiA!@c#!<lFuX8+"O%?alKM\d7P$F%d+M,?Ak9lC1jr9QEQPD62kBoj(2)RMXJ0=SpWr;5M-I2+KZQp"<F<qT[Fjgo]^^+4RFTPHnZ/e\$(*c9qPN^=j]&%X#[iZe!sM2Tku"&C5s7d\b)ruXPj(q2(''oe?A"8KIa7gj\R3r\!hr@Bg&T\Ff*fuh29`&q-Db&YNBBI41`r^25V`!n@k>%MKnAd%o1AAcDD_[L^NO_(R]g3!m8e:u1$3pB?f9aEqo'PIQ,J&)0.K'=/`p%bK%mlU*,F&MFGot['2_rWnVYr3?d,GA"/OHeF7@m:k02O-%h-pjPjlO.BK4Kl^?Wt[OG2c2R3R5!8[ph&sh:9oVjiB"30_;[lBa+@odonqMGiZ9F+>/*-f5c6[AaJ#hXM&m*YEQX:rOS8A:fZ4e%-*IuV%O#O42d]Wmam3V)[)i#7NY5@gOaJ<B4gnA6;_7!!j3fO?."FEsrBcP01%T**8!,7G19m"[mlY?W&M(E5qRVA#"k2X`*Nq!8%EV/Sl.dj7JNoMChaF%@8lZuq$a0f9p7itI1Nn;Ua:(@._^*puGYN%$&\9$iulStb8D*28F+&m:ubP7EjT7-@4EW#^Cs7s]j^T!.f%c[P]/gUFqGpXpW0rg3W\o]bbHhL5+k5P=d2+91iLTA&0e^XTUi<u2qN5J+!-+9(?[PCKOX8,lVphn7Yb0uA,7St)u*`o5n.(R>7p%"s'^;lrIU.HZcQ+3;+[QGhD;IFfC`mHOicq^;'U>EgS"Wf)H.8L>Q`oLBA2)lMqmj5GS)NY7L8r>S-C_EJOn/Ki\jWbEt'WVZ,^2%s2E1Q?bCY`l7W[Ob5'Z8h<.H+3laqOi;qWcF4XiQ^0-5h(CcL>SbrseMSB<)QK6&#2DPW-=`SCiK>*b5j+$r(bglBo<r^i:&MCjL%:H;ZeTA[Xt/O>0K"GD,Yq?/u"HgWm,O6'/)T*9`;YPuapc1g,Vc.j1cGJ92XT^_@Sphc;@hkdX?4&iY;LUsq_:tP[el8lZ&+90VY%q!F@&SPM:XDgl^%i1jX2^\cc0T=t'm:N+#CX2!*?^NfYQcef>F?tpd#H6;G%=8-2UITkooLBZ%oJ%C%&md4*):EJB*]6s+[T7-@N%+$]c&qT$q^nF"aYr_ts^Thg.9k-r,%pu--49^q3U+''nHhc8']s.ji*KAZX?rYM2VSU*K9]O(V6S&=R;"m>(MBf285n;e<.ecQ$+%<_Qrp*/>3Ro7-84TQU9u5M>+l)-%?]9rXc_k(5I\8$7\R3WnMda6&dr^6On.?>+fajb8_,;Lg[!YBqrKOWOiNEL(EC01j1=Z?26=%lQjHM`V_ufFKCf3_0o_l@7W;XQdi!Tlm*P$9?ppqi6=nc2QW7`?1cW*DGVuFR-,Y$2QW+\jb20=MO2u"?LlCBFmP)?eFMA-2^[hC%;$Z+K_:+cr0%<%?>)\6n?[^s,36RJ9--7$;?6pN$AAYY5D"5)>19`;iid&o&,g!ib,b<-O/DU2YJRqD@.kp!D8HtJ,s/SquPO./L%^Z-+O*rbSZm0pGWf]VU/A&LS9,TmL()d`Kls7BdpKbn!ln.lGh)9^lf",;h#a51'MR3WZj4*Q8\2*#h:b;lro,lAut\ImY6CT;`\%0fg:nC\CYA*a`U*j(kaTC\$@#+_31he\?W'C#/%&E@fA!riBV=48Rf=roN\]QZnerqmq?0MPt&I6B34A`2^d,4GGD-DAZ`f9>]dF%1:]Ro)qH8F]!enT_b`pRi2J;:WL_Y$M&.*&pgSjs?Y.TFFBFX2HI?`<,:j;qh4ZT$Nq$\m,[$9&%D$)f,\cj]-g;K#41J`'QJ6]P%Y]uj-O"WETnPoel8;@?Sg[NtU6EZnB\`#P&O2?=t0YZm#M6_nJd3bkb3n>Per]42f@4\Y+cd8r"S_"@0(E2r@@Y5_/A^HKZ=Q!5)%h$tb$o)]?t.(F6dgGB>B.jT*\<1#E]Oq!VNmDD!,L92lC;;b^g/@Y5n@I[6J*a`a1j,4>7^W)ogl*.r<#Ci4S&A*+n\0.&a?NT92%G0(U\/+f9bAAak3W\J$U`th)J]h)=DkI&4eKa']SfV$8d)>#-o(,P@eRD4UZI"pA$1WY(>,r!("OMoI:ri.5XQmD'Hf1A"-/lBp>%#tsZuG$)E(TZ7ifo_9ngI\aj_oNEXZa'9J.:>gX5/lqD1%-,NSajKNbZXgs!Bb#_id]rXg+cH:n_K%`A*>U:bkjcUr4hf(3+6Tk1%:l9n?%<sRN(=cLuK!LGQ@!Gs#absn7.1"%M5n_SqmUb[Z)n&k5`1)GA[bB+'ptH=?QQ#Sm@`'6oD3tcpO+2Pp"C\cTqliU8!4U^!%`QK4?o7fo4oNG[V>t?kIP304=,TU)XT^sL=\Xh?D9O;DZj,4@mI$Hu^cIl\sE#0<qAClf7-(,>\,-R\K>Uj!am_=[-q'"Fq-:qs4%:=:k]p-Sc]b0@SB9mNEqO"[s)nMU%<3![DX?qW?r>:\sI(XRE2i0?T5:dPZN.P-::":].0LR-jDknkUi=7"-D(<sL48A*08`tqtO%p_mpsn,`&j%#EI&:0W[t?jNuR73ja8.:s,XeXrE68SrjB?*dG*l3Dm57T9W-Da-;&BlZKTmXXr[-?m(sn'0sdo-]9#dp8U:/2Dp+%T,eo/Fr!K#`NUmGG.XLYD5>:%DOK9^0#V+BDo/\RO7hZ_#*PjoK\YsT5.$Jr(VAm+T=AMW;;U+L#@dNV/kXd:0FQ[tDKkaCpPNhU%X?qS9gc/(XidQ+;4,U$2%JS:dHRTZ@h,23^i]&eS2Kp.p-@CL@O'QP5BuNAU*O[uhDKk`XPrR[I`mo`M[V`9?ib(c16kU^K(mknm%]A2ea3k"!b,huM*gg7j#`R+@krj-_MaWu@&n8f&sVJU@_48LqP_QR)Vp'kBlXFU7r^.u13LNQpZD(8ZTEjn.,fLe-RG@a$%d7qsb%JGYB#5ugn@>Z<KqXYdTC*IV`MDJtUo`6H\M..?6r,nC>_nRtp(c"[SpO.4ql\N7/2Q\bu\*HYeJheQNd?SI*&>JE)l.G77U]A:ki%<q;-R/uX)H*a$A8^ebY<Jh<:!fbj[B8T6ora*E+/F3fU0^PCM3rV&&d^AhMO_tW'/D#"!VR18&'&$t6l(X7]JoDRuf_te([_tW&3%2D!`r2LPP<b_GT$LY;1qC%al6jGRWfl".3[Gc6l[HKGB>Iq&i_)]tpmo2ks!$N%G`qG2$Jmp?e(f0oY^cp*HbH[1G-h8%W@Yi!.`%ktcd"mDCFRqtSh=Tt`mtk'%^"3e!E8\)X#eft22"6`cf#Ic#X,#JU!2h<uFLr5C<Q\mE.!qTU,]paJVCp\c]@;sq<j+1+7V@`*]:%r_.N&bC@n<r.U-&l-9P36hY0*'0uPLr]YO<U*'%)\eE*_KDn&aC%(@@mJ"/T_f3@TA/a6`p!5aL?JM1)r''k`<$2%1:OiE<n%\Yi%o3:$IrVlbns7,gAds(8RlKu@:s5i56?bCeo48/C,rP/9h.j4MI-N:gdJ,=H)]_m8bq].W~>%AI9_PrivateDataEnd